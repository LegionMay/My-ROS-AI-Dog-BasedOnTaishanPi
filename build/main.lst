ARM GAS  /tmp/ccOPlSXs.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MPU_Config,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MPU_Config:
  25              	.LFB156:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "i2c.h"
  24:Core/Src/main.c **** #include "tim.h"
  25:Core/Src/main.c **** #include "usart.h"
  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.c **** #include "MPU9250.h"
  31:Core/Src/main.c **** #include "servo_control.h"
  32:Core/Src/main.c **** #include "string.h"
ARM GAS  /tmp/ccOPlSXs.s 			page 2


  33:Core/Src/main.c **** #include "stdio.h"
  34:Core/Src/main.c **** #include <stdint.h>
  35:Core/Src/main.c **** #include <math.h>
  36:Core/Src/main.c **** #include <stdbool.h>
  37:Core/Src/main.c **** /* USER CODE END Includes */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PTD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PD */
  46:Core/Src/main.c **** #define MPU9250_ADDRESS 0x68 // 或 0x69
  47:Core/Src/main.c **** #define BMP280_ADDRESS 0x76 // 或 0x77
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PD */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  52:Core/Src/main.c **** /* USER CODE BEGIN PM */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PM */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE BEGIN PV */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c ****   char buffer[128];
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END PV */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  66:Core/Src/main.c **** void SystemClock_Config(void);
  67:Core/Src/main.c **** static void MPU_Config(void);
  68:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  69:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE END PFP */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  74:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** int fputc(int ch,FILE *f)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1,(uint8_t*)&ch,1,10);
  79:Core/Src/main.c **** 	return ch;
  80:Core/Src/main.c **** }
  81:Core/Src/main.c **** int fgetc(FILE *f)
  82:Core/Src/main.c **** {
  83:Core/Src/main.c **** 	int ch;
  84:Core/Src/main.c **** 	if(HAL_UART_Receive_IT(&huart1,(uint8_t*)&ch,1) == HAL_OK)
  85:Core/Src/main.c **** 	return ch;
  86:Core/Src/main.c **** 	else return EOF;
  87:Core/Src/main.c **** }
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** 
ARM GAS  /tmp/ccOPlSXs.s 			page 3


  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** void scan_I2C_bus(void) {
  93:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)"Scanning I2C bus...\r\n", 22, 1000);   
  94:Core/Src/main.c ****     for (uint8_t address = 0x03; address < 0xD0; address++) {
  95:Core/Src/main.c ****         // 发送一个空数据包，来探测该地址是否有设备响应
  96:Core/Src/main.c ****         if (HAL_I2C_IsDeviceReady(&hi2c1, address << 1, 1, 10) == HAL_OK) {
  97:Core/Src/main.c ****             char tbuffer[256];  // 临时缓冲区
  98:Core/Src/main.c ****             int len = snprintf(tbuffer, sizeof(tbuffer), "Device found at address 0x%02X\r\n", addr
  99:Core/Src/main.c ****             HAL_UART_Transmit(&huart1, (uint8_t*)tbuffer, len, 1500);
 100:Core/Src/main.c ****             //HAL_Delay(100);
 101:Core/Src/main.c ****         }
 102:Core/Src/main.c ****     }
 103:Core/Src/main.c ****     
 104:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)"Scan complete.\r\n", 16, 1000); 
 105:Core/Src/main.c **** }
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /* USER CODE END 0 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /**
 111:Core/Src/main.c ****   * @brief  The application entry point.
 112:Core/Src/main.c ****   * @retval int
 113:Core/Src/main.c ****   */
 114:Core/Src/main.c **** int main(void)
 115:Core/Src/main.c **** {
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE END 1 */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* MPU Configuration--------------------------------------------------------*/
 122:Core/Src/main.c ****   MPU_Config();
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 127:Core/Src/main.c ****   HAL_Init();
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE END Init */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* Configure the system clock */
 134:Core/Src/main.c ****   SystemClock_Config();
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* USER CODE END SysInit */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* Initialize all configured peripherals */
 141:Core/Src/main.c ****   MX_GPIO_Init();
 142:Core/Src/main.c ****   MX_DMA_Init();
 143:Core/Src/main.c ****   MX_TIM5_Init();
 144:Core/Src/main.c ****   MX_TIM8_Init();
 145:Core/Src/main.c ****   MX_TIM12_Init();
 146:Core/Src/main.c ****   MX_TIM13_Init();
ARM GAS  /tmp/ccOPlSXs.s 			page 4


 147:Core/Src/main.c ****   MX_TIM14_Init();
 148:Core/Src/main.c ****   MX_TIM15_Init();
 149:Core/Src/main.c ****   MX_TIM16_Init();
 150:Core/Src/main.c ****   MX_TIM17_Init();
 151:Core/Src/main.c ****   MX_I2C1_Init();
 152:Core/Src/main.c ****   MX_USART1_UART_Init();
 153:Core/Src/main.c ****   MX_TIM3_Init();
 154:Core/Src/main.c ****   MX_TIM4_Init();
 155:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 156:Core/Src/main.c ****   //I2C_Scan();
 157:Core/Src/main.c ****   //scan_I2C_bus();
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****  Servo_Init();
 162:Core/Src/main.c ****       
 163:Core/Src/main.c ****  
 164:Core/Src/main.c ****    // 初始化 MPU9250 传感器
 165:Core/Src/main.c ****     MPU9250_Init();
 166:Core/Src/main.c ****     // 设置传感器的配置参数
 167:Core/Src/main.c ****     MPU9250_SetAccelRange(ACCEL_RANGE_4G);    // 设置加速度计量程为 4G
 168:Core/Src/main.c ****     MPU9250_SetGyroRange(GYRO_RANGE_500DPS);  // 设置陀螺仪量程为 500DPS
 169:Core/Src/main.c ****     MPU9250_SetDLPFBandwidth(DLPF_BANDWIDTH_92HZ); // 设置低通滤波带宽为 92Hz
 170:Core/Src/main.c ****     MPU9250_SetSampleRateDivider(LP_ACCEL_ODR_125HZ); // 设置采样率为 125Hz
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   // 定义数据存储变量
 174:Core/Src/main.c ****   int16_t AccData0[3] = {0};
 175:Core/Src/main.c ****   int16_t MagData0[3] = {0};
 176:Core/Src/main.c ****   int16_t GyroData0[3] = {0};
 177:Core/Src/main.c ****   float TempData0 = 0.0;
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   MPU9250_GetData(AccData0, MagData0, GyroData0, &TempData0);
 180:Core/Src/main.c ****   int len = snprintf(buffer, sizeof(buffer), "MagData: X=%d, Y=%d, Z=%d\n", MagData0[0], MagData0[1
 181:Core/Src/main.c ****  
 182:Core/Src/main.c ****   //HAL_UART_Transmit(&huart1, (uint8_t*)buffer, len, HAL_MAX_DELAY);
 183:Core/Src/main.c ****   
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   len = snprintf(buffer, sizeof(buffer), "MagData: X=%d, Y=%d, Z=%d\n", MagData0[0], MagData0[1], M
 187:Core/Src/main.c ****   //HAL_UART_Transmit(&huart1, (uint8_t*)buffer, len, HAL_MAX_DELAY);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE END 2 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* Init scheduler */
 192:Core/Src/main.c ****   osKernelInitialize();
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* Call init function for freertos objects (in cmsis_os2.c) */
 195:Core/Src/main.c ****   MX_FREERTOS_Init();
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* Start scheduler */
 198:Core/Src/main.c ****   osKernelStart();
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* Infinite loop */
 203:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
ARM GAS  /tmp/ccOPlSXs.s 			page 5


 204:Core/Src/main.c ****   while (1)
 205:Core/Src/main.c ****   {
 206:Core/Src/main.c ****      // MPU9250_GetData(AccData0, MagData0, GyroData0, &TempData0);
 207:Core/Src/main.c ****     int len = snprintf(buffer, sizeof(buffer), "MagData: X=%d, Y=%d, Z=%d\n", MagData0[0], MagData0
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   //HAL_UART_Transmit(&huart1, (uint8_t*)buffer, len, HAL_MAX_DELAY);
 210:Core/Src/main.c ****   
 211:Core/Src/main.c ****   //MPU9250_GetData(AccData0, MagData0, GyroData0, &TempData0);
 212:Core/Src/main.c ****  
 213:Core/Src/main.c ****   len = snprintf(buffer, sizeof(buffer), "MagData: X=%d, Y=%d, Z=%d\n", MagData0[0], MagData0[1], M
 214:Core/Src/main.c ****   //HAL_UART_Transmit(&huart1, (uint8_t*)buffer, len, HAL_MAX_DELAY);
 215:Core/Src/main.c ****     /* USER CODE END WHILE */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 218:Core/Src/main.c ****   }
 219:Core/Src/main.c ****   /* USER CODE END 3 */
 220:Core/Src/main.c **** }
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** /**
 223:Core/Src/main.c ****   * @brief System Clock Configuration
 224:Core/Src/main.c ****   * @retval None
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c **** void SystemClock_Config(void)
 227:Core/Src/main.c **** {
 228:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 229:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /** Supply configuration update enable
 232:Core/Src/main.c ****   */
 233:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
 242:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 247:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 248:Core/Src/main.c ****   */
 249:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 250:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 252:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 253:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 5;
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 257:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 258:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 259:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 260:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
ARM GAS  /tmp/ccOPlSXs.s 			page 6


 261:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 262:Core/Src/main.c ****   {
 263:Core/Src/main.c ****     Error_Handler();
 264:Core/Src/main.c ****   }
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 267:Core/Src/main.c ****   */
 268:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 269:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 270:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 271:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 272:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 273:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 274:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 275:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 276:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 277:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 280:Core/Src/main.c ****   {
 281:Core/Src/main.c ****     Error_Handler();
 282:Core/Src/main.c ****   }
 283:Core/Src/main.c **** }
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** /* USER CODE END 4 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****  /* MPU Configuration */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** void MPU_Config(void)
 292:Core/Src/main.c **** {
  27              		.loc 1 292 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 84B0     		sub	sp, sp, #16
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
 293:Core/Src/main.c ****   MPU_Region_InitTypeDef MPU_InitStruct = {0};
  39              		.loc 1 293 3 view .LVU1
  40              		.loc 1 293 26 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0094     		str	r4, [sp]
  43 0008 0194     		str	r4, [sp, #4]
  44 000a 0294     		str	r4, [sp, #8]
  45 000c 0394     		str	r4, [sp, #12]
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* Disables the MPU */
 296:Core/Src/main.c ****   HAL_MPU_Disable();
  46              		.loc 1 296 3 is_stmt 1 view .LVU3
  47 000e FFF7FEFF 		bl	HAL_MPU_Disable
ARM GAS  /tmp/ccOPlSXs.s 			page 7


  48              	.LVL0:
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /** Initializes and configures the Region and the memory to be protected
 299:Core/Src/main.c ****   */
 300:Core/Src/main.c ****   MPU_InitStruct.Enable = MPU_REGION_ENABLE;
  49              		.loc 1 300 3 view .LVU4
  50              		.loc 1 300 25 is_stmt 0 view .LVU5
  51 0012 0123     		movs	r3, #1
  52 0014 8DF80030 		strb	r3, [sp]
 301:Core/Src/main.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER0;
  53              		.loc 1 301 3 is_stmt 1 view .LVU6
  54              		.loc 1 301 25 is_stmt 0 view .LVU7
  55 0018 8DF80140 		strb	r4, [sp, #1]
 302:Core/Src/main.c ****   MPU_InitStruct.BaseAddress = 0x0;
  56              		.loc 1 302 3 is_stmt 1 view .LVU8
  57              		.loc 1 302 30 is_stmt 0 view .LVU9
  58 001c 0194     		str	r4, [sp, #4]
 303:Core/Src/main.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_4GB;
  59              		.loc 1 303 3 is_stmt 1 view .LVU10
  60              		.loc 1 303 23 is_stmt 0 view .LVU11
  61 001e 1F22     		movs	r2, #31
  62 0020 8DF80820 		strb	r2, [sp, #8]
 304:Core/Src/main.c ****   MPU_InitStruct.SubRegionDisable = 0x87;
  63              		.loc 1 304 3 is_stmt 1 view .LVU12
  64              		.loc 1 304 35 is_stmt 0 view .LVU13
  65 0024 8722     		movs	r2, #135
  66 0026 8DF80920 		strb	r2, [sp, #9]
 305:Core/Src/main.c ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
  67              		.loc 1 305 3 is_stmt 1 view .LVU14
  68              		.loc 1 305 31 is_stmt 0 view .LVU15
  69 002a 8DF80A40 		strb	r4, [sp, #10]
 306:Core/Src/main.c ****   MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
  70              		.loc 1 306 3 is_stmt 1 view .LVU16
  71              		.loc 1 306 35 is_stmt 0 view .LVU17
  72 002e 8DF80B40 		strb	r4, [sp, #11]
 307:Core/Src/main.c ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  73              		.loc 1 307 3 is_stmt 1 view .LVU18
  74              		.loc 1 307 30 is_stmt 0 view .LVU19
  75 0032 8DF80C30 		strb	r3, [sp, #12]
 308:Core/Src/main.c ****   MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
  76              		.loc 1 308 3 is_stmt 1 view .LVU20
  77              		.loc 1 308 30 is_stmt 0 view .LVU21
  78 0036 8DF80D30 		strb	r3, [sp, #13]
 309:Core/Src/main.c ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  79              		.loc 1 309 3 is_stmt 1 view .LVU22
  80              		.loc 1 309 30 is_stmt 0 view .LVU23
  81 003a 8DF80E40 		strb	r4, [sp, #14]
 310:Core/Src/main.c ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
  82              		.loc 1 310 3 is_stmt 1 view .LVU24
  83              		.loc 1 310 31 is_stmt 0 view .LVU25
  84 003e 8DF80F40 		strb	r4, [sp, #15]
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
  85              		.loc 1 312 3 is_stmt 1 view .LVU26
  86 0042 6846     		mov	r0, sp
  87 0044 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
  88              	.LVL1:
ARM GAS  /tmp/ccOPlSXs.s 			page 8


 313:Core/Src/main.c ****   /* Enables the MPU */
 314:Core/Src/main.c ****   HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
  89              		.loc 1 314 3 view .LVU27
  90 0048 0420     		movs	r0, #4
  91 004a FFF7FEFF 		bl	HAL_MPU_Enable
  92              	.LVL2:
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** }
  93              		.loc 1 316 1 is_stmt 0 view .LVU28
  94 004e 04B0     		add	sp, sp, #16
  95              	.LCFI2:
  96              		.cfi_def_cfa_offset 8
  97              		@ sp needed
  98 0050 10BD     		pop	{r4, pc}
  99              		.cfi_endproc
 100              	.LFE156:
 102              		.section	.text.fputc,"ax",%progbits
 103              		.align	1
 104              		.global	fputc
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv5-d16
 110              	fputc:
 111              	.LVL3:
 112              	.LFB151:
  77:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1,(uint8_t*)&ch,1,10);
 113              		.loc 1 77 1 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 8
 116              		@ frame_needed = 0, uses_anonymous_args = 0
  77:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1,(uint8_t*)&ch,1,10);
 117              		.loc 1 77 1 is_stmt 0 view .LVU30
 118 0000 00B5     		push	{lr}
 119              	.LCFI3:
 120              		.cfi_def_cfa_offset 4
 121              		.cfi_offset 14, -4
 122 0002 83B0     		sub	sp, sp, #12
 123              	.LCFI4:
 124              		.cfi_def_cfa_offset 16
 125 0004 0190     		str	r0, [sp, #4]
  78:Core/Src/main.c **** 	return ch;
 126              		.loc 1 78 2 is_stmt 1 view .LVU31
 127 0006 0A23     		movs	r3, #10
 128 0008 0122     		movs	r2, #1
 129 000a 01A9     		add	r1, sp, #4
 130              	.LVL4:
  78:Core/Src/main.c **** 	return ch;
 131              		.loc 1 78 2 is_stmt 0 view .LVU32
 132 000c 0348     		ldr	r0, .L5
 133              	.LVL5:
  78:Core/Src/main.c **** 	return ch;
 134              		.loc 1 78 2 view .LVU33
 135 000e FFF7FEFF 		bl	HAL_UART_Transmit
 136              	.LVL6:
  79:Core/Src/main.c **** }
 137              		.loc 1 79 2 is_stmt 1 view .LVU34
ARM GAS  /tmp/ccOPlSXs.s 			page 9


  80:Core/Src/main.c **** int fgetc(FILE *f)
 138              		.loc 1 80 1 is_stmt 0 view .LVU35
 139 0012 0198     		ldr	r0, [sp, #4]
 140 0014 03B0     		add	sp, sp, #12
 141              	.LCFI5:
 142              		.cfi_def_cfa_offset 4
 143              		@ sp needed
 144 0016 5DF804FB 		ldr	pc, [sp], #4
 145              	.L6:
 146 001a 00BF     		.align	2
 147              	.L5:
 148 001c 00000000 		.word	huart1
 149              		.cfi_endproc
 150              	.LFE151:
 152              		.section	.text.fgetc,"ax",%progbits
 153              		.align	1
 154              		.global	fgetc
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu fpv5-d16
 160              	fgetc:
 161              	.LVL7:
 162              	.LFB152:
  82:Core/Src/main.c **** 	int ch;
 163              		.loc 1 82 1 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 8
 166              		@ frame_needed = 0, uses_anonymous_args = 0
  82:Core/Src/main.c **** 	int ch;
 167              		.loc 1 82 1 is_stmt 0 view .LVU37
 168 0000 00B5     		push	{lr}
 169              	.LCFI6:
 170              		.cfi_def_cfa_offset 4
 171              		.cfi_offset 14, -4
 172 0002 83B0     		sub	sp, sp, #12
 173              	.LCFI7:
 174              		.cfi_def_cfa_offset 16
  83:Core/Src/main.c **** 	if(HAL_UART_Receive_IT(&huart1,(uint8_t*)&ch,1) == HAL_OK)
 175              		.loc 1 83 2 is_stmt 1 view .LVU38
  84:Core/Src/main.c **** 	return ch;
 176              		.loc 1 84 2 view .LVU39
  84:Core/Src/main.c **** 	return ch;
 177              		.loc 1 84 5 is_stmt 0 view .LVU40
 178 0004 0122     		movs	r2, #1
 179 0006 01A9     		add	r1, sp, #4
 180 0008 0548     		ldr	r0, .L11
 181              	.LVL8:
  84:Core/Src/main.c **** 	return ch;
 182              		.loc 1 84 5 view .LVU41
 183 000a FFF7FEFF 		bl	HAL_UART_Receive_IT
 184              	.LVL9:
  84:Core/Src/main.c **** 	return ch;
 185              		.loc 1 84 4 view .LVU42
 186 000e 18B9     		cbnz	r0, .L9
  85:Core/Src/main.c **** 	else return EOF;
 187              		.loc 1 85 2 is_stmt 1 view .LVU43
ARM GAS  /tmp/ccOPlSXs.s 			page 10


  85:Core/Src/main.c **** 	else return EOF;
 188              		.loc 1 85 9 is_stmt 0 view .LVU44
 189 0010 0198     		ldr	r0, [sp, #4]
 190              	.L7:
  87:Core/Src/main.c **** 
 191              		.loc 1 87 1 view .LVU45
 192 0012 03B0     		add	sp, sp, #12
 193              	.LCFI8:
 194              		.cfi_remember_state
 195              		.cfi_def_cfa_offset 4
 196              		@ sp needed
 197 0014 5DF804FB 		ldr	pc, [sp], #4
 198              	.L9:
 199              	.LCFI9:
 200              		.cfi_restore_state
  86:Core/Src/main.c **** }
 201              		.loc 1 86 14 view .LVU46
 202 0018 4FF0FF30 		mov	r0, #-1
 203 001c F9E7     		b	.L7
 204              	.L12:
 205 001e 00BF     		.align	2
 206              	.L11:
 207 0020 00000000 		.word	huart1
 208              		.cfi_endproc
 209              	.LFE152:
 211              		.section	.rodata.scan_I2C_bus.str1.4,"aMS",%progbits,1
 212              		.align	2
 213              	.LC0:
 214 0000 5363616E 		.ascii	"Scanning I2C bus...\015\012\000"
 214      6E696E67 
 214      20493243 
 214      20627573 
 214      2E2E2E0D 
 215 0016 0000     		.align	2
 216              	.LC1:
 217 0018 44657669 		.ascii	"Device found at address 0x%02X\015\012\000"
 217      63652066 
 217      6F756E64 
 217      20617420 
 217      61646472 
 218 0039 000000   		.align	2
 219              	.LC2:
 220 003c 5363616E 		.ascii	"Scan complete.\015\012\000"
 220      20636F6D 
 220      706C6574 
 220      652E0D0A 
 220      00
 221              		.section	.text.scan_I2C_bus,"ax",%progbits
 222              		.align	1
 223              		.global	scan_I2C_bus
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu fpv5-d16
 229              	scan_I2C_bus:
 230              	.LFB153:
  92:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)"Scanning I2C bus...\r\n", 22, 1000);   
ARM GAS  /tmp/ccOPlSXs.s 			page 11


 231              		.loc 1 92 25 is_stmt 1 view -0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 256
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235 0000 10B5     		push	{r4, lr}
 236              	.LCFI10:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 4, -8
 239              		.cfi_offset 14, -4
 240 0002 C0B0     		sub	sp, sp, #256
 241              	.LCFI11:
 242              		.cfi_def_cfa_offset 264
  93:Core/Src/main.c ****     for (uint8_t address = 0x03; address < 0xD0; address++) {
 243              		.loc 1 93 5 view .LVU48
 244 0004 4FF47A73 		mov	r3, #1000
 245 0008 1622     		movs	r2, #22
 246 000a 1549     		ldr	r1, .L19
 247 000c 1548     		ldr	r0, .L19+4
 248 000e FFF7FEFF 		bl	HAL_UART_Transmit
 249              	.LVL10:
  94:Core/Src/main.c ****         // 发送一个空数据包，来探测该地址是否有设备响应
 250              		.loc 1 94 5 view .LVU49
 251              	.LBB4:
  94:Core/Src/main.c ****         // 发送一个空数据包，来探测该地址是否有设备响应
 252              		.loc 1 94 10 view .LVU50
  94:Core/Src/main.c ****         // 发送一个空数据包，来探测该地址是否有设备响应
 253              		.loc 1 94 18 is_stmt 0 view .LVU51
 254 0012 0324     		movs	r4, #3
  94:Core/Src/main.c ****         // 发送一个空数据包，来探测该地址是否有设备响应
 255              		.loc 1 94 5 view .LVU52
 256 0014 01E0     		b	.L14
 257              	.LVL11:
 258              	.L15:
  94:Core/Src/main.c ****         // 发送一个空数据包，来探测该地址是否有设备响应
 259              		.loc 1 94 50 is_stmt 1 discriminator 2 view .LVU53
  94:Core/Src/main.c ****         // 发送一个空数据包，来探测该地址是否有设备响应
 260              		.loc 1 94 57 is_stmt 0 discriminator 2 view .LVU54
 261 0016 0134     		adds	r4, r4, #1
 262              	.LVL12:
  94:Core/Src/main.c ****         // 发送一个空数据包，来探测该地址是否有设备响应
 263              		.loc 1 94 57 discriminator 2 view .LVU55
 264 0018 E4B2     		uxtb	r4, r4
 265              	.LVL13:
 266              	.L14:
  94:Core/Src/main.c ****         // 发送一个空数据包，来探测该地址是否有设备响应
 267              		.loc 1 94 34 is_stmt 1 discriminator 1 view .LVU56
  94:Core/Src/main.c ****         // 发送一个空数据包，来探测该地址是否有设备响应
 268              		.loc 1 94 5 is_stmt 0 discriminator 1 view .LVU57
 269 001a CF2C     		cmp	r4, #207
 270 001c 17D8     		bhi	.L18
  96:Core/Src/main.c ****             char tbuffer[256];  // 临时缓冲区
 271              		.loc 1 96 9 is_stmt 1 view .LVU58
  96:Core/Src/main.c ****             char tbuffer[256];  // 临时缓冲区
 272              		.loc 1 96 13 is_stmt 0 view .LVU59
 273 001e 0A23     		movs	r3, #10
 274 0020 0122     		movs	r2, #1
 275 0022 04FA02F1 		lsl	r1, r4, r2
ARM GAS  /tmp/ccOPlSXs.s 			page 12


 276 0026 1048     		ldr	r0, .L19+8
 277 0028 FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 278              	.LVL14:
  96:Core/Src/main.c ****             char tbuffer[256];  // 临时缓冲区
 279              		.loc 1 96 12 view .LVU60
 280 002c 0028     		cmp	r0, #0
 281 002e F2D1     		bne	.L15
 282              	.LBB5:
  97:Core/Src/main.c ****             int len = snprintf(tbuffer, sizeof(tbuffer), "Device found at address 0x%02X\r\n", addr
 283              		.loc 1 97 13 is_stmt 1 view .LVU61
  98:Core/Src/main.c ****             HAL_UART_Transmit(&huart1, (uint8_t*)tbuffer, len, 1500);
 284              		.loc 1 98 13 view .LVU62
  98:Core/Src/main.c ****             HAL_UART_Transmit(&huart1, (uint8_t*)tbuffer, len, 1500);
 285              		.loc 1 98 23 is_stmt 0 view .LVU63
 286 0030 2346     		mov	r3, r4
 287 0032 0E4A     		ldr	r2, .L19+12
 288 0034 4FF48071 		mov	r1, #256
 289 0038 6846     		mov	r0, sp
 290 003a FFF7FEFF 		bl	snprintf
 291              	.LVL15:
  99:Core/Src/main.c ****             //HAL_Delay(100);
 292              		.loc 1 99 13 is_stmt 1 view .LVU64
 293 003e 40F2DC53 		movw	r3, #1500
 294 0042 1E22     		movs	r2, #30
 295 0044 6946     		mov	r1, sp
 296 0046 0748     		ldr	r0, .L19+4
 297 0048 FFF7FEFF 		bl	HAL_UART_Transmit
 298              	.LVL16:
 299 004c E3E7     		b	.L15
 300              	.LVL17:
 301              	.L18:
  99:Core/Src/main.c ****             //HAL_Delay(100);
 302              		.loc 1 99 13 is_stmt 0 view .LVU65
 303              	.LBE5:
 304              	.LBE4:
 104:Core/Src/main.c **** }
 305              		.loc 1 104 5 is_stmt 1 view .LVU66
 306 004e 4FF47A73 		mov	r3, #1000
 307 0052 1022     		movs	r2, #16
 308 0054 0649     		ldr	r1, .L19+16
 309 0056 0348     		ldr	r0, .L19+4
 310 0058 FFF7FEFF 		bl	HAL_UART_Transmit
 311              	.LVL18:
 105:Core/Src/main.c **** 
 312              		.loc 1 105 1 is_stmt 0 view .LVU67
 313 005c 40B0     		add	sp, sp, #256
 314              	.LCFI12:
 315              		.cfi_def_cfa_offset 8
 316              		@ sp needed
 317 005e 10BD     		pop	{r4, pc}
 318              	.LVL19:
 319              	.L20:
 105:Core/Src/main.c **** 
 320              		.loc 1 105 1 view .LVU68
 321              		.align	2
 322              	.L19:
 323 0060 00000000 		.word	.LC0
ARM GAS  /tmp/ccOPlSXs.s 			page 13


 324 0064 00000000 		.word	huart1
 325 0068 00000000 		.word	hi2c1
 326 006c 18000000 		.word	.LC1
 327 0070 3C000000 		.word	.LC2
 328              		.cfi_endproc
 329              	.LFE153:
 331              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 332              		.align	1
 333              		.global	HAL_TIM_PeriodElapsedCallback
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 337              		.fpu fpv5-d16
 339              	HAL_TIM_PeriodElapsedCallback:
 340              	.LVL20:
 341              	.LFB157:
 317:Core/Src/main.c **** 
 318:Core/Src/main.c **** /**
 319:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 320:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 321:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 322:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 323:Core/Src/main.c ****   * @param  htim : TIM handle
 324:Core/Src/main.c ****   * @retval None
 325:Core/Src/main.c ****   */
 326:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 327:Core/Src/main.c **** {
 342              		.loc 1 327 1 is_stmt 1 view -0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		.loc 1 327 1 is_stmt 0 view .LVU70
 347 0000 08B5     		push	{r3, lr}
 348              	.LCFI13:
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 3, -8
 351              		.cfi_offset 14, -4
 328:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 331:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 352              		.loc 1 331 3 is_stmt 1 view .LVU71
 353              		.loc 1 331 11 is_stmt 0 view .LVU72
 354 0002 0268     		ldr	r2, [r0]
 355              		.loc 1 331 6 view .LVU73
 356 0004 034B     		ldr	r3, .L25
 357 0006 9A42     		cmp	r2, r3
 358 0008 00D0     		beq	.L24
 359              	.LVL21:
 360              	.L21:
 332:Core/Src/main.c ****     HAL_IncTick();
 333:Core/Src/main.c ****   }
 334:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 337:Core/Src/main.c **** }
 361              		.loc 1 337 1 view .LVU74
ARM GAS  /tmp/ccOPlSXs.s 			page 14


 362 000a 08BD     		pop	{r3, pc}
 363              	.LVL22:
 364              	.L24:
 332:Core/Src/main.c ****     HAL_IncTick();
 365              		.loc 1 332 5 is_stmt 1 view .LVU75
 366 000c FFF7FEFF 		bl	HAL_IncTick
 367              	.LVL23:
 368              		.loc 1 337 1 is_stmt 0 view .LVU76
 369 0010 FBE7     		b	.L21
 370              	.L26:
 371 0012 00BF     		.align	2
 372              	.L25:
 373 0014 00000140 		.word	1073807360
 374              		.cfi_endproc
 375              	.LFE157:
 377              		.section	.text.Error_Handler,"ax",%progbits
 378              		.align	1
 379              		.global	Error_Handler
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	Error_Handler:
 386              	.LFB158:
 338:Core/Src/main.c **** 
 339:Core/Src/main.c **** /**
 340:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 341:Core/Src/main.c ****   * @retval None
 342:Core/Src/main.c ****   */
 343:Core/Src/main.c **** void Error_Handler(void)
 344:Core/Src/main.c **** {
 387              		.loc 1 344 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ Volatile: function does not return.
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 345:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 346:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 347:Core/Src/main.c ****   __disable_irq();
 393              		.loc 1 347 3 view .LVU78
 394              	.LBB6:
 395              	.LBI6:
 396              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
ARM GAS  /tmp/ccOPlSXs.s 			page 15


  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
ARM GAS  /tmp/ccOPlSXs.s 			page 16


  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
ARM GAS  /tmp/ccOPlSXs.s 			page 17


 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccOPlSXs.s 			page 18


 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 397              		.loc 2 207 27 view .LVU79
 398              	.LBB7:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 399              		.loc 2 209 3 view .LVU80
 400              		.syntax unified
 401              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 402 0000 72B6     		cpsid i
 403              	@ 0 "" 2
 404              		.thumb
 405              		.syntax unified
 406              	.L28:
 407              	.LBE7:
 408              	.LBE6:
 348:Core/Src/main.c ****   while (1)
 409              		.loc 1 348 3 discriminator 1 view .LVU81
 349:Core/Src/main.c ****   {
 350:Core/Src/main.c ****   }
 410              		.loc 1 350 3 discriminator 1 view .LVU82
 348:Core/Src/main.c ****   while (1)
 411              		.loc 1 348 9 discriminator 1 view .LVU83
 412 0002 FEE7     		b	.L28
 413              		.cfi_endproc
 414              	.LFE158:
 416              		.section	.text.SystemClock_Config,"ax",%progbits
 417              		.align	1
 418              		.global	SystemClock_Config
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 422              		.fpu fpv5-d16
 424              	SystemClock_Config:
 425              	.LFB155:
 227:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  /tmp/ccOPlSXs.s 			page 19


 426              		.loc 1 227 1 view -0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 120
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430 0000 00B5     		push	{lr}
 431              	.LCFI14:
 432              		.cfi_def_cfa_offset 4
 433              		.cfi_offset 14, -4
 434 0002 9FB0     		sub	sp, sp, #124
 435              	.LCFI15:
 436              		.cfi_def_cfa_offset 128
 228:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 437              		.loc 1 228 3 view .LVU85
 228:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 438              		.loc 1 228 22 is_stmt 0 view .LVU86
 439 0004 4C22     		movs	r2, #76
 440 0006 0021     		movs	r1, #0
 441 0008 0BA8     		add	r0, sp, #44
 442 000a FFF7FEFF 		bl	memset
 443              	.LVL24:
 229:Core/Src/main.c **** 
 444              		.loc 1 229 3 is_stmt 1 view .LVU87
 229:Core/Src/main.c **** 
 445              		.loc 1 229 22 is_stmt 0 view .LVU88
 446 000e 2022     		movs	r2, #32
 447 0010 0021     		movs	r1, #0
 448 0012 03A8     		add	r0, sp, #12
 449 0014 FFF7FEFF 		bl	memset
 450              	.LVL25:
 233:Core/Src/main.c **** 
 451              		.loc 1 233 3 is_stmt 1 view .LVU89
 452 0018 0220     		movs	r0, #2
 453 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 454              	.LVL26:
 237:Core/Src/main.c **** 
 455              		.loc 1 237 3 view .LVU90
 456              	.LBB8:
 237:Core/Src/main.c **** 
 457              		.loc 1 237 3 view .LVU91
 458 001e 0023     		movs	r3, #0
 459 0020 0093     		str	r3, [sp]
 237:Core/Src/main.c **** 
 460              		.loc 1 237 3 view .LVU92
 237:Core/Src/main.c **** 
 461              		.loc 1 237 3 view .LVU93
 462 0022 394B     		ldr	r3, .L37
 463 0024 DA6A     		ldr	r2, [r3, #44]
 464 0026 22F00102 		bic	r2, r2, #1
 465 002a DA62     		str	r2, [r3, #44]
 237:Core/Src/main.c **** 
 466              		.loc 1 237 3 view .LVU94
 467 002c DB6A     		ldr	r3, [r3, #44]
 468 002e 03F00103 		and	r3, r3, #1
 469 0032 0093     		str	r3, [sp]
 237:Core/Src/main.c **** 
 470              		.loc 1 237 3 view .LVU95
 471 0034 354B     		ldr	r3, .L37+4
ARM GAS  /tmp/ccOPlSXs.s 			page 20


 472 0036 9A69     		ldr	r2, [r3, #24]
 473 0038 42F44042 		orr	r2, r2, #49152
 474 003c 9A61     		str	r2, [r3, #24]
 237:Core/Src/main.c **** 
 475              		.loc 1 237 3 view .LVU96
 476 003e 9B69     		ldr	r3, [r3, #24]
 477 0040 03F44043 		and	r3, r3, #49152
 478 0044 0093     		str	r3, [sp]
 237:Core/Src/main.c **** 
 479              		.loc 1 237 3 view .LVU97
 480 0046 009B     		ldr	r3, [sp]
 481              	.LBE8:
 237:Core/Src/main.c **** 
 482              		.loc 1 237 3 view .LVU98
 239:Core/Src/main.c **** 
 483              		.loc 1 239 3 view .LVU99
 484              	.L30:
 239:Core/Src/main.c **** 
 485              		.loc 1 239 48 discriminator 1 view .LVU100
 239:Core/Src/main.c **** 
 486              		.loc 1 239 8 discriminator 1 view .LVU101
 239:Core/Src/main.c **** 
 487              		.loc 1 239 10 is_stmt 0 discriminator 1 view .LVU102
 488 0048 304B     		ldr	r3, .L37+4
 489 004a 9B69     		ldr	r3, [r3, #24]
 239:Core/Src/main.c **** 
 490              		.loc 1 239 8 discriminator 1 view .LVU103
 491 004c 13F4005F 		tst	r3, #8192
 492 0050 FAD0     		beq	.L30
 241:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 493              		.loc 1 241 3 is_stmt 1 view .LVU104
 494              	.LBB9:
 241:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 495              		.loc 1 241 3 view .LVU105
 241:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 496              		.loc 1 241 3 view .LVU106
 497 0052 2F4B     		ldr	r3, .L37+8
 498 0054 D3F8F420 		ldr	r2, [r3, #244]
 499 0058 42F00202 		orr	r2, r2, #2
 500 005c C3F8F420 		str	r2, [r3, #244]
 241:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 501              		.loc 1 241 3 view .LVU107
 502 0060 D3F8F430 		ldr	r3, [r3, #244]
 503 0064 03F00203 		and	r3, r3, #2
 504 0068 0193     		str	r3, [sp, #4]
 241:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 505              		.loc 1 241 3 view .LVU108
 506 006a 019B     		ldr	r3, [sp, #4]
 507              	.LBE9:
 241:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 508              		.loc 1 241 3 view .LVU109
 242:Core/Src/main.c **** 
 509              		.loc 1 242 3 view .LVU110
 510              	.LBB10:
 242:Core/Src/main.c **** 
 511              		.loc 1 242 3 view .LVU111
 512 006c 0023     		movs	r3, #0
ARM GAS  /tmp/ccOPlSXs.s 			page 21


 513 006e 0293     		str	r3, [sp, #8]
 242:Core/Src/main.c **** 
 514              		.loc 1 242 3 view .LVU112
 242:Core/Src/main.c **** 
 515              		.loc 1 242 3 view .LVU113
 516 0070 264B     		ldr	r3, .L37+4
 517 0072 9A69     		ldr	r2, [r3, #24]
 518 0074 42F44042 		orr	r2, r2, #49152
 519 0078 9A61     		str	r2, [r3, #24]
 242:Core/Src/main.c **** 
 520              		.loc 1 242 3 view .LVU114
 521 007a 9B69     		ldr	r3, [r3, #24]
 522 007c 03F44043 		and	r3, r3, #49152
 523 0080 0293     		str	r3, [sp, #8]
 242:Core/Src/main.c **** 
 524              		.loc 1 242 3 view .LVU115
 525 0082 214B     		ldr	r3, .L37
 526 0084 DA6A     		ldr	r2, [r3, #44]
 527 0086 42F00102 		orr	r2, r2, #1
 528 008a DA62     		str	r2, [r3, #44]
 242:Core/Src/main.c **** 
 529              		.loc 1 242 3 view .LVU116
 530 008c DB6A     		ldr	r3, [r3, #44]
 531 008e 03F00103 		and	r3, r3, #1
 532 0092 0293     		str	r3, [sp, #8]
 242:Core/Src/main.c **** 
 533              		.loc 1 242 3 view .LVU117
 534 0094 029B     		ldr	r3, [sp, #8]
 535              	.LBE10:
 242:Core/Src/main.c **** 
 536              		.loc 1 242 3 view .LVU118
 244:Core/Src/main.c **** 
 537              		.loc 1 244 3 view .LVU119
 538              	.L31:
 244:Core/Src/main.c **** 
 539              		.loc 1 244 48 discriminator 1 view .LVU120
 244:Core/Src/main.c **** 
 540              		.loc 1 244 8 discriminator 1 view .LVU121
 244:Core/Src/main.c **** 
 541              		.loc 1 244 10 is_stmt 0 discriminator 1 view .LVU122
 542 0096 1D4B     		ldr	r3, .L37+4
 543 0098 9B69     		ldr	r3, [r3, #24]
 244:Core/Src/main.c **** 
 544              		.loc 1 244 8 discriminator 1 view .LVU123
 545 009a 13F4005F 		tst	r3, #8192
 546 009e FAD0     		beq	.L31
 249:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 547              		.loc 1 249 3 is_stmt 1 view .LVU124
 249:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 548              		.loc 1 249 36 is_stmt 0 view .LVU125
 549 00a0 0123     		movs	r3, #1
 550 00a2 0B93     		str	r3, [sp, #44]
 250:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 551              		.loc 1 250 3 is_stmt 1 view .LVU126
 250:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 552              		.loc 1 250 30 is_stmt 0 view .LVU127
 553 00a4 4FF48033 		mov	r3, #65536
ARM GAS  /tmp/ccOPlSXs.s 			page 22


 554 00a8 0C93     		str	r3, [sp, #48]
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 555              		.loc 1 251 3 is_stmt 1 view .LVU128
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 556              		.loc 1 251 34 is_stmt 0 view .LVU129
 557 00aa 0223     		movs	r3, #2
 558 00ac 1493     		str	r3, [sp, #80]
 252:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 5;
 559              		.loc 1 252 3 is_stmt 1 view .LVU130
 252:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 5;
 560              		.loc 1 252 35 is_stmt 0 view .LVU131
 561 00ae 1593     		str	r3, [sp, #84]
 253:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 562              		.loc 1 253 3 is_stmt 1 view .LVU132
 253:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 563              		.loc 1 253 30 is_stmt 0 view .LVU133
 564 00b0 0522     		movs	r2, #5
 565 00b2 1692     		str	r2, [sp, #88]
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 566              		.loc 1 254 3 is_stmt 1 view .LVU134
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 567              		.loc 1 254 30 is_stmt 0 view .LVU135
 568 00b4 C022     		movs	r2, #192
 569 00b6 1792     		str	r2, [sp, #92]
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 570              		.loc 1 255 3 is_stmt 1 view .LVU136
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 571              		.loc 1 255 30 is_stmt 0 view .LVU137
 572 00b8 1893     		str	r3, [sp, #96]
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 573              		.loc 1 256 3 is_stmt 1 view .LVU138
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 574              		.loc 1 256 30 is_stmt 0 view .LVU139
 575 00ba 1993     		str	r3, [sp, #100]
 257:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 576              		.loc 1 257 3 is_stmt 1 view .LVU140
 257:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 577              		.loc 1 257 30 is_stmt 0 view .LVU141
 578 00bc 1A93     		str	r3, [sp, #104]
 258:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 579              		.loc 1 258 3 is_stmt 1 view .LVU142
 258:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 580              		.loc 1 258 32 is_stmt 0 view .LVU143
 581 00be 0823     		movs	r3, #8
 582 00c0 1B93     		str	r3, [sp, #108]
 259:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 583              		.loc 1 259 3 is_stmt 1 view .LVU144
 259:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 584              		.loc 1 259 35 is_stmt 0 view .LVU145
 585 00c2 0023     		movs	r3, #0
 586 00c4 1C93     		str	r3, [sp, #112]
 260:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 587              		.loc 1 260 3 is_stmt 1 view .LVU146
 260:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 588              		.loc 1 260 34 is_stmt 0 view .LVU147
 589 00c6 1D93     		str	r3, [sp, #116]
 261:Core/Src/main.c ****   {
ARM GAS  /tmp/ccOPlSXs.s 			page 23


 590              		.loc 1 261 3 is_stmt 1 view .LVU148
 261:Core/Src/main.c ****   {
 591              		.loc 1 261 7 is_stmt 0 view .LVU149
 592 00c8 0BA8     		add	r0, sp, #44
 593 00ca FFF7FEFF 		bl	HAL_RCC_OscConfig
 594              	.LVL27:
 261:Core/Src/main.c ****   {
 595              		.loc 1 261 6 view .LVU150
 596 00ce B0B9     		cbnz	r0, .L35
 268:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 597              		.loc 1 268 3 is_stmt 1 view .LVU151
 268:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 598              		.loc 1 268 31 is_stmt 0 view .LVU152
 599 00d0 3F23     		movs	r3, #63
 600 00d2 0393     		str	r3, [sp, #12]
 271:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 601              		.loc 1 271 3 is_stmt 1 view .LVU153
 271:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 602              		.loc 1 271 34 is_stmt 0 view .LVU154
 603 00d4 0323     		movs	r3, #3
 604 00d6 0493     		str	r3, [sp, #16]
 272:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 605              		.loc 1 272 3 is_stmt 1 view .LVU155
 272:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 606              		.loc 1 272 35 is_stmt 0 view .LVU156
 607 00d8 0023     		movs	r3, #0
 608 00da 0593     		str	r3, [sp, #20]
 273:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 609              		.loc 1 273 3 is_stmt 1 view .LVU157
 273:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 610              		.loc 1 273 35 is_stmt 0 view .LVU158
 611 00dc 0823     		movs	r3, #8
 612 00de 0693     		str	r3, [sp, #24]
 274:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 613              		.loc 1 274 3 is_stmt 1 view .LVU159
 274:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 614              		.loc 1 274 36 is_stmt 0 view .LVU160
 615 00e0 4023     		movs	r3, #64
 616 00e2 0793     		str	r3, [sp, #28]
 275:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 617              		.loc 1 275 3 is_stmt 1 view .LVU161
 275:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 618              		.loc 1 275 36 is_stmt 0 view .LVU162
 619 00e4 0893     		str	r3, [sp, #32]
 276:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 620              		.loc 1 276 3 is_stmt 1 view .LVU163
 276:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 621              		.loc 1 276 36 is_stmt 0 view .LVU164
 622 00e6 4FF48062 		mov	r2, #1024
 623 00ea 0992     		str	r2, [sp, #36]
 277:Core/Src/main.c **** 
 624              		.loc 1 277 3 is_stmt 1 view .LVU165
 277:Core/Src/main.c **** 
 625              		.loc 1 277 36 is_stmt 0 view .LVU166
 626 00ec 0A93     		str	r3, [sp, #40]
 279:Core/Src/main.c ****   {
 627              		.loc 1 279 3 is_stmt 1 view .LVU167
ARM GAS  /tmp/ccOPlSXs.s 			page 24


 279:Core/Src/main.c ****   {
 628              		.loc 1 279 7 is_stmt 0 view .LVU168
 629 00ee 0421     		movs	r1, #4
 630 00f0 03A8     		add	r0, sp, #12
 631 00f2 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 632              	.LVL28:
 279:Core/Src/main.c ****   {
 633              		.loc 1 279 6 view .LVU169
 634 00f6 20B9     		cbnz	r0, .L36
 283:Core/Src/main.c **** 
 635              		.loc 1 283 1 view .LVU170
 636 00f8 1FB0     		add	sp, sp, #124
 637              	.LCFI16:
 638              		.cfi_remember_state
 639              		.cfi_def_cfa_offset 4
 640              		@ sp needed
 641 00fa 5DF804FB 		ldr	pc, [sp], #4
 642              	.L35:
 643              	.LCFI17:
 644              		.cfi_restore_state
 263:Core/Src/main.c ****   }
 645              		.loc 1 263 5 is_stmt 1 view .LVU171
 646 00fe FFF7FEFF 		bl	Error_Handler
 647              	.LVL29:
 648              	.L36:
 281:Core/Src/main.c ****   }
 649              		.loc 1 281 5 view .LVU172
 650 0102 FFF7FEFF 		bl	Error_Handler
 651              	.LVL30:
 652              	.L38:
 653 0106 00BF     		.align	2
 654              	.L37:
 655 0108 00040058 		.word	1476396032
 656 010c 00480258 		.word	1476544512
 657 0110 00440258 		.word	1476543488
 658              		.cfi_endproc
 659              	.LFE155:
 661              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 662              		.align	2
 663              	.LC3:
 664 0000 4D616744 		.ascii	"MagData: X=%d, Y=%d, Z=%d\012\000"
 664      6174613A 
 664      20583D25 
 664      642C2059 
 664      3D25642C 
 665              		.section	.text.main,"ax",%progbits
 666              		.align	1
 667              		.global	main
 668              		.syntax unified
 669              		.thumb
 670              		.thumb_func
 671              		.fpu fpv5-d16
 673              	main:
 674              	.LFB154:
 115:Core/Src/main.c **** 
 675              		.loc 1 115 1 view -0
 676              		.cfi_startproc
ARM GAS  /tmp/ccOPlSXs.s 			page 25


 677              		@ args = 0, pretend = 0, frame = 32
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679 0000 30B5     		push	{r4, r5, lr}
 680              	.LCFI18:
 681              		.cfi_def_cfa_offset 12
 682              		.cfi_offset 4, -12
 683              		.cfi_offset 5, -8
 684              		.cfi_offset 14, -4
 685 0002 8BB0     		sub	sp, sp, #44
 686              	.LCFI19:
 687              		.cfi_def_cfa_offset 56
 122:Core/Src/main.c **** 
 688              		.loc 1 122 3 view .LVU174
 689 0004 FFF7FEFF 		bl	MPU_Config
 690              	.LVL31:
 127:Core/Src/main.c **** 
 691              		.loc 1 127 3 view .LVU175
 692 0008 FFF7FEFF 		bl	HAL_Init
 693              	.LVL32:
 134:Core/Src/main.c **** 
 694              		.loc 1 134 3 view .LVU176
 695 000c FFF7FEFF 		bl	SystemClock_Config
 696              	.LVL33:
 141:Core/Src/main.c ****   MX_DMA_Init();
 697              		.loc 1 141 3 view .LVU177
 698 0010 FFF7FEFF 		bl	MX_GPIO_Init
 699              	.LVL34:
 142:Core/Src/main.c ****   MX_TIM5_Init();
 700              		.loc 1 142 3 view .LVU178
 701 0014 FFF7FEFF 		bl	MX_DMA_Init
 702              	.LVL35:
 143:Core/Src/main.c ****   MX_TIM8_Init();
 703              		.loc 1 143 3 view .LVU179
 704 0018 FFF7FEFF 		bl	MX_TIM5_Init
 705              	.LVL36:
 144:Core/Src/main.c ****   MX_TIM12_Init();
 706              		.loc 1 144 3 view .LVU180
 707 001c FFF7FEFF 		bl	MX_TIM8_Init
 708              	.LVL37:
 145:Core/Src/main.c ****   MX_TIM13_Init();
 709              		.loc 1 145 3 view .LVU181
 710 0020 FFF7FEFF 		bl	MX_TIM12_Init
 711              	.LVL38:
 146:Core/Src/main.c ****   MX_TIM14_Init();
 712              		.loc 1 146 3 view .LVU182
 713 0024 FFF7FEFF 		bl	MX_TIM13_Init
 714              	.LVL39:
 147:Core/Src/main.c ****   MX_TIM15_Init();
 715              		.loc 1 147 3 view .LVU183
 716 0028 FFF7FEFF 		bl	MX_TIM14_Init
 717              	.LVL40:
 148:Core/Src/main.c ****   MX_TIM16_Init();
 718              		.loc 1 148 3 view .LVU184
 719 002c FFF7FEFF 		bl	MX_TIM15_Init
 720              	.LVL41:
 149:Core/Src/main.c ****   MX_TIM17_Init();
 721              		.loc 1 149 3 view .LVU185
ARM GAS  /tmp/ccOPlSXs.s 			page 26


 722 0030 FFF7FEFF 		bl	MX_TIM16_Init
 723              	.LVL42:
 150:Core/Src/main.c ****   MX_I2C1_Init();
 724              		.loc 1 150 3 view .LVU186
 725 0034 FFF7FEFF 		bl	MX_TIM17_Init
 726              	.LVL43:
 151:Core/Src/main.c ****   MX_USART1_UART_Init();
 727              		.loc 1 151 3 view .LVU187
 728 0038 FFF7FEFF 		bl	MX_I2C1_Init
 729              	.LVL44:
 152:Core/Src/main.c ****   MX_TIM3_Init();
 730              		.loc 1 152 3 view .LVU188
 731 003c FFF7FEFF 		bl	MX_USART1_UART_Init
 732              	.LVL45:
 153:Core/Src/main.c ****   MX_TIM4_Init();
 733              		.loc 1 153 3 view .LVU189
 734 0040 FFF7FEFF 		bl	MX_TIM3_Init
 735              	.LVL46:
 154:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 736              		.loc 1 154 3 view .LVU190
 737 0044 FFF7FEFF 		bl	MX_TIM4_Init
 738              	.LVL47:
 161:Core/Src/main.c ****       
 739              		.loc 1 161 2 view .LVU191
 740 0048 FFF7FEFF 		bl	Servo_Init
 741              	.LVL48:
 165:Core/Src/main.c ****     // 设置传感器的配置参数
 742              		.loc 1 165 5 view .LVU192
 743 004c FFF7FEFF 		bl	MPU9250_Init
 744              	.LVL49:
 167:Core/Src/main.c ****     MPU9250_SetGyroRange(GYRO_RANGE_500DPS);  // 设置陀螺仪量程为 500DPS
 745              		.loc 1 167 5 view .LVU193
 746 0050 0120     		movs	r0, #1
 747 0052 FFF7FEFF 		bl	MPU9250_SetAccelRange
 748              	.LVL50:
 168:Core/Src/main.c ****     MPU9250_SetDLPFBandwidth(DLPF_BANDWIDTH_92HZ); // 设置低通滤波带宽为 92Hz
 749              		.loc 1 168 5 view .LVU194
 750 0056 0120     		movs	r0, #1
 751 0058 FFF7FEFF 		bl	MPU9250_SetGyroRange
 752              	.LVL51:
 169:Core/Src/main.c ****     MPU9250_SetSampleRateDivider(LP_ACCEL_ODR_125HZ); // 设置采样率为 125Hz
 753              		.loc 1 169 5 view .LVU195
 754 005c 0120     		movs	r0, #1
 755 005e FFF7FEFF 		bl	MPU9250_SetDLPFBandwidth
 756              	.LVL52:
 170:Core/Src/main.c **** 
 757              		.loc 1 170 5 view .LVU196
 758 0062 0920     		movs	r0, #9
 759 0064 FFF7FEFF 		bl	MPU9250_SetSampleRateDivider
 760              	.LVL53:
 174:Core/Src/main.c ****   int16_t MagData0[3] = {0};
 761              		.loc 1 174 3 view .LVU197
 174:Core/Src/main.c ****   int16_t MagData0[3] = {0};
 762              		.loc 1 174 11 is_stmt 0 view .LVU198
 763 0068 0023     		movs	r3, #0
 764 006a 0893     		str	r3, [sp, #32]
 765 006c ADF82430 		strh	r3, [sp, #36]	@ movhi
ARM GAS  /tmp/ccOPlSXs.s 			page 27


 175:Core/Src/main.c ****   int16_t GyroData0[3] = {0};
 766              		.loc 1 175 3 is_stmt 1 view .LVU199
 175:Core/Src/main.c ****   int16_t GyroData0[3] = {0};
 767              		.loc 1 175 11 is_stmt 0 view .LVU200
 768 0070 0693     		str	r3, [sp, #24]
 769 0072 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 176:Core/Src/main.c ****   float TempData0 = 0.0;
 770              		.loc 1 176 3 is_stmt 1 view .LVU201
 176:Core/Src/main.c ****   float TempData0 = 0.0;
 771              		.loc 1 176 11 is_stmt 0 view .LVU202
 772 0076 0493     		str	r3, [sp, #16]
 773 0078 ADF81430 		strh	r3, [sp, #20]	@ movhi
 177:Core/Src/main.c **** 
 774              		.loc 1 177 3 is_stmt 1 view .LVU203
 177:Core/Src/main.c **** 
 775              		.loc 1 177 9 is_stmt 0 view .LVU204
 776 007c 0023     		movs	r3, #0
 777 007e 0393     		str	r3, [sp, #12]	@ float
 179:Core/Src/main.c ****   int len = snprintf(buffer, sizeof(buffer), "MagData: X=%d, Y=%d, Z=%d\n", MagData0[0], MagData0[1
 778              		.loc 1 179 3 is_stmt 1 view .LVU205
 779 0080 03AB     		add	r3, sp, #12
 780 0082 04AA     		add	r2, sp, #16
 781 0084 06A9     		add	r1, sp, #24
 782 0086 08A8     		add	r0, sp, #32
 783 0088 FFF7FEFF 		bl	MPU9250_GetData
 784              	.LVL54:
 180:Core/Src/main.c ****  
 785              		.loc 1 180 3 view .LVU206
 180:Core/Src/main.c ****  
 786              		.loc 1 180 98 is_stmt 0 view .LVU207
 787 008c BDF91A30 		ldrsh	r3, [sp, #26]
 180:Core/Src/main.c ****  
 788              		.loc 1 180 111 view .LVU208
 789 0090 BDF91C20 		ldrsh	r2, [sp, #28]
 180:Core/Src/main.c ****  
 790              		.loc 1 180 13 view .LVU209
 791 0094 1D4D     		ldr	r5, .L42
 792 0096 1E4C     		ldr	r4, .L42+4
 793 0098 0192     		str	r2, [sp, #4]
 794 009a 0093     		str	r3, [sp]
 795 009c BDF91830 		ldrsh	r3, [sp, #24]
 796 00a0 2A46     		mov	r2, r5
 797 00a2 8021     		movs	r1, #128
 798 00a4 2046     		mov	r0, r4
 799 00a6 FFF7FEFF 		bl	snprintf
 800              	.LVL55:
 186:Core/Src/main.c ****   //HAL_UART_Transmit(&huart1, (uint8_t*)buffer, len, HAL_MAX_DELAY);
 801              		.loc 1 186 3 is_stmt 1 view .LVU210
 186:Core/Src/main.c ****   //HAL_UART_Transmit(&huart1, (uint8_t*)buffer, len, HAL_MAX_DELAY);
 802              		.loc 1 186 94 is_stmt 0 view .LVU211
 803 00aa BDF91A30 		ldrsh	r3, [sp, #26]
 186:Core/Src/main.c ****   //HAL_UART_Transmit(&huart1, (uint8_t*)buffer, len, HAL_MAX_DELAY);
 804              		.loc 1 186 107 view .LVU212
 805 00ae BDF91C20 		ldrsh	r2, [sp, #28]
 186:Core/Src/main.c ****   //HAL_UART_Transmit(&huart1, (uint8_t*)buffer, len, HAL_MAX_DELAY);
 806              		.loc 1 186 9 view .LVU213
 807 00b2 0192     		str	r2, [sp, #4]
ARM GAS  /tmp/ccOPlSXs.s 			page 28


 808 00b4 0093     		str	r3, [sp]
 809 00b6 BDF91830 		ldrsh	r3, [sp, #24]
 810 00ba 2A46     		mov	r2, r5
 811 00bc 8021     		movs	r1, #128
 812 00be 2046     		mov	r0, r4
 813 00c0 FFF7FEFF 		bl	snprintf
 814              	.LVL56:
 192:Core/Src/main.c **** 
 815              		.loc 1 192 3 is_stmt 1 view .LVU214
 816 00c4 FFF7FEFF 		bl	osKernelInitialize
 817              	.LVL57:
 195:Core/Src/main.c **** 
 818              		.loc 1 195 3 view .LVU215
 819 00c8 FFF7FEFF 		bl	MX_FREERTOS_Init
 820              	.LVL58:
 198:Core/Src/main.c **** 
 821              		.loc 1 198 3 view .LVU216
 822 00cc FFF7FEFF 		bl	osKernelStart
 823              	.LVL59:
 824              	.L40:
 204:Core/Src/main.c ****   {
 825              		.loc 1 204 3 discriminator 1 view .LVU217
 826              	.LBB11:
 207:Core/Src/main.c **** 
 827              		.loc 1 207 5 discriminator 1 view .LVU218
 207:Core/Src/main.c **** 
 828              		.loc 1 207 100 is_stmt 0 discriminator 1 view .LVU219
 829 00d0 BDF91A30 		ldrsh	r3, [sp, #26]
 207:Core/Src/main.c **** 
 830              		.loc 1 207 113 discriminator 1 view .LVU220
 831 00d4 BDF91C20 		ldrsh	r2, [sp, #28]
 207:Core/Src/main.c **** 
 832              		.loc 1 207 15 discriminator 1 view .LVU221
 833 00d8 0C4D     		ldr	r5, .L42
 834 00da 0D4C     		ldr	r4, .L42+4
 835 00dc 0192     		str	r2, [sp, #4]
 836 00de 0093     		str	r3, [sp]
 837 00e0 BDF91830 		ldrsh	r3, [sp, #24]
 838 00e4 2A46     		mov	r2, r5
 839 00e6 8021     		movs	r1, #128
 840 00e8 2046     		mov	r0, r4
 841 00ea FFF7FEFF 		bl	snprintf
 842              	.LVL60:
 213:Core/Src/main.c ****   //HAL_UART_Transmit(&huart1, (uint8_t*)buffer, len, HAL_MAX_DELAY);
 843              		.loc 1 213 3 is_stmt 1 discriminator 1 view .LVU222
 213:Core/Src/main.c ****   //HAL_UART_Transmit(&huart1, (uint8_t*)buffer, len, HAL_MAX_DELAY);
 844              		.loc 1 213 94 is_stmt 0 discriminator 1 view .LVU223
 845 00ee BDF91A30 		ldrsh	r3, [sp, #26]
 213:Core/Src/main.c ****   //HAL_UART_Transmit(&huart1, (uint8_t*)buffer, len, HAL_MAX_DELAY);
 846              		.loc 1 213 107 discriminator 1 view .LVU224
 847 00f2 BDF91C20 		ldrsh	r2, [sp, #28]
 213:Core/Src/main.c ****   //HAL_UART_Transmit(&huart1, (uint8_t*)buffer, len, HAL_MAX_DELAY);
 848              		.loc 1 213 9 discriminator 1 view .LVU225
 849 00f6 0192     		str	r2, [sp, #4]
 850 00f8 0093     		str	r3, [sp]
 851 00fa BDF91830 		ldrsh	r3, [sp, #24]
 852 00fe 2A46     		mov	r2, r5
ARM GAS  /tmp/ccOPlSXs.s 			page 29


 853 0100 8021     		movs	r1, #128
 854 0102 2046     		mov	r0, r4
 855 0104 FFF7FEFF 		bl	snprintf
 856              	.LVL61:
 857              	.LBE11:
 204:Core/Src/main.c ****   {
 858              		.loc 1 204 9 is_stmt 1 discriminator 1 view .LVU226
 859 0108 E2E7     		b	.L40
 860              	.L43:
 861 010a 00BF     		.align	2
 862              	.L42:
 863 010c 00000000 		.word	.LC3
 864 0110 00000000 		.word	.LANCHOR0
 865              		.cfi_endproc
 866              	.LFE154:
 868              		.global	buffer
 869              		.section	.bss.buffer,"aw",%nobits
 870              		.align	2
 871              		.set	.LANCHOR0,. + 0
 874              	buffer:
 875 0000 00000000 		.space	128
 875      00000000 
 875      00000000 
 875      00000000 
 875      00000000 
 876              		.text
 877              	.Letext0:
 878              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 879              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 880              		.file 5 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 881              		.file 6 "/usr/include/newlib/sys/_types.h"
 882              		.file 7 "/usr/include/newlib/sys/reent.h"
 883              		.file 8 "/usr/include/newlib/sys/lock.h"
 884              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 885              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 886              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 887              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 888              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_i2c.h"
 889              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 890              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 891              		.file 16 "Core/Inc/i2c.h"
 892              		.file 17 "Core/Inc/usart.h"
 893              		.file 18 "Core/Inc/MPU9250.h"
 894              		.file 19 "/usr/include/newlib/stdio.h"
 895              		.file 20 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 896              		.file 21 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 897              		.file 22 "Core/Inc/gpio.h"
 898              		.file 23 "Core/Inc/dma.h"
 899              		.file 24 "Core/Inc/tim.h"
 900              		.file 25 "Core/Inc/servo_control.h"
 901              		.file 26 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 902              		.file 27 "<built-in>"
ARM GAS  /tmp/ccOPlSXs.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccOPlSXs.s:17     .text.MPU_Config:0000000000000000 $t
     /tmp/ccOPlSXs.s:24     .text.MPU_Config:0000000000000000 MPU_Config
     /tmp/ccOPlSXs.s:103    .text.fputc:0000000000000000 $t
     /tmp/ccOPlSXs.s:110    .text.fputc:0000000000000000 fputc
     /tmp/ccOPlSXs.s:148    .text.fputc:000000000000001c $d
     /tmp/ccOPlSXs.s:153    .text.fgetc:0000000000000000 $t
     /tmp/ccOPlSXs.s:160    .text.fgetc:0000000000000000 fgetc
     /tmp/ccOPlSXs.s:207    .text.fgetc:0000000000000020 $d
     /tmp/ccOPlSXs.s:212    .rodata.scan_I2C_bus.str1.4:0000000000000000 $d
     /tmp/ccOPlSXs.s:222    .text.scan_I2C_bus:0000000000000000 $t
     /tmp/ccOPlSXs.s:229    .text.scan_I2C_bus:0000000000000000 scan_I2C_bus
     /tmp/ccOPlSXs.s:323    .text.scan_I2C_bus:0000000000000060 $d
     /tmp/ccOPlSXs.s:332    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccOPlSXs.s:339    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccOPlSXs.s:373    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccOPlSXs.s:378    .text.Error_Handler:0000000000000000 $t
     /tmp/ccOPlSXs.s:385    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccOPlSXs.s:417    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccOPlSXs.s:424    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccOPlSXs.s:655    .text.SystemClock_Config:0000000000000108 $d
     /tmp/ccOPlSXs.s:662    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccOPlSXs.s:666    .text.main:0000000000000000 $t
     /tmp/ccOPlSXs.s:673    .text.main:0000000000000000 main
     /tmp/ccOPlSXs.s:863    .text.main:000000000000010c $d
     /tmp/ccOPlSXs.s:874    .bss.buffer:0000000000000000 buffer
     /tmp/ccOPlSXs.s:870    .bss.buffer:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_MPU_Disable
HAL_MPU_ConfigRegion
HAL_MPU_Enable
HAL_UART_Transmit
huart1
HAL_UART_Receive_IT
HAL_I2C_IsDeviceReady
snprintf
hi2c1
HAL_IncTick
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_TIM5_Init
MX_TIM8_Init
MX_TIM12_Init
MX_TIM13_Init
MX_TIM14_Init
MX_TIM15_Init
MX_TIM16_Init
MX_TIM17_Init
MX_I2C1_Init
MX_USART1_UART_Init
ARM GAS  /tmp/ccOPlSXs.s 			page 31


MX_TIM3_Init
MX_TIM4_Init
Servo_Init
MPU9250_Init
MPU9250_SetAccelRange
MPU9250_SetGyroRange
MPU9250_SetDLPFBandwidth
MPU9250_SetSampleRateDivider
MPU9250_GetData
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
