ARM GAS  /tmp/ccgPZJsu.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"freertos.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
  17              		.align	2
  18              	.LC0:
  19 0000 413A2564 		.ascii	"A:%d,%d,%d,%d,G:%d,%d,%d\012\000"
  19      2C25642C 
  19      25642C25 
  19      642C473A 
  19      25642C25 
  20              		.section	.text.StartDefaultTask,"ax",%progbits
  21              		.align	1
  22              		.global	StartDefaultTask
  23              		.arch armv7e-m
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  27              		.fpu fpv5-d16
  29              	StartDefaultTask:
  30              	.LFB152:
  31              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
ARM GAS  /tmp/ccgPZJsu.s 			page 2


  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** #include "queue.h"
  29:Core/Src/freertos.c **** #include "servo_control.h"
  30:Core/Src/freertos.c **** #include "MPU9250.h"
  31:Core/Src/freertos.c **** #include "robocontrol.h"
  32:Core/Src/freertos.c **** #include <stdio.h>
  33:Core/Src/freertos.c **** #include <string.h>
  34:Core/Src/freertos.c **** #include "VMC.h"
  35:Core/Src/freertos.c **** #include "AHRS.h"
  36:Core/Src/freertos.c **** 
  37:Core/Src/freertos.c **** /* USER CODE END Includes */
  38:Core/Src/freertos.c **** 
  39:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  40:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  41:Core/Src/freertos.c **** extern UART_HandleTypeDef huart1;
  42:Core/Src/freertos.c **** IMUData imuData;
  43:Core/Src/freertos.c **** /* USER CODE END PTD */
  44:Core/Src/freertos.c **** 
  45:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  46:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  47:Core/Src/freertos.c **** 
  48:Core/Src/freertos.c **** /* 每个步态阶段的持续时间（毫秒） */
  49:Core/Src/freertos.c **** #define GAIT_PHASE_DURATION 1  // 根据需要调整
  50:Core/Src/freertos.c **** 
  51:Core/Src/freertos.c **** /* USER CODE END PD */
  52:Core/Src/freertos.c **** 
  53:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  54:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  55:Core/Src/freertos.c **** // 定义队列用于姿态四元数数据传输
  56:Core/Src/freertos.c **** QueueHandle_t quatQueue;
  57:Core/Src/freertos.c **** 
  58:Core/Src/freertos.c **** /* 步态阶段的定义 */
  59:Core/Src/freertos.c **** typedef enum {
  60:Core/Src/freertos.c ****     GAIT_PHASE_1 = 0,
  61:Core/Src/freertos.c ****     GAIT_PHASE_2,
  62:Core/Src/freertos.c ****     GAIT_PHASE_3,
  63:Core/Src/freertos.c ****     GAIT_PHASE_4
  64:Core/Src/freertos.c **** } GaitPhase;
  65:Core/Src/freertos.c **** 
  66:Core/Src/freertos.c **** 
  67:Core/Src/freertos.c **** 
  68:Core/Src/freertos.c **** /* USER CODE END PM */
  69:Core/Src/freertos.c **** 
  70:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  71:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  72:Core/Src/freertos.c **** 
  73:Core/Src/freertos.c **** // 定义数据存储变量
  74:Core/Src/freertos.c **** int16_t AccData[3] = {0};
  75:Core/Src/freertos.c **** int16_t MagData[3] = {0};
  76:Core/Src/freertos.c **** int16_t GyroData[3] = {0};
  77:Core/Src/freertos.c **** float TempData = 0.0;
  78:Core/Src/freertos.c **** 
  79:Core/Src/freertos.c **** /* USER CODE END Variables */
  80:Core/Src/freertos.c **** /* Definitions for defaultTask */
ARM GAS  /tmp/ccgPZJsu.s 			page 3


  81:Core/Src/freertos.c **** osThreadId_t defaultTaskHandle;
  82:Core/Src/freertos.c **** const osThreadAttr_t defaultTask_attributes = {
  83:Core/Src/freertos.c ****   .name = "defaultTask",
  84:Core/Src/freertos.c ****   .stack_size = 128 * 4,
  85:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
  86:Core/Src/freertos.c **** };
  87:Core/Src/freertos.c **** /* Definitions for AttitudeTask */
  88:Core/Src/freertos.c **** osThreadId_t AttitudeTaskHandle;
  89:Core/Src/freertos.c **** const osThreadAttr_t AttitudeTask_attributes = {
  90:Core/Src/freertos.c ****   .name = "AttitudeTask",
  91:Core/Src/freertos.c ****   .stack_size = 1024 * 4,
  92:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityRealtime3,
  93:Core/Src/freertos.c **** };
  94:Core/Src/freertos.c **** /* Definitions for ServoControlTas */
  95:Core/Src/freertos.c **** osThreadId_t ServoControlTasHandle;
  96:Core/Src/freertos.c **** const osThreadAttr_t ServoControlTas_attributes = {
  97:Core/Src/freertos.c ****   .name = "ServoControlTas",
  98:Core/Src/freertos.c ****   .stack_size = 256 * 4,
  99:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityRealtime1,
 100:Core/Src/freertos.c **** };
 101:Core/Src/freertos.c **** /* Definitions for GaitControlTask */
 102:Core/Src/freertos.c **** osThreadId_t GaitControlTaskHandle;
 103:Core/Src/freertos.c **** const osThreadAttr_t GaitControlTask_attributes = {
 104:Core/Src/freertos.c ****   .name = "GaitControlTask",
 105:Core/Src/freertos.c ****   .stack_size = 256 * 4,
 106:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityRealtime1,
 107:Core/Src/freertos.c **** };
 108:Core/Src/freertos.c **** /* Definitions for SerialCommTask */
 109:Core/Src/freertos.c **** osThreadId_t SerialCommTaskHandle;
 110:Core/Src/freertos.c **** const osThreadAttr_t SerialCommTask_attributes = {
 111:Core/Src/freertos.c ****   .name = "SerialCommTask",
 112:Core/Src/freertos.c ****   .stack_size = 256 * 4,
 113:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityRealtime1,
 114:Core/Src/freertos.c **** };
 115:Core/Src/freertos.c **** 
 116:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
 117:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
 118:Core/Src/freertos.c **** void print_accel_data(int16_t AccData[3]);
 119:Core/Src/freertos.c **** void print_mag_data(int16_t MagData[3]);
 120:Core/Src/freertos.c **** void print_gyro_data(int16_t GyroData[3]);
 121:Core/Src/freertos.c **** void print_temp_data(float32_t TempData);
 122:Core/Src/freertos.c **** 
 123:Core/Src/freertos.c **** void UART_ProcessCommand(uint8_t* buffer);
 124:Core/Src/freertos.c **** void SendAttitudeToHost(float q[4]);
 125:Core/Src/freertos.c **** void SendAttitudeToPC(float q[4]);
 126:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 127:Core/Src/freertos.c **** 
 128:Core/Src/freertos.c **** void StartDefaultTask(void *argument);
 129:Core/Src/freertos.c **** void StartAttitudeTask(void *argument);
 130:Core/Src/freertos.c **** void StartServoControlTask(void *argument);
 131:Core/Src/freertos.c **** void StartGaitControlTask(void *argument);
 132:Core/Src/freertos.c **** void StartSerialCommTask(void *argument);
 133:Core/Src/freertos.c **** 
 134:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
 135:Core/Src/freertos.c **** 
 136:Core/Src/freertos.c **** /**
 137:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
ARM GAS  /tmp/ccgPZJsu.s 			page 4


 138:Core/Src/freertos.c ****   * @param  None
 139:Core/Src/freertos.c ****   * @retval None
 140:Core/Src/freertos.c ****   */
 141:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
 142:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 143:Core/Src/freertos.c ****     Servo_Init();
 144:Core/Src/freertos.c ****     //MPU9250_Init();
 145:Core/Src/freertos.c ****     AHRS_Init();  
 146:Core/Src/freertos.c ****   /* USER CODE END Init */
 147:Core/Src/freertos.c **** 
 148:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 149:Core/Src/freertos.c ****   /* add mutexes, ... */
 150:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 151:Core/Src/freertos.c **** 
 152:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 153:Core/Src/freertos.c ****   /* add semaphores, ... */
 154:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 155:Core/Src/freertos.c **** 
 156:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 157:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 158:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 159:Core/Src/freertos.c **** 
 160:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 161:Core/Src/freertos.c ****    quatQueue = xQueueCreate(10, sizeof(int16_t[4]));  // 创建队列，存储四元数数据
 162:Core/Src/freertos.c ****   /* add queues, ... */
 163:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 164:Core/Src/freertos.c **** 
 165:Core/Src/freertos.c ****   /* Create the thread(s) */
 166:Core/Src/freertos.c ****   /* creation of defaultTask */
 167:Core/Src/freertos.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 168:Core/Src/freertos.c **** 
 169:Core/Src/freertos.c ****   /* creation of AttitudeTask */
 170:Core/Src/freertos.c ****   AttitudeTaskHandle = osThreadNew(StartAttitudeTask, NULL, &AttitudeTask_attributes);
 171:Core/Src/freertos.c **** 
 172:Core/Src/freertos.c ****   /* creation of ServoControlTas */
 173:Core/Src/freertos.c ****   ServoControlTasHandle = osThreadNew(StartServoControlTask, NULL, &ServoControlTas_attributes);
 174:Core/Src/freertos.c **** 
 175:Core/Src/freertos.c ****   /* creation of GaitControlTask */
 176:Core/Src/freertos.c ****   GaitControlTaskHandle = osThreadNew(StartGaitControlTask, NULL, &GaitControlTask_attributes);
 177:Core/Src/freertos.c **** 
 178:Core/Src/freertos.c ****   /* creation of SerialCommTask */
 179:Core/Src/freertos.c ****   SerialCommTaskHandle = osThreadNew(StartSerialCommTask, NULL, &SerialCommTask_attributes);
 180:Core/Src/freertos.c **** 
 181:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 182:Core/Src/freertos.c ****   /* add threads, ... */
 183:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 184:Core/Src/freertos.c **** 
 185:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 186:Core/Src/freertos.c ****   /* add events, ... */
 187:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 188:Core/Src/freertos.c **** 
 189:Core/Src/freertos.c **** }
 190:Core/Src/freertos.c **** 
 191:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 192:Core/Src/freertos.c **** /**
 193:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 194:Core/Src/freertos.c ****   * @param  argument: Not used
ARM GAS  /tmp/ccgPZJsu.s 			page 5


 195:Core/Src/freertos.c ****   * @retval None
 196:Core/Src/freertos.c ****   */
 197:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 198:Core/Src/freertos.c **** void StartDefaultTask(void *argument)
 199:Core/Src/freertos.c **** {
  32              		.loc 1 199 1 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 256
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              	.LVL0:
  37              		.loc 1 199 1 is_stmt 0 view .LVU1
  38 0000 30B5     		push	{r4, r5, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 12
  41              		.cfi_offset 4, -12
  42              		.cfi_offset 5, -8
  43              		.cfi_offset 14, -4
  44 0002 C7B0     		sub	sp, sp, #284
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 296
  47              	.LVL1:
  48              	.L2:
 200:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 201:Core/Src/freertos.c ****   /* Infinite loop */
 202:Core/Src/freertos.c ****   for(;;)
  49              		.loc 1 202 3 is_stmt 1 discriminator 1 view .LVU2
  50              	.LBB2:
 203:Core/Src/freertos.c ****   {
 204:Core/Src/freertos.c ****     MPU9250_GetData(imuData.accel, imuData.mag, imuData.gyro, NULL);  // 读取IMU数据
  51              		.loc 1 204 5 discriminator 1 view .LVU3
  52 0004 144C     		ldr	r4, .L4
  53 0006 0023     		movs	r3, #0
  54 0008 A21D     		adds	r2, r4, #6
  55 000a 04F10C01 		add	r1, r4, #12
  56 000e 2046     		mov	r0, r4
  57 0010 FFF7FEFF 		bl	MPU9250_GetData
  58              	.LVL2:
 205:Core/Src/freertos.c ****         // 获取加速度、陀螺仪和磁力计原始数据
 206:Core/Src/freertos.c ****         int16_t ax = imuData.accel[0], ay = imuData.accel[1], az = imuData.accel[2];
  59              		.loc 1 206 9 discriminator 1 view .LVU4
  60              		.loc 1 206 40 is_stmt 0 discriminator 1 view .LVU5
  61 0014 B4F90230 		ldrsh	r3, [r4, #2]
  62              	.LVL3:
  63              		.loc 1 206 63 discriminator 1 view .LVU6
  64 0018 B4F90420 		ldrsh	r2, [r4, #4]
  65              	.LVL4:
 207:Core/Src/freertos.c ****         int16_t gx = imuData.gyro[0] , gy = imuData.gyro[1] , gz = imuData.gyro[2] ;
  66              		.loc 1 207 9 is_stmt 1 discriminator 1 view .LVU7
  67              		.loc 1 207 17 is_stmt 0 discriminator 1 view .LVU8
  68 001c B4F90610 		ldrsh	r1, [r4, #6]
  69              	.LVL5:
  70              		.loc 1 207 40 discriminator 1 view .LVU9
  71 0020 B4F90800 		ldrsh	r0, [r4, #8]
  72              	.LVL6:
  73              		.loc 1 207 63 discriminator 1 view .LVU10
  74 0024 B4F90A50 		ldrsh	r5, [r4, #10]
  75              	.LVL7:
ARM GAS  /tmp/ccgPZJsu.s 			page 6


 208:Core/Src/freertos.c ****         int16_t mx = imuData.mag[0], my = imuData.mag[1], mz = imuData.mag[2];
  76              		.loc 1 208 9 is_stmt 1 discriminator 1 view .LVU11
 209:Core/Src/freertos.c ****          // 打印四元数数据
 210:Core/Src/freertos.c ****         char printBuffer[256];
  77              		.loc 1 210 9 discriminator 1 view .LVU12
 211:Core/Src/freertos.c ****         int len = snprintf(printBuffer, sizeof(printBuffer), "A:%d,%d,%d,%d,G:%d,%d,%d\n", ax, ay, 
  78              		.loc 1 211 9 discriminator 1 view .LVU13
  79              		.loc 1 211 19 is_stmt 0 discriminator 1 view .LVU14
  80 0028 0495     		str	r5, [sp, #16]
  81 002a 0390     		str	r0, [sp, #12]
  82 002c 0291     		str	r1, [sp, #8]
  83 002e 0192     		str	r2, [sp, #4]
  84 0030 0093     		str	r3, [sp]
  85 0032 B4F90030 		ldrsh	r3, [r4]
  86              	.LVL8:
  87              		.loc 1 211 19 discriminator 1 view .LVU15
  88 0036 094A     		ldr	r2, .L4+4
  89              	.LVL9:
  90              		.loc 1 211 19 discriminator 1 view .LVU16
  91 0038 4FF48071 		mov	r1, #256
  92              	.LVL10:
  93              		.loc 1 211 19 discriminator 1 view .LVU17
  94 003c 06A8     		add	r0, sp, #24
  95              	.LVL11:
  96              		.loc 1 211 19 discriminator 1 view .LVU18
  97 003e FFF7FEFF 		bl	snprintf
  98              	.LVL12:
 212:Core/Src/freertos.c ****         HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
  99              		.loc 1 212 9 is_stmt 1 discriminator 1 view .LVU19
 100 0042 4FF0FF33 		mov	r3, #-1
 101 0046 82B2     		uxth	r2, r0
 102 0048 06A9     		add	r1, sp, #24
 103 004a 0548     		ldr	r0, .L4+8
 104              	.LVL13:
 105              		.loc 1 212 9 is_stmt 0 discriminator 1 view .LVU20
 106 004c FFF7FEFF 		bl	HAL_UART_Transmit
 107              	.LVL14:
 213:Core/Src/freertos.c **** 
 214:Core/Src/freertos.c ****     osDelay(1);
 108              		.loc 1 214 5 is_stmt 1 discriminator 1 view .LVU21
 109 0050 0120     		movs	r0, #1
 110 0052 FFF7FEFF 		bl	osDelay
 111              	.LVL15:
 112              	.LBE2:
 202:Core/Src/freertos.c ****   {
 113              		.loc 1 202 8 discriminator 1 view .LVU22
 114 0056 D5E7     		b	.L2
 115              	.L5:
 116              		.align	2
 117              	.L4:
 118 0058 00000000 		.word	.LANCHOR0
 119 005c 00000000 		.word	.LC0
 120 0060 00000000 		.word	huart1
 121              		.cfi_endproc
 122              	.LFE152:
 124              		.section	.rodata.StartAttitudeTask.str1.4,"aMS",%progbits,1
 125              		.align	2
ARM GAS  /tmp/ccgPZJsu.s 			page 7


 126              	.LC1:
 127 0000 413A252E 		.ascii	"A:%.2f,%.2f,%.2f G:%.2f,%.2f,%.2f M:%.2f,%.2f,%.2f\012"
 127      32662C25 
 127      2E32662C 
 127      252E3266 
 127      20473A25 
 128 0033 00       		.ascii	"\000"
 129              		.section	.text.StartAttitudeTask,"ax",%progbits
 130              		.align	1
 131              		.global	StartAttitudeTask
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv5-d16
 137              	StartAttitudeTask:
 138              	.LFB153:
 215:Core/Src/freertos.c ****   }
 216:Core/Src/freertos.c ****   /* USER CODE END StartDefaultTask */
 217:Core/Src/freertos.c **** }
 218:Core/Src/freertos.c **** 
 219:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartAttitudeTask */
 220:Core/Src/freertos.c **** /**
 221:Core/Src/freertos.c **** * @brief Function implementing the AttitudeTask thread.
 222:Core/Src/freertos.c **** * @param argument: Not used
 223:Core/Src/freertos.c **** * @retval None
 224:Core/Src/freertos.c **** */
 225:Core/Src/freertos.c **** /* USER CODE END Header_StartAttitudeTask */
 226:Core/Src/freertos.c **** void StartAttitudeTask(void *argument)
 227:Core/Src/freertos.c **** {
 139              		.loc 1 227 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 1064
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              	.LVL16:
 144              		.loc 1 227 1 is_stmt 0 view .LVU24
 145 0000 10B5     		push	{r4, lr}
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
 150 0002 ADF58E6D 		sub	sp, sp, #1136
 151              	.LCFI3:
 152              		.cfi_def_cfa_offset 1144
 153              	.LVL17:
 154              	.L7:
 228:Core/Src/freertos.c ****   /* USER CODE BEGIN StartAttitudeTask */
 229:Core/Src/freertos.c ****   //AHRS_Init();  AHRS_Init();  
 230:Core/Src/freertos.c ****   IMUData imuData;
 155              		.loc 1 230 3 is_stmt 1 discriminator 1 view .LVU25
 231:Core/Src/freertos.c ****   /* Infinite loop */
 232:Core/Src/freertos.c ****   for(;;)
 156              		.loc 1 232 3 discriminator 1 view .LVU26
 157              	.LBB3:
 233:Core/Src/freertos.c ****   {
 234:Core/Src/freertos.c ****         
 235:Core/Src/freertos.c ****         MPU9250_GetData(imuData.accel, imuData.mag, imuData.gyro, NULL);  // 读取IMU数据
 158              		.loc 1 235 9 discriminator 1 view .LVU27
ARM GAS  /tmp/ccgPZJsu.s 			page 8


 159 0006 0023     		movs	r3, #0
 160 0008 0DF25E42 		addw	r2, sp, #1118
 161 000c 0DF26441 		addw	r1, sp, #1124
 162 0010 0DF58B60 		add	r0, sp, #1112
 163 0014 FFF7FEFF 		bl	MPU9250_GetData
 164              	.LVL18:
 236:Core/Src/freertos.c ****         // 获取加速度、陀螺仪和磁力计原始数据
 237:Core/Src/freertos.c ****         float ax = imuData.accel[0] * 4.0f * 9.81f / 32768.0f; // 4G 量程
 165              		.loc 1 237 9 discriminator 1 view .LVU28
 166              		.loc 1 237 33 is_stmt 0 discriminator 1 view .LVU29
 167 0018 BDF95834 		ldrsh	r3, [sp, #1112]
 168 001c 07EE903A 		vmov	s15, r3	@ int
 169              		.loc 1 237 37 discriminator 1 view .LVU30
 170 0020 F8EEE77A 		vcvt.f32.s32	s15, s15
 171 0024 B1EE005A 		vmov.f32	s10, #4.0e+0
 172 0028 67EE857A 		vmul.f32	s15, s15, s10
 173              		.loc 1 237 44 discriminator 1 view .LVU31
 174 002c 9FED626A 		vldr.32	s12, .L9+16
 175 0030 67EE867A 		vmul.f32	s15, s15, s12
 176              		.loc 1 237 15 discriminator 1 view .LVU32
 177 0034 DFED615A 		vldr.32	s11, .L9+20
 178 0038 67EEA57A 		vmul.f32	s15, s15, s11
 179              	.LVL19:
 238:Core/Src/freertos.c ****         float ay = imuData.accel[1] * 4.0f * 9.81f / 32768.0f;
 180              		.loc 1 238 9 is_stmt 1 discriminator 1 view .LVU33
 181              		.loc 1 238 33 is_stmt 0 discriminator 1 view .LVU34
 182 003c BDF95A34 		ldrsh	r3, [sp, #1114]
 183 0040 07EE103A 		vmov	s14, r3	@ int
 184              		.loc 1 238 37 discriminator 1 view .LVU35
 185 0044 B8EEC77A 		vcvt.f32.s32	s14, s14
 186 0048 27EE057A 		vmul.f32	s14, s14, s10
 187              		.loc 1 238 44 discriminator 1 view .LVU36
 188 004c 27EE067A 		vmul.f32	s14, s14, s12
 189              		.loc 1 238 15 discriminator 1 view .LVU37
 190 0050 27EE257A 		vmul.f32	s14, s14, s11
 191              	.LVL20:
 239:Core/Src/freertos.c ****         float az = imuData.accel[2] * 4.0f * 9.81f / 32768.0f;
 192              		.loc 1 239 9 is_stmt 1 discriminator 1 view .LVU38
 193              		.loc 1 239 33 is_stmt 0 discriminator 1 view .LVU39
 194 0054 BDF95C34 		ldrsh	r3, [sp, #1116]
 195 0058 06EE903A 		vmov	s13, r3	@ int
 196              		.loc 1 239 37 discriminator 1 view .LVU40
 197 005c F8EEE66A 		vcvt.f32.s32	s13, s13
 198 0060 66EE856A 		vmul.f32	s13, s13, s10
 199              		.loc 1 239 44 discriminator 1 view .LVU41
 200 0064 66EE866A 		vmul.f32	s13, s13, s12
 201              		.loc 1 239 15 discriminator 1 view .LVU42
 202 0068 66EEA56A 		vmul.f32	s13, s13, s11
 203              	.LVL21:
 240:Core/Src/freertos.c ****         float gx = imuData.gyro[0] * 500.0f / 32768.0f * M_PI / 180.0f; // 500DPS 量程
 204              		.loc 1 240 9 is_stmt 1 discriminator 1 view .LVU43
 205              		.loc 1 240 32 is_stmt 0 discriminator 1 view .LVU44
 206 006c BDF95E34 		ldrsh	r3, [sp, #1118]
 207 0070 04EE103A 		vmov	s8, r3	@ int
 208              		.loc 1 240 36 discriminator 1 view .LVU45
 209 0074 B8EEC44A 		vcvt.f32.s32	s8, s8
 210 0078 9FED511A 		vldr.32	s2, .L9+24
ARM GAS  /tmp/ccgPZJsu.s 			page 9


 211 007c 24EE014A 		vmul.f32	s8, s8, s2
 212              		.loc 1 240 45 discriminator 1 view .LVU46
 213 0080 24EE254A 		vmul.f32	s8, s8, s11
 214 0084 B7EEC44A 		vcvt.f64.f32	d4, s8
 215              		.loc 1 240 56 discriminator 1 view .LVU47
 216 0088 9FED472B 		vldr.64	d2, .L9
 217 008c 24EE024B 		vmul.f64	d4, d4, d2
 218              		.loc 1 240 63 discriminator 1 view .LVU48
 219 0090 9FED473B 		vldr.64	d3, .L9+8
 220 0094 84EE030B 		vdiv.f64	d0, d4, d3
 221              		.loc 1 240 15 discriminator 1 view .LVU49
 222 0098 B7EEC06B 		vcvt.f32.f64	s12, d0
 223              	.LVL22:
 241:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 224              		.loc 1 241 9 is_stmt 1 discriminator 1 view .LVU50
 225              		.loc 1 241 32 is_stmt 0 discriminator 1 view .LVU51
 226 009c BDF96034 		ldrsh	r3, [sp, #1120]
 227 00a0 04EE103A 		vmov	s8, r3	@ int
 228              		.loc 1 241 36 discriminator 1 view .LVU52
 229 00a4 B8EEC44A 		vcvt.f32.s32	s8, s8
 230 00a8 24EE014A 		vmul.f32	s8, s8, s2
 231              		.loc 1 241 45 discriminator 1 view .LVU53
 232 00ac 24EE254A 		vmul.f32	s8, s8, s11
 233 00b0 B7EEC44A 		vcvt.f64.f32	d4, s8
 234              		.loc 1 241 56 discriminator 1 view .LVU54
 235 00b4 24EE024B 		vmul.f64	d4, d4, d2
 236              		.loc 1 241 63 discriminator 1 view .LVU55
 237 00b8 84EE030B 		vdiv.f64	d0, d4, d3
 238              		.loc 1 241 15 discriminator 1 view .LVU56
 239 00bc F7EEC01B 		vcvt.f32.f64	s3, d0
 240              	.LVL23:
 242:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 241              		.loc 1 242 9 is_stmt 1 discriminator 1 view .LVU57
 242              		.loc 1 242 32 is_stmt 0 discriminator 1 view .LVU58
 243 00c0 BDF96234 		ldrsh	r3, [sp, #1122]
 244 00c4 05EE103A 		vmov	s10, r3	@ int
 245              		.loc 1 242 36 discriminator 1 view .LVU59
 246 00c8 B8EEC55A 		vcvt.f32.s32	s10, s10
 247 00cc 25EE015A 		vmul.f32	s10, s10, s2
 248              		.loc 1 242 45 discriminator 1 view .LVU60
 249 00d0 25EE255A 		vmul.f32	s10, s10, s11
 250 00d4 B7EEC55A 		vcvt.f64.f32	d5, s10
 251              		.loc 1 242 56 discriminator 1 view .LVU61
 252 00d8 25EE025B 		vmul.f64	d5, d5, d2
 253              		.loc 1 242 63 discriminator 1 view .LVU62
 254 00dc 85EE034B 		vdiv.f64	d4, d5, d3
 255              		.loc 1 242 15 discriminator 1 view .LVU63
 256 00e0 F7EEC42B 		vcvt.f32.f64	s5, d4
 257              	.LVL24:
 243:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 258              		.loc 1 243 9 is_stmt 1 discriminator 1 view .LVU64
 259              		.loc 1 243 31 is_stmt 0 discriminator 1 view .LVU65
 260 00e4 BDF96434 		ldrsh	r3, [sp, #1124]
 261 00e8 05EE103A 		vmov	s10, r3	@ int
 262              		.loc 1 243 35 discriminator 1 view .LVU66
 263 00ec B8EEC55A 		vcvt.f32.s32	s10, s10
 264              		.loc 1 243 15 discriminator 1 view .LVU67
ARM GAS  /tmp/ccgPZJsu.s 			page 10


 265 00f0 DFED345A 		vldr.32	s11, .L9+28
 266 00f4 25EE255A 		vmul.f32	s10, s10, s11
 267              	.LVL25:
 244:Core/Src/freertos.c ****         float my = imuData.mag[1] * 0.146f;
 268              		.loc 1 244 9 is_stmt 1 discriminator 1 view .LVU68
 269              		.loc 1 244 31 is_stmt 0 discriminator 1 view .LVU69
 270 00f8 BDF96634 		ldrsh	r3, [sp, #1126]
 271 00fc 04EE103A 		vmov	s8, r3	@ int
 272              		.loc 1 244 35 discriminator 1 view .LVU70
 273 0100 B8EEC44A 		vcvt.f32.s32	s8, s8
 274              		.loc 1 244 15 discriminator 1 view .LVU71
 275 0104 24EE254A 		vmul.f32	s8, s8, s11
 276              	.LVL26:
 245:Core/Src/freertos.c ****         float mz = imuData.mag[2] * 0.146f;
 277              		.loc 1 245 9 is_stmt 1 discriminator 1 view .LVU72
 278              		.loc 1 245 31 is_stmt 0 discriminator 1 view .LVU73
 279 0108 BDF96834 		ldrsh	r3, [sp, #1128]
 280 010c 03EE103A 		vmov	s6, r3	@ int
 281              		.loc 1 245 35 discriminator 1 view .LVU74
 282 0110 B8EEC33A 		vcvt.f32.s32	s6, s6
 283              		.loc 1 245 15 discriminator 1 view .LVU75
 284 0114 23EE253A 		vmul.f32	s6, s6, s11
 285              	.LVL27:
 246:Core/Src/freertos.c **** 
 247:Core/Src/freertos.c ****         // 打印传感器数据
 248:Core/Src/freertos.c ****         char printBuffer[1024];
 286              		.loc 1 248 9 is_stmt 1 discriminator 1 view .LVU76
 249:Core/Src/freertos.c ****         int len = snprintf(printBuffer, sizeof(printBuffer), 
 287              		.loc 1 249 9 discriminator 1 view .LVU77
 288              		.loc 1 249 19 is_stmt 0 discriminator 1 view .LVU78
 289 0118 B7EEC33A 		vcvt.f64.f32	d3, s6
 290              	.LVL28:
 291              		.loc 1 249 19 discriminator 1 view .LVU79
 292 011c 8DED103B 		vstr.64	d3, [sp, #64]
 293 0120 B7EEC44A 		vcvt.f64.f32	d4, s8
 294              	.LVL29:
 295              		.loc 1 249 19 discriminator 1 view .LVU80
 296 0124 8DED0E4B 		vstr.64	d4, [sp, #56]
 297 0128 B7EEC55A 		vcvt.f64.f32	d5, s10
 298              	.LVL30:
 299              		.loc 1 249 19 discriminator 1 view .LVU81
 300 012c 8DED0C5B 		vstr.64	d5, [sp, #48]
 301 0130 B7EEE25A 		vcvt.f64.f32	d5, s5
 302 0134 8DED0A5B 		vstr.64	d5, [sp, #40]
 303 0138 B7EEE15A 		vcvt.f64.f32	d5, s3
 304 013c 8DED085B 		vstr.64	d5, [sp, #32]
 305 0140 B7EEC65A 		vcvt.f64.f32	d5, s12
 306 0144 8DED065B 		vstr.64	d5, [sp, #24]
 307 0148 B7EEE66A 		vcvt.f64.f32	d6, s13
 308              	.LVL31:
 309              		.loc 1 249 19 discriminator 1 view .LVU82
 310 014c 8DED046B 		vstr.64	d6, [sp, #16]
 311 0150 B7EEC76A 		vcvt.f64.f32	d6, s14
 312 0154 8DED026B 		vstr.64	d6, [sp, #8]
 313 0158 B7EEE77A 		vcvt.f64.f32	d7, s15
 314              	.LVL32:
 315              		.loc 1 249 19 discriminator 1 view .LVU83
ARM GAS  /tmp/ccgPZJsu.s 			page 11


 316 015c 8DED007B 		vstr.64	d7, [sp]
 317 0160 194A     		ldr	r2, .L9+32
 318 0162 4FF48061 		mov	r1, #1024
 319 0166 16A8     		add	r0, sp, #88
 320 0168 FFF7FEFF 		bl	snprintf
 321              	.LVL33:
 250:Core/Src/freertos.c ****                          "A:%.2f,%.2f,%.2f G:%.2f,%.2f,%.2f M:%.2f,%.2f,%.2f\n", 
 251:Core/Src/freertos.c ****                           ax, ay, az, gx, gy, gz, mx, my, mz);
 252:Core/Src/freertos.c ****         //int len = snprintf(printBuffer, sizeof(printBuffer), 
 253:Core/Src/freertos.c ****         //                 "A:%d,%d,%d G:%d,%d,%d M:%d,%d,%d\n", 
 254:Core/Src/freertos.c ****         //                  (int16_t)ax, (int16_t)ay, (int16_t)az, (int16_t)gx, (int16_t)gy, (int16
 255:Core/Src/freertos.c ****         HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 322              		.loc 1 255 9 is_stmt 1 discriminator 1 view .LVU84
 323 016c 4FF0FF33 		mov	r3, #-1
 324 0170 82B2     		uxth	r2, r0
 325 0172 16A9     		add	r1, sp, #88
 326 0174 1548     		ldr	r0, .L9+36
 327              	.LVL34:
 328              		.loc 1 255 9 is_stmt 0 discriminator 1 view .LVU85
 329 0176 FFF7FEFF 		bl	HAL_UART_Transmit
 330              	.LVL35:
 256:Core/Src/freertos.c **** 
 257:Core/Src/freertos.c ****         AHRS_Update();  // 更新姿态四元数
 331              		.loc 1 257 9 is_stmt 1 discriminator 1 view .LVU86
 332 017a FFF7FEFF 		bl	AHRS_Update
 333              	.LVL36:
 258:Core/Src/freertos.c ****         // 获取并处理姿态四元数
 259:Core/Src/freertos.c ****         float quat[4] = {0};
 334              		.loc 1 259 9 discriminator 1 view .LVU87
 335              		.loc 1 259 15 is_stmt 0 discriminator 1 view .LVU88
 336 017e 0024     		movs	r4, #0
 337 0180 1294     		str	r4, [sp, #72]
 338 0182 1394     		str	r4, [sp, #76]
 339 0184 1494     		str	r4, [sp, #80]
 340 0186 1594     		str	r4, [sp, #84]
 260:Core/Src/freertos.c ****         //SendAttitudeToHost(quat);  // 发送姿态四元数给上位机
 261:Core/Src/freertos.c ****         AHRS_GetQuaternion(quat);
 341              		.loc 1 261 9 is_stmt 1 discriminator 1 view .LVU89
 342 0188 12A8     		add	r0, sp, #72
 343 018a FFF7FEFF 		bl	AHRS_GetQuaternion
 344              	.LVL37:
 262:Core/Src/freertos.c ****         
 263:Core/Src/freertos.c ****         
 264:Core/Src/freertos.c ****         // 将姿态四元数发送给GaitControlTask
 265:Core/Src/freertos.c ****         xQueueSend(quatQueue, &quat, portMAX_DELAY);
 345              		.loc 1 265 9 discriminator 1 view .LVU90
 346 018e 2346     		mov	r3, r4
 347 0190 4FF0FF32 		mov	r2, #-1
 348 0194 12A9     		add	r1, sp, #72
 349 0196 0E48     		ldr	r0, .L9+40
 350 0198 0068     		ldr	r0, [r0]
 351 019a FFF7FEFF 		bl	xQueueGenericSend
 352              	.LVL38:
 266:Core/Src/freertos.c ****         vTaskDelay(pdMS_TO_TICKS(10)); 
 353              		.loc 1 266 9 discriminator 1 view .LVU91
 354 019e 0A20     		movs	r0, #10
 355 01a0 FFF7FEFF 		bl	vTaskDelay
ARM GAS  /tmp/ccgPZJsu.s 			page 12


 356              	.LVL39:
 357              	.LBE3:
 232:Core/Src/freertos.c ****   {
 358              		.loc 1 232 8 discriminator 1 view .LVU92
 359 01a4 2FE7     		b	.L7
 360              	.L10:
 361 01a6 00BF     		.align	3
 362              	.L9:
 363 01a8 182D4454 		.word	1413754136
 364 01ac FB210940 		.word	1074340347
 365 01b0 00000000 		.word	0
 366 01b4 00806640 		.word	1080459264
 367 01b8 C3F51C41 		.word	1092416963
 368 01bc 00000038 		.word	939524096
 369 01c0 0000FA43 		.word	1140457472
 370 01c4 0681153E 		.word	1041596678
 371 01c8 00000000 		.word	.LC1
 372 01cc 00000000 		.word	huart1
 373 01d0 00000000 		.word	.LANCHOR1
 374              		.cfi_endproc
 375              	.LFE153:
 377              		.section	.rodata.StartServoControlTask.str1.4,"aMS",%progbits,1
 378              		.align	2
 379              	.LC2:
 380 0000 413A252E 		.ascii	"A:%.2f,%.2f,%.2f,%.2f,G:%.2f,%.2f,%.2f\012\000"
 380      32662C25 
 380      2E32662C 
 380      252E3266 
 380      2C252E32 
 381              		.section	.text.StartServoControlTask,"ax",%progbits
 382              		.align	1
 383              		.global	StartServoControlTask
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu fpv5-d16
 389              	StartServoControlTask:
 390              	.LFB154:
 267:Core/Src/freertos.c ****   }
 268:Core/Src/freertos.c ****   /* USER CODE END StartAttitudeTask */
 269:Core/Src/freertos.c **** }
 270:Core/Src/freertos.c **** 
 271:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartServoControlTask */
 272:Core/Src/freertos.c **** /**
 273:Core/Src/freertos.c **** * @brief Function implementing the ServoControlTas thread.
 274:Core/Src/freertos.c **** * @param argument: Not used
 275:Core/Src/freertos.c **** * @retval None
 276:Core/Src/freertos.c **** */
 277:Core/Src/freertos.c **** /* USER CODE END Header_StartServoControlTask */
 278:Core/Src/freertos.c **** void StartServoControlTask(void *argument)
 279:Core/Src/freertos.c **** {
 391              		.loc 1 279 1 view -0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 256
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              	.LVL40:
 396              		.loc 1 279 1 is_stmt 0 view .LVU94
ARM GAS  /tmp/ccgPZJsu.s 			page 13


 397 0000 10B5     		push	{r4, lr}
 398              	.LCFI4:
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 4, -8
 401              		.cfi_offset 14, -4
 402 0002 CCB0     		sub	sp, sp, #304
 403              	.LCFI5:
 404              		.cfi_def_cfa_offset 312
 405              	.LVL41:
 406              	.L12:
 280:Core/Src/freertos.c ****   /* USER CODE BEGIN StartServoControlTask */
 281:Core/Src/freertos.c ****   /* Infinite loop */
 282:Core/Src/freertos.c ****   for(;;)
 407              		.loc 1 282 3 is_stmt 1 discriminator 1 view .LVU95
 408              	.LBB4:
 283:Core/Src/freertos.c ****   {
 284:Core/Src/freertos.c ****         Set_Servo_Angle(H1, 30);  // 设置舵机角度
 409              		.loc 1 284 9 discriminator 1 view .LVU96
 410 0004 B3EE0E0A 		vmov.f32	s0, #3.0e+1
 411 0008 0020     		movs	r0, #0
 412 000a FFF7FEFF 		bl	Set_Servo_Angle
 413              	.LVL42:
 285:Core/Src/freertos.c ****         Set_Servo_Angle(H2, 30);
 414              		.loc 1 285 9 discriminator 1 view .LVU97
 415 000e B3EE0E0A 		vmov.f32	s0, #3.0e+1
 416 0012 0120     		movs	r0, #1
 417 0014 FFF7FEFF 		bl	Set_Servo_Angle
 418              	.LVL43:
 286:Core/Src/freertos.c ****         Set_Servo_Angle(H3, 30);
 419              		.loc 1 286 9 discriminator 1 view .LVU98
 420 0018 B3EE0E0A 		vmov.f32	s0, #3.0e+1
 421 001c 0220     		movs	r0, #2
 422 001e FFF7FEFF 		bl	Set_Servo_Angle
 423              	.LVL44:
 287:Core/Src/freertos.c ****         Set_Servo_Angle(H4,30);
 424              		.loc 1 287 9 discriminator 1 view .LVU99
 425 0022 B3EE0E0A 		vmov.f32	s0, #3.0e+1
 426 0026 0320     		movs	r0, #3
 427 0028 FFF7FEFF 		bl	Set_Servo_Angle
 428              	.LVL45:
 288:Core/Src/freertos.c ****        
 289:Core/Src/freertos.c ****     MPU9250_GetData(imuData.accel, imuData.mag, imuData.gyro, NULL);  // 读取IMU数据
 429              		.loc 1 289 5 discriminator 1 view .LVU100
 430 002c 4C4C     		ldr	r4, .L14+16
 431 002e 0023     		movs	r3, #0
 432 0030 A21D     		adds	r2, r4, #6
 433 0032 04F10C01 		add	r1, r4, #12
 434 0036 2046     		mov	r0, r4
 435 0038 FFF7FEFF 		bl	MPU9250_GetData
 436              	.LVL46:
 290:Core/Src/freertos.c ****        // 获取加速度、陀螺仪和磁力计原始数据
 291:Core/Src/freertos.c ****         float ax = imuData.accel[0] * 4.0f * 9.81f / 32768.0f; // 4G 量程
 437              		.loc 1 291 9 discriminator 1 view .LVU101
 438              		.loc 1 291 33 is_stmt 0 discriminator 1 view .LVU102
 439 003c B4F90030 		ldrsh	r3, [r4]
 440 0040 07EE903A 		vmov	s15, r3	@ int
 441              		.loc 1 291 37 discriminator 1 view .LVU103
ARM GAS  /tmp/ccgPZJsu.s 			page 14


 442 0044 F8EEE77A 		vcvt.f32.s32	s15, s15
 443 0048 B1EE005A 		vmov.f32	s10, #4.0e+0
 444 004c 67EE857A 		vmul.f32	s15, s15, s10
 445              		.loc 1 291 44 discriminator 1 view .LVU104
 446 0050 DFED445A 		vldr.32	s11, .L14+20
 447 0054 67EEA57A 		vmul.f32	s15, s15, s11
 448              		.loc 1 291 15 discriminator 1 view .LVU105
 449 0058 9FED436A 		vldr.32	s12, .L14+24
 450 005c 67EE867A 		vmul.f32	s15, s15, s12
 451              	.LVL47:
 292:Core/Src/freertos.c ****         float ay = imuData.accel[1] * 4.0f * 9.81f / 32768.0f;
 452              		.loc 1 292 9 is_stmt 1 discriminator 1 view .LVU106
 453              		.loc 1 292 33 is_stmt 0 discriminator 1 view .LVU107
 454 0060 B4F90230 		ldrsh	r3, [r4, #2]
 455 0064 07EE103A 		vmov	s14, r3	@ int
 456              		.loc 1 292 37 discriminator 1 view .LVU108
 457 0068 B8EEC77A 		vcvt.f32.s32	s14, s14
 458 006c 27EE057A 		vmul.f32	s14, s14, s10
 459              		.loc 1 292 44 discriminator 1 view .LVU109
 460 0070 27EE257A 		vmul.f32	s14, s14, s11
 461              		.loc 1 292 15 discriminator 1 view .LVU110
 462 0074 27EE067A 		vmul.f32	s14, s14, s12
 463              	.LVL48:
 293:Core/Src/freertos.c ****         float az = imuData.accel[2] * 4.0f * 9.81f / 32768.0f;
 464              		.loc 1 293 9 is_stmt 1 discriminator 1 view .LVU111
 465              		.loc 1 293 33 is_stmt 0 discriminator 1 view .LVU112
 466 0078 B4F90430 		ldrsh	r3, [r4, #4]
 467 007c 06EE903A 		vmov	s13, r3	@ int
 468              		.loc 1 293 37 discriminator 1 view .LVU113
 469 0080 F8EEE66A 		vcvt.f32.s32	s13, s13
 470 0084 66EE856A 		vmul.f32	s13, s13, s10
 471              		.loc 1 293 44 discriminator 1 view .LVU114
 472 0088 66EEA56A 		vmul.f32	s13, s13, s11
 473              		.loc 1 293 15 discriminator 1 view .LVU115
 474 008c 66EE866A 		vmul.f32	s13, s13, s12
 475              	.LVL49:
 294:Core/Src/freertos.c ****         float gx = imuData.gyro[0] * 500.0f / 32768.0f * M_PI / 180.0f; // 500DPS 量程
 476              		.loc 1 294 9 is_stmt 1 discriminator 1 view .LVU116
 477              		.loc 1 294 32 is_stmt 0 discriminator 1 view .LVU117
 478 0090 B4F90630 		ldrsh	r3, [r4, #6]
 479 0094 04EE103A 		vmov	s8, r3	@ int
 480              		.loc 1 294 36 discriminator 1 view .LVU118
 481 0098 B8EEC44A 		vcvt.f32.s32	s8, s8
 482 009c DFED335A 		vldr.32	s11, .L14+28
 483 00a0 24EE254A 		vmul.f32	s8, s8, s11
 484              		.loc 1 294 45 discriminator 1 view .LVU119
 485 00a4 24EE064A 		vmul.f32	s8, s8, s12
 486 00a8 B7EEC44A 		vcvt.f64.f32	d4, s8
 487              		.loc 1 294 56 discriminator 1 view .LVU120
 488 00ac 9FED282B 		vldr.64	d2, .L14
 489 00b0 24EE024B 		vmul.f64	d4, d4, d2
 490              		.loc 1 294 63 discriminator 1 view .LVU121
 491 00b4 9FED283B 		vldr.64	d3, .L14+8
 492 00b8 84EE031B 		vdiv.f64	d1, d4, d3
 493              		.loc 1 294 15 discriminator 1 view .LVU122
 494 00bc F7EEC11B 		vcvt.f32.f64	s3, d1
 495              	.LVL50:
ARM GAS  /tmp/ccgPZJsu.s 			page 15


 295:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 496              		.loc 1 295 9 is_stmt 1 discriminator 1 view .LVU123
 497              		.loc 1 295 32 is_stmt 0 discriminator 1 view .LVU124
 498 00c0 B4F90830 		ldrsh	r3, [r4, #8]
 499 00c4 04EE103A 		vmov	s8, r3	@ int
 500              		.loc 1 295 36 discriminator 1 view .LVU125
 501 00c8 B8EEC44A 		vcvt.f32.s32	s8, s8
 502 00cc 24EE254A 		vmul.f32	s8, s8, s11
 503              		.loc 1 295 45 discriminator 1 view .LVU126
 504 00d0 24EE064A 		vmul.f32	s8, s8, s12
 505 00d4 B7EEC44A 		vcvt.f64.f32	d4, s8
 506              		.loc 1 295 56 discriminator 1 view .LVU127
 507 00d8 24EE024B 		vmul.f64	d4, d4, d2
 508              		.loc 1 295 63 discriminator 1 view .LVU128
 509 00dc 84EE030B 		vdiv.f64	d0, d4, d3
 510              		.loc 1 295 15 discriminator 1 view .LVU129
 511 00e0 B7EEC00B 		vcvt.f32.f64	s0, d0
 512              	.LVL51:
 296:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 513              		.loc 1 296 9 is_stmt 1 discriminator 1 view .LVU130
 514              		.loc 1 296 32 is_stmt 0 discriminator 1 view .LVU131
 515 00e4 B4F90A30 		ldrsh	r3, [r4, #10]
 516 00e8 05EE103A 		vmov	s10, r3	@ int
 517              		.loc 1 296 36 discriminator 1 view .LVU132
 518 00ec B8EEC55A 		vcvt.f32.s32	s10, s10
 519 00f0 25EE255A 		vmul.f32	s10, s10, s11
 520              		.loc 1 296 45 discriminator 1 view .LVU133
 521 00f4 25EE065A 		vmul.f32	s10, s10, s12
 522 00f8 B7EEC55A 		vcvt.f64.f32	d5, s10
 523              		.loc 1 296 56 discriminator 1 view .LVU134
 524 00fc 25EE025B 		vmul.f64	d5, d5, d2
 525              		.loc 1 296 63 discriminator 1 view .LVU135
 526 0100 85EE034B 		vdiv.f64	d4, d5, d3
 527              		.loc 1 296 15 discriminator 1 view .LVU136
 528 0104 B7EEC45B 		vcvt.f32.f64	s10, d4
 529              	.LVL52:
 297:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 530              		.loc 1 297 9 is_stmt 1 discriminator 1 view .LVU137
 298:Core/Src/freertos.c ****         float my = imuData.mag[1] * 0.146f;
 531              		.loc 1 298 9 discriminator 1 view .LVU138
 299:Core/Src/freertos.c ****         float mz = imuData.mag[2] * 0.146f;
 532              		.loc 1 299 9 discriminator 1 view .LVU139
 300:Core/Src/freertos.c ****          // 打印四元数数据
 301:Core/Src/freertos.c ****         char printBuffer[256];
 533              		.loc 1 301 9 discriminator 1 view .LVU140
 302:Core/Src/freertos.c ****         int len = snprintf(printBuffer, sizeof(printBuffer), "A:%.2f,%.2f,%.2f,%.2f,G:%.2f,%.2f,%.2
 534              		.loc 1 302 9 discriminator 1 view .LVU141
 535              		.loc 1 302 19 is_stmt 0 discriminator 1 view .LVU142
 536 0108 B7EEC55A 		vcvt.f64.f32	d5, s10
 537              	.LVL53:
 538              		.loc 1 302 19 discriminator 1 view .LVU143
 539 010c 8DED0A5B 		vstr.64	d5, [sp, #40]
 540 0110 B7EEC00A 		vcvt.f64.f32	d0, s0
 541              	.LVL54:
 542              		.loc 1 302 19 discriminator 1 view .LVU144
 543 0114 8DED080B 		vstr.64	d0, [sp, #32]
 544 0118 B7EEE15A 		vcvt.f64.f32	d5, s3
ARM GAS  /tmp/ccgPZJsu.s 			page 16


 545 011c 8DED065B 		vstr.64	d5, [sp, #24]
 546 0120 B7EEE66A 		vcvt.f64.f32	d6, s13
 547              	.LVL55:
 548              		.loc 1 302 19 discriminator 1 view .LVU145
 549 0124 8DED046B 		vstr.64	d6, [sp, #16]
 550 0128 B7EEC76A 		vcvt.f64.f32	d6, s14
 551 012c 8DED026B 		vstr.64	d6, [sp, #8]
 552 0130 B7EEE77A 		vcvt.f64.f32	d7, s15
 553              	.LVL56:
 554              		.loc 1 302 19 discriminator 1 view .LVU146
 555 0134 8DED007B 		vstr.64	d7, [sp]
 556 0138 0D4A     		ldr	r2, .L14+32
 557 013a 4FF48071 		mov	r1, #256
 558 013e 0CA8     		add	r0, sp, #48
 559 0140 FFF7FEFF 		bl	snprintf
 560              	.LVL57:
 303:Core/Src/freertos.c ****         //HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 304:Core/Src/freertos.c **** 
 305:Core/Src/freertos.c ****     osDelay(1);
 561              		.loc 1 305 5 is_stmt 1 discriminator 1 view .LVU147
 562 0144 0120     		movs	r0, #1
 563 0146 FFF7FEFF 		bl	osDelay
 564              	.LVL58:
 565              	.LBE4:
 282:Core/Src/freertos.c ****   {
 566              		.loc 1 282 8 discriminator 1 view .LVU148
 567 014a 5BE7     		b	.L12
 568              	.L15:
 569 014c AFF30080 		.align	3
 570              	.L14:
 571 0150 182D4454 		.word	1413754136
 572 0154 FB210940 		.word	1074340347
 573 0158 00000000 		.word	0
 574 015c 00806640 		.word	1080459264
 575 0160 00000000 		.word	.LANCHOR0
 576 0164 C3F51C41 		.word	1092416963
 577 0168 00000038 		.word	939524096
 578 016c 0000FA43 		.word	1140457472
 579 0170 00000000 		.word	.LC2
 580              		.cfi_endproc
 581              	.LFE154:
 583              		.section	.text.StartGaitControlTask,"ax",%progbits
 584              		.align	1
 585              		.global	StartGaitControlTask
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 589              		.fpu fpv5-d16
 591              	StartGaitControlTask:
 592              	.LFB155:
 306:Core/Src/freertos.c ****   }
 307:Core/Src/freertos.c ****   /* USER CODE END StartServoControlTask */
 308:Core/Src/freertos.c **** }
 309:Core/Src/freertos.c **** 
 310:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartGaitControlTask */
 311:Core/Src/freertos.c **** /**
 312:Core/Src/freertos.c **** * @brief Function implementing the GaitControlTask thread.
ARM GAS  /tmp/ccgPZJsu.s 			page 17


 313:Core/Src/freertos.c **** * @param argument: Not used
 314:Core/Src/freertos.c **** * @retval None
 315:Core/Src/freertos.c **** */
 316:Core/Src/freertos.c **** /* USER CODE END Header_StartGaitControlTask */
 317:Core/Src/freertos.c **** void StartGaitControlTask(void *argument)
 318:Core/Src/freertos.c **** {
 593              		.loc 1 318 1 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 256
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              	.LVL59:
 598              		.loc 1 318 1 is_stmt 0 view .LVU150
 599 0000 10B5     		push	{r4, lr}
 600              	.LCFI6:
 601              		.cfi_def_cfa_offset 8
 602              		.cfi_offset 4, -8
 603              		.cfi_offset 14, -4
 604 0002 CCB0     		sub	sp, sp, #304
 605              	.LCFI7:
 606              		.cfi_def_cfa_offset 312
 607 0004 07E0     		b	.L24
 608              	.LVL60:
 609              	.L23:
 610              	.LBB5:
 319:Core/Src/freertos.c ****   /* USER CODE BEGIN StartGaitControlTask */
 320:Core/Src/freertos.c ****   /* Infinite loop */
 321:Core/Src/freertos.c ****   for(;;)
 322:Core/Src/freertos.c ****   {
 323:Core/Src/freertos.c **** 
 324:Core/Src/freertos.c ****     MPU9250_GetData(imuData.accel, imuData.mag, imuData.gyro, NULL);  // 读取IMU数据
 325:Core/Src/freertos.c ****         // 获取加速度、陀螺仪和磁力计原始数据
 326:Core/Src/freertos.c ****         float ax = imuData.accel[0] * 4.0f * 9.81f / 32768.0f; // 4G 量程
 327:Core/Src/freertos.c ****         float ay = imuData.accel[1] * 4.0f * 9.81f / 32768.0f;
 328:Core/Src/freertos.c ****         float az = imuData.accel[2] * 4.0f * 9.81f / 32768.0f;
 329:Core/Src/freertos.c ****         float gx = imuData.gyro[0] * 500.0f / 32768.0f * M_PI / 180.0f; // 500DPS 量程
 330:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 331:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 332:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 333:Core/Src/freertos.c ****         float my = imuData.mag[1] * 0.146f;
 334:Core/Src/freertos.c ****         float mz = imuData.mag[2] * 0.146f;
 335:Core/Src/freertos.c ****          // 打印四元数数据
 336:Core/Src/freertos.c ****         char printBuffer[256];
 337:Core/Src/freertos.c ****         int len = snprintf(printBuffer, sizeof(printBuffer), "A:%.2f,%.2f,%.2f,%.2f,G:%.2f,%.2f,%.2
 338:Core/Src/freertos.c ****         //HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 339:Core/Src/freertos.c **** 
 340:Core/Src/freertos.c **** 
 341:Core/Src/freertos.c ****     switch (current_action) {
 342:Core/Src/freertos.c ****             case ACTION_FORWARD:
 343:Core/Src/freertos.c ****                 Gait_Forward();
 611              		.loc 1 343 17 is_stmt 1 view .LVU151
 612 0006 FFF7FEFF 		bl	Gait_Forward
 613              	.LVL61:
 344:Core/Src/freertos.c ****                 break;
 614              		.loc 1 344 17 view .LVU152
 615              	.L17:
 345:Core/Src/freertos.c ****             case ACTION_BACKWARD:
 346:Core/Src/freertos.c ****                 Gait_Backward();
ARM GAS  /tmp/ccgPZJsu.s 			page 18


 347:Core/Src/freertos.c ****                 break;
 348:Core/Src/freertos.c ****             case ACTION_TURN_LEFT:
 349:Core/Src/freertos.c ****                 Gait_Turn_Left();
 350:Core/Src/freertos.c ****                 break;
 351:Core/Src/freertos.c ****             case ACTION_TURN_RIGHT:
 352:Core/Src/freertos.c ****                 Gait_Turn_Right();
 353:Core/Src/freertos.c ****                 break;
 354:Core/Src/freertos.c ****             case ACTION_MARCH_IN_PLACE:
 355:Core/Src/freertos.c ****                 Gait_March_In_Place();
 356:Core/Src/freertos.c ****                 break;
 357:Core/Src/freertos.c ****             case ACTION_STOP:
 358:Core/Src/freertos.c ****             default:
 359:Core/Src/freertos.c ****                 
 360:Core/Src/freertos.c ****                  break;
 361:Core/Src/freertos.c ****         }
 362:Core/Src/freertos.c ****         vTaskDelay(pdMS_TO_TICKS(50)); // 每50ms更新一次步态
 616              		.loc 1 362 9 view .LVU153
 617 000a 3220     		movs	r0, #50
 618 000c FFF7FEFF 		bl	vTaskDelay
 619              	.LVL62:
 363:Core/Src/freertos.c ****     osDelay(1);
 620              		.loc 1 363 5 view .LVU154
 621 0010 0120     		movs	r0, #1
 622 0012 FFF7FEFF 		bl	osDelay
 623              	.LVL63:
 624              	.LBE5:
 321:Core/Src/freertos.c ****   {
 625              		.loc 1 321 8 view .LVU155
 626              	.L24:
 321:Core/Src/freertos.c ****   {
 627              		.loc 1 321 3 view .LVU156
 628              	.LBB6:
 324:Core/Src/freertos.c ****         // 获取加速度、陀螺仪和磁力计原始数据
 629              		.loc 1 324 5 view .LVU157
 630 0016 5A4C     		ldr	r4, .L26+16
 631 0018 0023     		movs	r3, #0
 632 001a A21D     		adds	r2, r4, #6
 633 001c 04F10C01 		add	r1, r4, #12
 634 0020 2046     		mov	r0, r4
 635 0022 FFF7FEFF 		bl	MPU9250_GetData
 636              	.LVL64:
 326:Core/Src/freertos.c ****         float ay = imuData.accel[1] * 4.0f * 9.81f / 32768.0f;
 637              		.loc 1 326 9 view .LVU158
 326:Core/Src/freertos.c ****         float ay = imuData.accel[1] * 4.0f * 9.81f / 32768.0f;
 638              		.loc 1 326 33 is_stmt 0 view .LVU159
 639 0026 B4F90030 		ldrsh	r3, [r4]
 640 002a 07EE903A 		vmov	s15, r3	@ int
 326:Core/Src/freertos.c ****         float ay = imuData.accel[1] * 4.0f * 9.81f / 32768.0f;
 641              		.loc 1 326 37 view .LVU160
 642 002e F8EEE77A 		vcvt.f32.s32	s15, s15
 643 0032 B1EE005A 		vmov.f32	s10, #4.0e+0
 644 0036 67EE857A 		vmul.f32	s15, s15, s10
 326:Core/Src/freertos.c ****         float ay = imuData.accel[1] * 4.0f * 9.81f / 32768.0f;
 645              		.loc 1 326 44 view .LVU161
 646 003a DFED525A 		vldr.32	s11, .L26+20
 647 003e 67EEA57A 		vmul.f32	s15, s15, s11
 326:Core/Src/freertos.c ****         float ay = imuData.accel[1] * 4.0f * 9.81f / 32768.0f;
ARM GAS  /tmp/ccgPZJsu.s 			page 19


 648              		.loc 1 326 15 view .LVU162
 649 0042 9FED516A 		vldr.32	s12, .L26+24
 650 0046 67EE867A 		vmul.f32	s15, s15, s12
 651              	.LVL65:
 327:Core/Src/freertos.c ****         float az = imuData.accel[2] * 4.0f * 9.81f / 32768.0f;
 652              		.loc 1 327 9 is_stmt 1 view .LVU163
 327:Core/Src/freertos.c ****         float az = imuData.accel[2] * 4.0f * 9.81f / 32768.0f;
 653              		.loc 1 327 33 is_stmt 0 view .LVU164
 654 004a B4F90230 		ldrsh	r3, [r4, #2]
 655 004e 07EE103A 		vmov	s14, r3	@ int
 327:Core/Src/freertos.c ****         float az = imuData.accel[2] * 4.0f * 9.81f / 32768.0f;
 656              		.loc 1 327 37 view .LVU165
 657 0052 B8EEC77A 		vcvt.f32.s32	s14, s14
 658 0056 27EE057A 		vmul.f32	s14, s14, s10
 327:Core/Src/freertos.c ****         float az = imuData.accel[2] * 4.0f * 9.81f / 32768.0f;
 659              		.loc 1 327 44 view .LVU166
 660 005a 27EE257A 		vmul.f32	s14, s14, s11
 327:Core/Src/freertos.c ****         float az = imuData.accel[2] * 4.0f * 9.81f / 32768.0f;
 661              		.loc 1 327 15 view .LVU167
 662 005e 27EE067A 		vmul.f32	s14, s14, s12
 663              	.LVL66:
 328:Core/Src/freertos.c ****         float gx = imuData.gyro[0] * 500.0f / 32768.0f * M_PI / 180.0f; // 500DPS 量程
 664              		.loc 1 328 9 is_stmt 1 view .LVU168
 328:Core/Src/freertos.c ****         float gx = imuData.gyro[0] * 500.0f / 32768.0f * M_PI / 180.0f; // 500DPS 量程
 665              		.loc 1 328 33 is_stmt 0 view .LVU169
 666 0062 B4F90430 		ldrsh	r3, [r4, #4]
 667 0066 06EE903A 		vmov	s13, r3	@ int
 328:Core/Src/freertos.c ****         float gx = imuData.gyro[0] * 500.0f / 32768.0f * M_PI / 180.0f; // 500DPS 量程
 668              		.loc 1 328 37 view .LVU170
 669 006a F8EEE66A 		vcvt.f32.s32	s13, s13
 670 006e 66EE856A 		vmul.f32	s13, s13, s10
 328:Core/Src/freertos.c ****         float gx = imuData.gyro[0] * 500.0f / 32768.0f * M_PI / 180.0f; // 500DPS 量程
 671              		.loc 1 328 44 view .LVU171
 672 0072 66EEA56A 		vmul.f32	s13, s13, s11
 328:Core/Src/freertos.c ****         float gx = imuData.gyro[0] * 500.0f / 32768.0f * M_PI / 180.0f; // 500DPS 量程
 673              		.loc 1 328 15 view .LVU172
 674 0076 66EE866A 		vmul.f32	s13, s13, s12
 675              	.LVL67:
 329:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 676              		.loc 1 329 9 is_stmt 1 view .LVU173
 329:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 677              		.loc 1 329 32 is_stmt 0 view .LVU174
 678 007a B4F90630 		ldrsh	r3, [r4, #6]
 679 007e 04EE103A 		vmov	s8, r3	@ int
 329:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 680              		.loc 1 329 36 view .LVU175
 681 0082 B8EEC44A 		vcvt.f32.s32	s8, s8
 682 0086 DFED415A 		vldr.32	s11, .L26+28
 683 008a 24EE254A 		vmul.f32	s8, s8, s11
 329:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 684              		.loc 1 329 45 view .LVU176
 685 008e 24EE064A 		vmul.f32	s8, s8, s12
 686 0092 B7EEC44A 		vcvt.f64.f32	d4, s8
 329:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 687              		.loc 1 329 56 view .LVU177
 688 0096 9FED362B 		vldr.64	d2, .L26
 689 009a 24EE024B 		vmul.f64	d4, d4, d2
ARM GAS  /tmp/ccgPZJsu.s 			page 20


 329:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 690              		.loc 1 329 63 view .LVU178
 691 009e 9FED363B 		vldr.64	d3, .L26+8
 692 00a2 84EE031B 		vdiv.f64	d1, d4, d3
 329:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 693              		.loc 1 329 15 view .LVU179
 694 00a6 F7EEC11B 		vcvt.f32.f64	s3, d1
 695              	.LVL68:
 330:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 696              		.loc 1 330 9 is_stmt 1 view .LVU180
 330:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 697              		.loc 1 330 32 is_stmt 0 view .LVU181
 698 00aa B4F90830 		ldrsh	r3, [r4, #8]
 699 00ae 04EE103A 		vmov	s8, r3	@ int
 330:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 700              		.loc 1 330 36 view .LVU182
 701 00b2 B8EEC44A 		vcvt.f32.s32	s8, s8
 702 00b6 24EE254A 		vmul.f32	s8, s8, s11
 330:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 703              		.loc 1 330 45 view .LVU183
 704 00ba 24EE064A 		vmul.f32	s8, s8, s12
 705 00be B7EEC44A 		vcvt.f64.f32	d4, s8
 330:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 706              		.loc 1 330 56 view .LVU184
 707 00c2 24EE024B 		vmul.f64	d4, d4, d2
 330:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 708              		.loc 1 330 63 view .LVU185
 709 00c6 84EE030B 		vdiv.f64	d0, d4, d3
 330:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 710              		.loc 1 330 15 view .LVU186
 711 00ca B7EEC00B 		vcvt.f32.f64	s0, d0
 712              	.LVL69:
 331:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 713              		.loc 1 331 9 is_stmt 1 view .LVU187
 331:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 714              		.loc 1 331 32 is_stmt 0 view .LVU188
 715 00ce B4F90A30 		ldrsh	r3, [r4, #10]
 716 00d2 05EE103A 		vmov	s10, r3	@ int
 331:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 717              		.loc 1 331 36 view .LVU189
 718 00d6 B8EEC55A 		vcvt.f32.s32	s10, s10
 719 00da 25EE255A 		vmul.f32	s10, s10, s11
 331:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 720              		.loc 1 331 45 view .LVU190
 721 00de 25EE065A 		vmul.f32	s10, s10, s12
 722 00e2 B7EEC55A 		vcvt.f64.f32	d5, s10
 331:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 723              		.loc 1 331 56 view .LVU191
 724 00e6 25EE025B 		vmul.f64	d5, d5, d2
 331:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 725              		.loc 1 331 63 view .LVU192
 726 00ea 85EE034B 		vdiv.f64	d4, d5, d3
 331:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 727              		.loc 1 331 15 view .LVU193
 728 00ee B7EEC45B 		vcvt.f32.f64	s10, d4
 729              	.LVL70:
 332:Core/Src/freertos.c ****         float my = imuData.mag[1] * 0.146f;
ARM GAS  /tmp/ccgPZJsu.s 			page 21


 730              		.loc 1 332 9 is_stmt 1 view .LVU194
 333:Core/Src/freertos.c ****         float mz = imuData.mag[2] * 0.146f;
 731              		.loc 1 333 9 view .LVU195
 334:Core/Src/freertos.c ****          // 打印四元数数据
 732              		.loc 1 334 9 view .LVU196
 336:Core/Src/freertos.c ****         int len = snprintf(printBuffer, sizeof(printBuffer), "A:%.2f,%.2f,%.2f,%.2f,G:%.2f,%.2f,%.2
 733              		.loc 1 336 9 view .LVU197
 337:Core/Src/freertos.c ****         //HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 734              		.loc 1 337 9 view .LVU198
 337:Core/Src/freertos.c ****         //HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 735              		.loc 1 337 19 is_stmt 0 view .LVU199
 736 00f2 B7EEC55A 		vcvt.f64.f32	d5, s10
 737              	.LVL71:
 337:Core/Src/freertos.c ****         //HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 738              		.loc 1 337 19 view .LVU200
 739 00f6 8DED0A5B 		vstr.64	d5, [sp, #40]
 740 00fa B7EEC00A 		vcvt.f64.f32	d0, s0
 741              	.LVL72:
 337:Core/Src/freertos.c ****         //HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 742              		.loc 1 337 19 view .LVU201
 743 00fe 8DED080B 		vstr.64	d0, [sp, #32]
 744 0102 B7EEE15A 		vcvt.f64.f32	d5, s3
 745 0106 8DED065B 		vstr.64	d5, [sp, #24]
 746 010a B7EEE66A 		vcvt.f64.f32	d6, s13
 747              	.LVL73:
 337:Core/Src/freertos.c ****         //HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 748              		.loc 1 337 19 view .LVU202
 749 010e 8DED046B 		vstr.64	d6, [sp, #16]
 750 0112 B7EEC76A 		vcvt.f64.f32	d6, s14
 751 0116 8DED026B 		vstr.64	d6, [sp, #8]
 752 011a B7EEE77A 		vcvt.f64.f32	d7, s15
 753              	.LVL74:
 337:Core/Src/freertos.c ****         //HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 754              		.loc 1 337 19 view .LVU203
 755 011e 8DED007B 		vstr.64	d7, [sp]
 756 0122 1B4A     		ldr	r2, .L26+32
 757 0124 4FF48071 		mov	r1, #256
 758 0128 0CA8     		add	r0, sp, #48
 759 012a FFF7FEFF 		bl	snprintf
 760              	.LVL75:
 341:Core/Src/freertos.c ****             case ACTION_FORWARD:
 761              		.loc 1 341 5 is_stmt 1 view .LVU204
 762 012e 194B     		ldr	r3, .L26+36
 763 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 764 0132 013B     		subs	r3, r3, #1
 765 0134 042B     		cmp	r3, #4
 766 0136 3FF668AF 		bhi	.L17
 767 013a 01A2     		adr	r2, .L19
 768 013c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 769              		.p2align 2
 770              	.L19:
 771 0140 07000000 		.word	.L23+1
 772 0144 55010000 		.word	.L22+1
 773 0148 5B010000 		.word	.L21+1
 774 014c 61010000 		.word	.L20+1
 775 0150 67010000 		.word	.L18+1
 776              		.p2align 1
ARM GAS  /tmp/ccgPZJsu.s 			page 22


 777              	.L22:
 346:Core/Src/freertos.c ****                 break;
 778              		.loc 1 346 17 view .LVU205
 779 0154 FFF7FEFF 		bl	Gait_Backward
 780              	.LVL76:
 347:Core/Src/freertos.c ****             case ACTION_TURN_LEFT:
 781              		.loc 1 347 17 view .LVU206
 782 0158 57E7     		b	.L17
 783              	.L21:
 349:Core/Src/freertos.c ****                 break;
 784              		.loc 1 349 17 view .LVU207
 785 015a FFF7FEFF 		bl	Gait_Turn_Left
 786              	.LVL77:
 350:Core/Src/freertos.c ****             case ACTION_TURN_RIGHT:
 787              		.loc 1 350 17 view .LVU208
 788 015e 54E7     		b	.L17
 789              	.L20:
 352:Core/Src/freertos.c ****                 break;
 790              		.loc 1 352 17 view .LVU209
 791 0160 FFF7FEFF 		bl	Gait_Turn_Right
 792              	.LVL78:
 353:Core/Src/freertos.c ****             case ACTION_MARCH_IN_PLACE:
 793              		.loc 1 353 17 view .LVU210
 794 0164 51E7     		b	.L17
 795              	.L18:
 355:Core/Src/freertos.c ****                 break;
 796              		.loc 1 355 17 view .LVU211
 797 0166 FFF7FEFF 		bl	Gait_March_In_Place
 798              	.LVL79:
 356:Core/Src/freertos.c ****             case ACTION_STOP:
 799              		.loc 1 356 17 view .LVU212
 800 016a 4EE7     		b	.L17
 801              	.L27:
 802 016c AFF30080 		.align	3
 803              	.L26:
 804 0170 182D4454 		.word	1413754136
 805 0174 FB210940 		.word	1074340347
 806 0178 00000000 		.word	0
 807 017c 00806640 		.word	1080459264
 808 0180 00000000 		.word	.LANCHOR0
 809 0184 C3F51C41 		.word	1092416963
 810 0188 00000038 		.word	939524096
 811 018c 0000FA43 		.word	1140457472
 812 0190 00000000 		.word	.LC2
 813 0194 00000000 		.word	current_action
 814              	.LBE6:
 815              		.cfi_endproc
 816              	.LFE155:
 818              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 819              		.align	1
 820              		.global	MX_FREERTOS_Init
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu fpv5-d16
 826              	MX_FREERTOS_Init:
 827              	.LFB151:
ARM GAS  /tmp/ccgPZJsu.s 			page 23


 141:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 828              		.loc 1 141 29 view -0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832 0000 08B5     		push	{r3, lr}
 833              	.LCFI8:
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 3, -8
 836              		.cfi_offset 14, -4
 143:Core/Src/freertos.c ****     //MPU9250_Init();
 837              		.loc 1 143 5 view .LVU214
 838 0002 FFF7FEFF 		bl	Servo_Init
 839              	.LVL80:
 145:Core/Src/freertos.c ****   /* USER CODE END Init */
 840              		.loc 1 145 5 view .LVU215
 841 0006 FFF7FEFF 		bl	AHRS_Init
 842              	.LVL81:
 161:Core/Src/freertos.c ****   /* add queues, ... */
 843              		.loc 1 161 4 view .LVU216
 161:Core/Src/freertos.c ****   /* add queues, ... */
 844              		.loc 1 161 16 is_stmt 0 view .LVU217
 845 000a 0022     		movs	r2, #0
 846 000c 0821     		movs	r1, #8
 847 000e 0A20     		movs	r0, #10
 848 0010 FFF7FEFF 		bl	xQueueGenericCreate
 849              	.LVL82:
 161:Core/Src/freertos.c ****   /* add queues, ... */
 850              		.loc 1 161 14 view .LVU218
 851 0014 124B     		ldr	r3, .L30
 852 0016 1860     		str	r0, [r3]
 167:Core/Src/freertos.c **** 
 853              		.loc 1 167 3 is_stmt 1 view .LVU219
 167:Core/Src/freertos.c **** 
 854              		.loc 1 167 23 is_stmt 0 view .LVU220
 855 0018 124A     		ldr	r2, .L30+4
 856 001a 0021     		movs	r1, #0
 857 001c 1248     		ldr	r0, .L30+8
 858 001e FFF7FEFF 		bl	osThreadNew
 859              	.LVL83:
 167:Core/Src/freertos.c **** 
 860              		.loc 1 167 21 view .LVU221
 861 0022 124B     		ldr	r3, .L30+12
 862 0024 1860     		str	r0, [r3]
 170:Core/Src/freertos.c **** 
 863              		.loc 1 170 3 is_stmt 1 view .LVU222
 170:Core/Src/freertos.c **** 
 864              		.loc 1 170 24 is_stmt 0 view .LVU223
 865 0026 124A     		ldr	r2, .L30+16
 866 0028 0021     		movs	r1, #0
 867 002a 1248     		ldr	r0, .L30+20
 868 002c FFF7FEFF 		bl	osThreadNew
 869              	.LVL84:
 170:Core/Src/freertos.c **** 
 870              		.loc 1 170 22 view .LVU224
 871 0030 114B     		ldr	r3, .L30+24
 872 0032 1860     		str	r0, [r3]
ARM GAS  /tmp/ccgPZJsu.s 			page 24


 173:Core/Src/freertos.c **** 
 873              		.loc 1 173 3 is_stmt 1 view .LVU225
 173:Core/Src/freertos.c **** 
 874              		.loc 1 173 27 is_stmt 0 view .LVU226
 875 0034 114A     		ldr	r2, .L30+28
 876 0036 0021     		movs	r1, #0
 877 0038 1148     		ldr	r0, .L30+32
 878 003a FFF7FEFF 		bl	osThreadNew
 879              	.LVL85:
 173:Core/Src/freertos.c **** 
 880              		.loc 1 173 25 view .LVU227
 881 003e 114B     		ldr	r3, .L30+36
 882 0040 1860     		str	r0, [r3]
 176:Core/Src/freertos.c **** 
 883              		.loc 1 176 3 is_stmt 1 view .LVU228
 176:Core/Src/freertos.c **** 
 884              		.loc 1 176 27 is_stmt 0 view .LVU229
 885 0042 114A     		ldr	r2, .L30+40
 886 0044 0021     		movs	r1, #0
 887 0046 1148     		ldr	r0, .L30+44
 888 0048 FFF7FEFF 		bl	osThreadNew
 889              	.LVL86:
 176:Core/Src/freertos.c **** 
 890              		.loc 1 176 25 view .LVU230
 891 004c 104B     		ldr	r3, .L30+48
 892 004e 1860     		str	r0, [r3]
 179:Core/Src/freertos.c **** 
 893              		.loc 1 179 3 is_stmt 1 view .LVU231
 179:Core/Src/freertos.c **** 
 894              		.loc 1 179 26 is_stmt 0 view .LVU232
 895 0050 104A     		ldr	r2, .L30+52
 896 0052 0021     		movs	r1, #0
 897 0054 1048     		ldr	r0, .L30+56
 898 0056 FFF7FEFF 		bl	osThreadNew
 899              	.LVL87:
 179:Core/Src/freertos.c **** 
 900              		.loc 1 179 24 view .LVU233
 901 005a 104B     		ldr	r3, .L30+60
 902 005c 1860     		str	r0, [r3]
 189:Core/Src/freertos.c **** 
 903              		.loc 1 189 1 view .LVU234
 904 005e 08BD     		pop	{r3, pc}
 905              	.L31:
 906              		.align	2
 907              	.L30:
 908 0060 00000000 		.word	.LANCHOR1
 909 0064 00000000 		.word	.LANCHOR2
 910 0068 00000000 		.word	StartDefaultTask
 911 006c 00000000 		.word	.LANCHOR3
 912 0070 00000000 		.word	.LANCHOR4
 913 0074 00000000 		.word	StartAttitudeTask
 914 0078 00000000 		.word	.LANCHOR5
 915 007c 00000000 		.word	.LANCHOR6
 916 0080 00000000 		.word	StartServoControlTask
 917 0084 00000000 		.word	.LANCHOR7
 918 0088 00000000 		.word	.LANCHOR8
 919 008c 00000000 		.word	StartGaitControlTask
ARM GAS  /tmp/ccgPZJsu.s 			page 25


 920 0090 00000000 		.word	.LANCHOR9
 921 0094 00000000 		.word	.LANCHOR10
 922 0098 00000000 		.word	StartSerialCommTask
 923 009c 00000000 		.word	.LANCHOR11
 924              		.cfi_endproc
 925              	.LFE151:
 927              		.section	.rodata.print_accel_data.str1.4,"aMS",%progbits,1
 928              		.align	2
 929              	.LC3:
 930 0000 41636344 		.ascii	"AccData: X=%d, Y=%d, Z=%d\012\000"
 930      6174613A 
 930      20583D25 
 930      642C2059 
 930      3D25642C 
 931              		.section	.text.print_accel_data,"ax",%progbits
 932              		.align	1
 933              		.global	print_accel_data
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 937              		.fpu fpv5-d16
 939              	print_accel_data:
 940              	.LVL88:
 941              	.LFB157:
 364:Core/Src/freertos.c ****   }
 365:Core/Src/freertos.c ****   /* USER CODE END StartGaitControlTask */
 366:Core/Src/freertos.c **** }
 367:Core/Src/freertos.c **** 
 368:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartSerialCommTask */
 369:Core/Src/freertos.c **** /**
 370:Core/Src/freertos.c **** * @brief Function implementing the SerialCommTask thread.
 371:Core/Src/freertos.c **** * @param argument: Not used
 372:Core/Src/freertos.c **** * @retval None
 373:Core/Src/freertos.c **** */
 374:Core/Src/freertos.c **** /* USER CODE END Header_StartSerialCommTask */
 375:Core/Src/freertos.c **** void StartSerialCommTask(void *argument)
 376:Core/Src/freertos.c **** {
 377:Core/Src/freertos.c ****   /* USER CODE BEGIN StartSerialCommTask */
 378:Core/Src/freertos.c ****   uint8_t rxBuffer[10];  // 接收缓存
 379:Core/Src/freertos.c ****   /* Infinite loop */
 380:Core/Src/freertos.c ****   for(;;)
 381:Core/Src/freertos.c ****   {
 382:Core/Src/freertos.c **** 
 383:Core/Src/freertos.c ****    // 获取加速度、陀螺仪和磁力计原始数据
 384:Core/Src/freertos.c ****         float ax = imuData.accel[0] * 4.0f * 9.81f / 32768.0f; // 4G 量程
 385:Core/Src/freertos.c ****         float ay = imuData.accel[1] * 4.0f * 9.81f / 32768.0f;
 386:Core/Src/freertos.c ****         float az = imuData.accel[2] * 4.0f * 9.81f / 32768.0f;
 387:Core/Src/freertos.c ****         float gx = imuData.gyro[0] * 500.0f / 32768.0f * M_PI / 180.0f; // 500DPS 量程
 388:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 389:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 390:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 391:Core/Src/freertos.c ****         float my = imuData.mag[1] * 0.146f;
 392:Core/Src/freertos.c ****         float mz = imuData.mag[2] * 0.146f;
 393:Core/Src/freertos.c ****          // 打印四元数数据
 394:Core/Src/freertos.c ****         char printBuffer[256];
 395:Core/Src/freertos.c ****         int len = snprintf(printBuffer, sizeof(printBuffer), "A:%.2f,%.2f,%.2f,%.2f,G:%.2f,%.2f,%.2
 396:Core/Src/freertos.c ****         //HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
ARM GAS  /tmp/ccgPZJsu.s 			page 26


 397:Core/Src/freertos.c **** 
 398:Core/Src/freertos.c ****         osDelay(1);
 399:Core/Src/freertos.c **** 
 400:Core/Src/freertos.c ****     // 监听串口命令
 401:Core/Src/freertos.c ****     if (HAL_UART_Receive(&huart1, rxBuffer, sizeof(rxBuffer), HAL_MAX_DELAY) == HAL_OK) {
 402:Core/Src/freertos.c ****       UART_ProcessCommand(rxBuffer);  // 处理命令
 403:Core/Src/freertos.c ****     }
 404:Core/Src/freertos.c ****   }
 405:Core/Src/freertos.c ****   /* USER CODE END StartSerialCommTask */
 406:Core/Src/freertos.c **** }
 407:Core/Src/freertos.c **** 
 408:Core/Src/freertos.c **** /* Private application code --------------------------------------------------*/
 409:Core/Src/freertos.c **** /* USER CODE BEGIN Application */
 410:Core/Src/freertos.c **** void print_accel_data(int16_t AccData[3]) {
 942              		.loc 1 410 43 is_stmt 1 view -0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 56
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              		.loc 1 410 43 is_stmt 0 view .LVU236
 947 0000 00B5     		push	{lr}
 948              	.LCFI9:
 949              		.cfi_def_cfa_offset 4
 950              		.cfi_offset 14, -4
 951 0002 91B0     		sub	sp, sp, #68
 952              	.LCFI10:
 953              		.cfi_def_cfa_offset 72
 411:Core/Src/freertos.c ****   char buffer[50];
 954              		.loc 1 411 3 is_stmt 1 view .LVU237
 412:Core/Src/freertos.c ****   int len = snprintf(buffer, sizeof(buffer), "AccData: X=%d, Y=%d, Z=%d\n", AccData[0], AccData[1],
 955              		.loc 1 412 3 view .LVU238
 956              		.loc 1 412 96 is_stmt 0 view .LVU239
 957 0004 B0F90230 		ldrsh	r3, [r0, #2]
 958              		.loc 1 412 108 view .LVU240
 959 0008 B0F90420 		ldrsh	r2, [r0, #4]
 960              		.loc 1 412 13 view .LVU241
 961 000c 0192     		str	r2, [sp, #4]
 962 000e 0093     		str	r3, [sp]
 963 0010 B0F90030 		ldrsh	r3, [r0]
 964 0014 074A     		ldr	r2, .L34
 965 0016 3221     		movs	r1, #50
 966 0018 03A8     		add	r0, sp, #12
 967              	.LVL89:
 968              		.loc 1 412 13 view .LVU242
 969 001a FFF7FEFF 		bl	snprintf
 970              	.LVL90:
 413:Core/Src/freertos.c ****   HAL_UART_Transmit(&huart1, (uint8_t*)buffer, len, HAL_MAX_DELAY);
 971              		.loc 1 413 3 is_stmt 1 view .LVU243
 972 001e 4FF0FF33 		mov	r3, #-1
 973 0022 82B2     		uxth	r2, r0
 974 0024 03A9     		add	r1, sp, #12
 975 0026 0448     		ldr	r0, .L34+4
 976              	.LVL91:
 977              		.loc 1 413 3 is_stmt 0 view .LVU244
 978 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 979              	.LVL92:
 414:Core/Src/freertos.c **** }
 980              		.loc 1 414 1 view .LVU245
ARM GAS  /tmp/ccgPZJsu.s 			page 27


 981 002c 11B0     		add	sp, sp, #68
 982              	.LCFI11:
 983              		.cfi_def_cfa_offset 4
 984              		@ sp needed
 985 002e 5DF804FB 		ldr	pc, [sp], #4
 986              	.L35:
 987 0032 00BF     		.align	2
 988              	.L34:
 989 0034 00000000 		.word	.LC3
 990 0038 00000000 		.word	huart1
 991              		.cfi_endproc
 992              	.LFE157:
 994              		.section	.rodata.print_mag_data.str1.4,"aMS",%progbits,1
 995              		.align	2
 996              	.LC4:
 997 0000 4D616744 		.ascii	"MagData: X=%d, Y=%d, Z=%d\012\000"
 997      6174613A 
 997      20583D25 
 997      642C2059 
 997      3D25642C 
 998              		.section	.text.print_mag_data,"ax",%progbits
 999              		.align	1
 1000              		.global	print_mag_data
 1001              		.syntax unified
 1002              		.thumb
 1003              		.thumb_func
 1004              		.fpu fpv5-d16
 1006              	print_mag_data:
 1007              	.LVL93:
 1008              	.LFB158:
 415:Core/Src/freertos.c **** 
 416:Core/Src/freertos.c **** void print_mag_data(int16_t MagData[3]) {
 1009              		.loc 1 416 41 is_stmt 1 view -0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 56
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 1013              		.loc 1 416 41 is_stmt 0 view .LVU247
 1014 0000 00B5     		push	{lr}
 1015              	.LCFI12:
 1016              		.cfi_def_cfa_offset 4
 1017              		.cfi_offset 14, -4
 1018 0002 91B0     		sub	sp, sp, #68
 1019              	.LCFI13:
 1020              		.cfi_def_cfa_offset 72
 417:Core/Src/freertos.c ****   char buffer[50];
 1021              		.loc 1 417 3 is_stmt 1 view .LVU248
 418:Core/Src/freertos.c ****   int len = snprintf(buffer, sizeof(buffer), "MagData: X=%d, Y=%d, Z=%d\n", MagData[0], MagData[1],
 1022              		.loc 1 418 3 view .LVU249
 1023              		.loc 1 418 96 is_stmt 0 view .LVU250
 1024 0004 B0F90230 		ldrsh	r3, [r0, #2]
 1025              		.loc 1 418 108 view .LVU251
 1026 0008 B0F90420 		ldrsh	r2, [r0, #4]
 1027              		.loc 1 418 13 view .LVU252
 1028 000c 0192     		str	r2, [sp, #4]
 1029 000e 0093     		str	r3, [sp]
 1030 0010 B0F90030 		ldrsh	r3, [r0]
 1031 0014 074A     		ldr	r2, .L38
ARM GAS  /tmp/ccgPZJsu.s 			page 28


 1032 0016 3221     		movs	r1, #50
 1033 0018 03A8     		add	r0, sp, #12
 1034              	.LVL94:
 1035              		.loc 1 418 13 view .LVU253
 1036 001a FFF7FEFF 		bl	snprintf
 1037              	.LVL95:
 419:Core/Src/freertos.c ****   HAL_UART_Transmit(&huart1, (uint8_t*)buffer, len, HAL_MAX_DELAY);
 1038              		.loc 1 419 3 is_stmt 1 view .LVU254
 1039 001e 4FF0FF33 		mov	r3, #-1
 1040 0022 82B2     		uxth	r2, r0
 1041 0024 03A9     		add	r1, sp, #12
 1042 0026 0448     		ldr	r0, .L38+4
 1043              	.LVL96:
 1044              		.loc 1 419 3 is_stmt 0 view .LVU255
 1045 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 1046              	.LVL97:
 420:Core/Src/freertos.c **** }
 1047              		.loc 1 420 1 view .LVU256
 1048 002c 11B0     		add	sp, sp, #68
 1049              	.LCFI14:
 1050              		.cfi_def_cfa_offset 4
 1051              		@ sp needed
 1052 002e 5DF804FB 		ldr	pc, [sp], #4
 1053              	.L39:
 1054 0032 00BF     		.align	2
 1055              	.L38:
 1056 0034 00000000 		.word	.LC4
 1057 0038 00000000 		.word	huart1
 1058              		.cfi_endproc
 1059              	.LFE158:
 1061              		.section	.rodata.print_gyro_data.str1.4,"aMS",%progbits,1
 1062              		.align	2
 1063              	.LC5:
 1064 0000 4779726F 		.ascii	"GyroData: X=%d, Y=%d, Z=%d\012\000"
 1064      44617461 
 1064      3A20583D 
 1064      25642C20 
 1064      593D2564 
 1065              		.section	.text.print_gyro_data,"ax",%progbits
 1066              		.align	1
 1067              		.global	print_gyro_data
 1068              		.syntax unified
 1069              		.thumb
 1070              		.thumb_func
 1071              		.fpu fpv5-d16
 1073              	print_gyro_data:
 1074              	.LVL98:
 1075              	.LFB159:
 421:Core/Src/freertos.c **** 
 422:Core/Src/freertos.c **** void print_gyro_data(int16_t GyroData[3]) {
 1076              		.loc 1 422 43 is_stmt 1 view -0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 56
 1079              		@ frame_needed = 0, uses_anonymous_args = 0
 1080              		.loc 1 422 43 is_stmt 0 view .LVU258
 1081 0000 00B5     		push	{lr}
 1082              	.LCFI15:
ARM GAS  /tmp/ccgPZJsu.s 			page 29


 1083              		.cfi_def_cfa_offset 4
 1084              		.cfi_offset 14, -4
 1085 0002 91B0     		sub	sp, sp, #68
 1086              	.LCFI16:
 1087              		.cfi_def_cfa_offset 72
 423:Core/Src/freertos.c ****   char buffer[50];
 1088              		.loc 1 423 3 is_stmt 1 view .LVU259
 424:Core/Src/freertos.c ****   int len = snprintf(buffer, sizeof(buffer), "GyroData: X=%d, Y=%d, Z=%d\n", GyroData[0], GyroData[
 1089              		.loc 1 424 3 view .LVU260
 1090              		.loc 1 424 99 is_stmt 0 view .LVU261
 1091 0004 B0F90230 		ldrsh	r3, [r0, #2]
 1092              		.loc 1 424 112 view .LVU262
 1093 0008 B0F90420 		ldrsh	r2, [r0, #4]
 1094              		.loc 1 424 13 view .LVU263
 1095 000c 0192     		str	r2, [sp, #4]
 1096 000e 0093     		str	r3, [sp]
 1097 0010 B0F90030 		ldrsh	r3, [r0]
 1098 0014 074A     		ldr	r2, .L42
 1099 0016 3221     		movs	r1, #50
 1100 0018 03A8     		add	r0, sp, #12
 1101              	.LVL99:
 1102              		.loc 1 424 13 view .LVU264
 1103 001a FFF7FEFF 		bl	snprintf
 1104              	.LVL100:
 425:Core/Src/freertos.c ****   HAL_UART_Transmit(&huart1, (uint8_t*)buffer, len, HAL_MAX_DELAY);
 1105              		.loc 1 425 3 is_stmt 1 view .LVU265
 1106 001e 4FF0FF33 		mov	r3, #-1
 1107 0022 82B2     		uxth	r2, r0
 1108 0024 03A9     		add	r1, sp, #12
 1109 0026 0448     		ldr	r0, .L42+4
 1110              	.LVL101:
 1111              		.loc 1 425 3 is_stmt 0 view .LVU266
 1112 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 1113              	.LVL102:
 426:Core/Src/freertos.c **** }
 1114              		.loc 1 426 1 view .LVU267
 1115 002c 11B0     		add	sp, sp, #68
 1116              	.LCFI17:
 1117              		.cfi_def_cfa_offset 4
 1118              		@ sp needed
 1119 002e 5DF804FB 		ldr	pc, [sp], #4
 1120              	.L43:
 1121 0032 00BF     		.align	2
 1122              	.L42:
 1123 0034 00000000 		.word	.LC5
 1124 0038 00000000 		.word	huart1
 1125              		.cfi_endproc
 1126              	.LFE159:
 1128              		.section	.rodata.SendAttitudeToHost.str1.4,"aMS",%progbits,1
 1129              		.align	2
 1130              	.LC6:
 1131 0000 252E3666 		.ascii	"%.6f,%.6f,%.6f,%.6f\012\000"
 1131      2C252E36 
 1131      662C252E 
 1131      36662C25 
 1131      2E36660A 
 1132              		.section	.text.SendAttitudeToHost,"ax",%progbits
ARM GAS  /tmp/ccgPZJsu.s 			page 30


 1133              		.align	1
 1134              		.global	SendAttitudeToHost
 1135              		.syntax unified
 1136              		.thumb
 1137              		.thumb_func
 1138              		.fpu fpv5-d16
 1140              	SendAttitudeToHost:
 1141              	.LVL103:
 1142              	.LFB161:
 427:Core/Src/freertos.c **** 
 428:Core/Src/freertos.c **** 
 429:Core/Src/freertos.c **** 
 430:Core/Src/freertos.c **** void UART_ProcessCommand(uint8_t* buffer) {
 431:Core/Src/freertos.c ****     if (buffer[0] == 0xAA && buffer[2] == 0x55) {  // 判断头和尾标志
 432:Core/Src/freertos.c ****         uint8_t command = buffer[1];  // 提取指令类型
 433:Core/Src/freertos.c ****         float quat[4];
 434:Core/Src/freertos.c ****         switch (command) {
 435:Core/Src/freertos.c ****             case 0x01:  // 前进
 436:Core/Src/freertos.c ****                 Move_Forward();
 437:Core/Src/freertos.c ****                 break;
 438:Core/Src/freertos.c ****             case 0x02:  // 后退
 439:Core/Src/freertos.c ****                 Move_Backward();
 440:Core/Src/freertos.c ****                 break;
 441:Core/Src/freertos.c ****             case 0x03:  // 左转
 442:Core/Src/freertos.c ****                 Turn_Left();
 443:Core/Src/freertos.c ****                 break;
 444:Core/Src/freertos.c ****             case 0x04:  // 右转
 445:Core/Src/freertos.c ****                 Turn_Right();
 446:Core/Src/freertos.c ****                 break;
 447:Core/Src/freertos.c ****             case 0x05:  // 停止
 448:Core/Src/freertos.c ****                 Stop();
 449:Core/Src/freertos.c ****                 break;
 450:Core/Src/freertos.c ****             case 0x06:  // 请求姿态数据
 451:Core/Src/freertos.c ****                 
 452:Core/Src/freertos.c ****                 AHRS_GetQuaternion(quat);  // 获取当前四元数姿态数据
 453:Core/Src/freertos.c ****                 SendAttitudeToHost(quat);  // 发送姿态数据给上位机
 454:Core/Src/freertos.c ****                 break;
 455:Core/Src/freertos.c ****             default:
 456:Core/Src/freertos.c ****                 break;
 457:Core/Src/freertos.c ****         }
 458:Core/Src/freertos.c ****     }
 459:Core/Src/freertos.c **** }
 460:Core/Src/freertos.c **** 
 461:Core/Src/freertos.c **** /* SendAttitudeToHost - Sends the current attitude (quaternion) to the host via UART */
 462:Core/Src/freertos.c **** void SendAttitudeToHost(float q[4]) {
 1143              		.loc 1 462 37 is_stmt 1 view -0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 152
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 1147              		.loc 1 462 37 is_stmt 0 view .LVU269
 1148 0000 30B5     		push	{r4, r5, lr}
 1149              	.LCFI18:
 1150              		.cfi_def_cfa_offset 12
 1151              		.cfi_offset 4, -12
 1152              		.cfi_offset 5, -8
 1153              		.cfi_offset 14, -4
 1154 0002 AFB0     		sub	sp, sp, #188
ARM GAS  /tmp/ccgPZJsu.s 			page 31


 1155              	.LCFI19:
 1156              		.cfi_def_cfa_offset 200
 1157 0004 0446     		mov	r4, r0
 463:Core/Src/freertos.c ****     uint8_t txBuffer[22];  // 传输数据缓存，22字节
 1158              		.loc 1 463 5 is_stmt 1 view .LVU270
 464:Core/Src/freertos.c ****     txBuffer[0] = 0xAA;  // 开头标志
 1159              		.loc 1 464 5 view .LVU271
 1160              		.loc 1 464 17 is_stmt 0 view .LVU272
 1161 0006 AA23     		movs	r3, #170
 1162 0008 8DF8A030 		strb	r3, [sp, #160]
 465:Core/Src/freertos.c ****     txBuffer[1] = 0x06;  // 数据类型（姿态数据）
 1163              		.loc 1 465 5 is_stmt 1 view .LVU273
 1164              		.loc 1 465 17 is_stmt 0 view .LVU274
 1165 000c 0623     		movs	r3, #6
 1166 000e 8DF8A130 		strb	r3, [sp, #161]
 466:Core/Src/freertos.c **** 
 467:Core/Src/freertos.c ****     // 将四元数数据转换为字节
 468:Core/Src/freertos.c ****     memcpy(&txBuffer[2], &q[0], sizeof(float));
 1167              		.loc 1 468 5 is_stmt 1 view .LVU275
 1168 0012 0368     		ldr	r3, [r0]	@ unaligned
 1169 0014 CDF8A230 		str	r3, [sp, #162]	@ unaligned
 469:Core/Src/freertos.c ****     memcpy(&txBuffer[6], &q[1], sizeof(float));
 1170              		.loc 1 469 5 view .LVU276
 1171 0018 4368     		ldr	r3, [r0, #4]	@ unaligned
 1172 001a CDF8A630 		str	r3, [sp, #166]	@ unaligned
 470:Core/Src/freertos.c ****     memcpy(&txBuffer[10], &q[2], sizeof(float));
 1173              		.loc 1 470 5 view .LVU277
 1174 001e 8368     		ldr	r3, [r0, #8]	@ unaligned
 1175 0020 CDF8AA30 		str	r3, [sp, #170]	@ unaligned
 471:Core/Src/freertos.c ****     memcpy(&txBuffer[14], &q[3], sizeof(float));
 1176              		.loc 1 471 5 view .LVU278
 1177 0024 C368     		ldr	r3, [r0, #12]	@ unaligned
 1178 0026 CDF8AE30 		str	r3, [sp, #174]	@ unaligned
 472:Core/Src/freertos.c **** 
 473:Core/Src/freertos.c ****     txBuffer[18] = 0x55;  // 结束标志
 1179              		.loc 1 473 5 view .LVU279
 1180              		.loc 1 473 18 is_stmt 0 view .LVU280
 1181 002a 5523     		movs	r3, #85
 1182 002c 8DF8B230 		strb	r3, [sp, #178]
 474:Core/Src/freertos.c **** 
 475:Core/Src/freertos.c ****     // 通过UART发送姿态数据
 476:Core/Src/freertos.c ****     HAL_UART_Transmit(&huart1, txBuffer, sizeof(txBuffer), HAL_MAX_DELAY);
 1183              		.loc 1 476 5 is_stmt 1 view .LVU281
 1184 0030 164D     		ldr	r5, .L46
 1185 0032 4FF0FF33 		mov	r3, #-1
 1186 0036 1622     		movs	r2, #22
 1187 0038 28A9     		add	r1, sp, #160
 1188 003a 2846     		mov	r0, r5
 1189              	.LVL104:
 1190              		.loc 1 476 5 is_stmt 0 view .LVU282
 1191 003c FFF7FEFF 		bl	HAL_UART_Transmit
 1192              	.LVL105:
 477:Core/Src/freertos.c **** 
 478:Core/Src/freertos.c ****     // 打印四元数数据
 479:Core/Src/freertos.c ****     char printBuffer[128];
 1193              		.loc 1 479 5 is_stmt 1 view .LVU283
 480:Core/Src/freertos.c ****     int len = snprintf(printBuffer, sizeof(printBuffer), "%.6f,%.6f,%.6f,%.6f\n", q[0], q[1], q[2],
ARM GAS  /tmp/ccgPZJsu.s 			page 32


 1194              		.loc 1 480 5 view .LVU284
 1195              		.loc 1 480 84 is_stmt 0 view .LVU285
 1196 0040 94ED007A 		vldr.32	s14, [r4]
 1197              		.loc 1 480 90 view .LVU286
 1198 0044 94ED016A 		vldr.32	s12, [r4, #4]
 1199              		.loc 1 480 96 view .LVU287
 1200 0048 94ED025A 		vldr.32	s10, [r4, #8]
 1201              		.loc 1 480 102 view .LVU288
 1202 004c 94ED034A 		vldr.32	s8, [r4, #12]
 1203              		.loc 1 480 15 view .LVU289
 1204 0050 B7EEC44A 		vcvt.f64.f32	d4, s8
 1205 0054 8DED064B 		vstr.64	d4, [sp, #24]
 1206 0058 B7EEC55A 		vcvt.f64.f32	d5, s10
 1207 005c 8DED045B 		vstr.64	d5, [sp, #16]
 1208 0060 B7EEC66A 		vcvt.f64.f32	d6, s12
 1209 0064 8DED026B 		vstr.64	d6, [sp, #8]
 1210 0068 B7EEC77A 		vcvt.f64.f32	d7, s14
 1211 006c 8DED007B 		vstr.64	d7, [sp]
 1212 0070 074A     		ldr	r2, .L46+4
 1213 0072 8021     		movs	r1, #128
 1214 0074 08A8     		add	r0, sp, #32
 1215 0076 FFF7FEFF 		bl	snprintf
 1216              	.LVL106:
 481:Core/Src/freertos.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 1217              		.loc 1 481 5 is_stmt 1 view .LVU290
 1218 007a 4FF0FF33 		mov	r3, #-1
 1219 007e 82B2     		uxth	r2, r0
 1220 0080 08A9     		add	r1, sp, #32
 1221 0082 2846     		mov	r0, r5
 1222              	.LVL107:
 1223              		.loc 1 481 5 is_stmt 0 view .LVU291
 1224 0084 FFF7FEFF 		bl	HAL_UART_Transmit
 1225              	.LVL108:
 482:Core/Src/freertos.c **** }
 1226              		.loc 1 482 1 view .LVU292
 1227 0088 2FB0     		add	sp, sp, #188
 1228              	.LCFI20:
 1229              		.cfi_def_cfa_offset 12
 1230              		@ sp needed
 1231 008a 30BD     		pop	{r4, r5, pc}
 1232              	.LVL109:
 1233              	.L47:
 1234              		.loc 1 482 1 view .LVU293
 1235              		.align	2
 1236              	.L46:
 1237 008c 00000000 		.word	huart1
 1238 0090 00000000 		.word	.LC6
 1239              		.cfi_endproc
 1240              	.LFE161:
 1242              		.section	.text.UART_ProcessCommand,"ax",%progbits
 1243              		.align	1
 1244              		.global	UART_ProcessCommand
 1245              		.syntax unified
 1246              		.thumb
 1247              		.thumb_func
 1248              		.fpu fpv5-d16
 1250              	UART_ProcessCommand:
ARM GAS  /tmp/ccgPZJsu.s 			page 33


 1251              	.LVL110:
 1252              	.LFB160:
 430:Core/Src/freertos.c ****     if (buffer[0] == 0xAA && buffer[2] == 0x55) {  // 判断头和尾标志
 1253              		.loc 1 430 43 is_stmt 1 view -0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 16
 1256              		@ frame_needed = 0, uses_anonymous_args = 0
 431:Core/Src/freertos.c ****         uint8_t command = buffer[1];  // 提取指令类型
 1257              		.loc 1 431 5 view .LVU295
 431:Core/Src/freertos.c ****         uint8_t command = buffer[1];  // 提取指令类型
 1258              		.loc 1 431 15 is_stmt 0 view .LVU296
 1259 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 431:Core/Src/freertos.c ****         uint8_t command = buffer[1];  // 提取指令类型
 1260              		.loc 1 431 8 view .LVU297
 1261 0002 AA2B     		cmp	r3, #170
 1262 0004 00D0     		beq	.L62
 1263              	.L59:
 1264 0006 7047     		bx	lr
 1265              	.L62:
 431:Core/Src/freertos.c ****         uint8_t command = buffer[1];  // 提取指令类型
 1266              		.loc 1 431 36 discriminator 1 view .LVU298
 1267 0008 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 431:Core/Src/freertos.c ****         uint8_t command = buffer[1];  // 提取指令类型
 1268              		.loc 1 431 27 discriminator 1 view .LVU299
 1269 000a 552B     		cmp	r3, #85
 1270 000c FBD1     		bne	.L59
 430:Core/Src/freertos.c ****     if (buffer[0] == 0xAA && buffer[2] == 0x55) {  // 判断头和尾标志
 1271              		.loc 1 430 43 view .LVU300
 1272 000e 00B5     		push	{lr}
 1273              	.LCFI21:
 1274              		.cfi_def_cfa_offset 4
 1275              		.cfi_offset 14, -4
 1276 0010 85B0     		sub	sp, sp, #20
 1277              	.LCFI22:
 1278              		.cfi_def_cfa_offset 24
 1279              	.LBB7:
 432:Core/Src/freertos.c ****         float quat[4];
 1280              		.loc 1 432 9 is_stmt 1 view .LVU301
 432:Core/Src/freertos.c ****         float quat[4];
 1281              		.loc 1 432 17 is_stmt 0 view .LVU302
 1282 0012 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1283              	.LVL111:
 433:Core/Src/freertos.c ****         switch (command) {
 1284              		.loc 1 433 9 is_stmt 1 view .LVU303
 434:Core/Src/freertos.c ****             case 0x01:  // 前进
 1285              		.loc 1 434 9 view .LVU304
 1286 0014 013B     		subs	r3, r3, #1
 1287              	.LVL112:
 434:Core/Src/freertos.c ****             case 0x01:  // 前进
 1288              		.loc 1 434 9 is_stmt 0 view .LVU305
 1289 0016 052B     		cmp	r3, #5
 1290 0018 06D8     		bhi	.L48
 1291 001a DFE803F0 		tbb	[pc, r3]
 1292              	.L52:
 1293 001e 03       		.byte	(.L57-.L52)/2
 1294 001f 08       		.byte	(.L56-.L52)/2
 1295 0020 0B       		.byte	(.L55-.L52)/2
ARM GAS  /tmp/ccgPZJsu.s 			page 34


 1296 0021 0E       		.byte	(.L54-.L52)/2
 1297 0022 11       		.byte	(.L53-.L52)/2
 1298 0023 14       		.byte	(.L51-.L52)/2
 1299              		.p2align 1
 1300              	.L57:
 436:Core/Src/freertos.c ****                 break;
 1301              		.loc 1 436 17 is_stmt 1 view .LVU306
 1302 0024 FFF7FEFF 		bl	Move_Forward
 1303              	.LVL113:
 437:Core/Src/freertos.c ****             case 0x02:  // 后退
 1304              		.loc 1 437 17 view .LVU307
 1305              	.L48:
 1306              	.LBE7:
 459:Core/Src/freertos.c **** 
 1307              		.loc 1 459 1 is_stmt 0 view .LVU308
 1308 0028 05B0     		add	sp, sp, #20
 1309              	.LCFI23:
 1310              		.cfi_remember_state
 1311              		.cfi_def_cfa_offset 4
 1312              		@ sp needed
 1313 002a 5DF804FB 		ldr	pc, [sp], #4
 1314              	.LVL114:
 1315              	.L56:
 1316              	.LCFI24:
 1317              		.cfi_restore_state
 1318              	.LBB8:
 439:Core/Src/freertos.c ****                 break;
 1319              		.loc 1 439 17 is_stmt 1 view .LVU309
 1320 002e FFF7FEFF 		bl	Move_Backward
 1321              	.LVL115:
 440:Core/Src/freertos.c ****             case 0x03:  // 左转
 1322              		.loc 1 440 17 view .LVU310
 1323 0032 F9E7     		b	.L48
 1324              	.LVL116:
 1325              	.L55:
 442:Core/Src/freertos.c ****                 break;
 1326              		.loc 1 442 17 view .LVU311
 1327 0034 FFF7FEFF 		bl	Turn_Left
 1328              	.LVL117:
 443:Core/Src/freertos.c ****             case 0x04:  // 右转
 1329              		.loc 1 443 17 view .LVU312
 1330 0038 F6E7     		b	.L48
 1331              	.LVL118:
 1332              	.L54:
 445:Core/Src/freertos.c ****                 break;
 1333              		.loc 1 445 17 view .LVU313
 1334 003a FFF7FEFF 		bl	Turn_Right
 1335              	.LVL119:
 446:Core/Src/freertos.c ****             case 0x05:  // 停止
 1336              		.loc 1 446 17 view .LVU314
 1337 003e F3E7     		b	.L48
 1338              	.LVL120:
 1339              	.L53:
 448:Core/Src/freertos.c ****                 break;
 1340              		.loc 1 448 17 view .LVU315
 1341 0040 FFF7FEFF 		bl	Stop
 1342              	.LVL121:
ARM GAS  /tmp/ccgPZJsu.s 			page 35


 449:Core/Src/freertos.c ****             case 0x06:  // 请求姿态数据
 1343              		.loc 1 449 17 view .LVU316
 1344 0044 F0E7     		b	.L48
 1345              	.LVL122:
 1346              	.L51:
 452:Core/Src/freertos.c ****                 SendAttitudeToHost(quat);  // 发送姿态数据给上位机
 1347              		.loc 1 452 17 view .LVU317
 1348 0046 6846     		mov	r0, sp
 1349              	.LVL123:
 452:Core/Src/freertos.c ****                 SendAttitudeToHost(quat);  // 发送姿态数据给上位机
 1350              		.loc 1 452 17 is_stmt 0 view .LVU318
 1351 0048 FFF7FEFF 		bl	AHRS_GetQuaternion
 1352              	.LVL124:
 453:Core/Src/freertos.c ****                 break;
 1353              		.loc 1 453 17 is_stmt 1 view .LVU319
 1354 004c 6846     		mov	r0, sp
 1355 004e FFF7FEFF 		bl	SendAttitudeToHost
 1356              	.LVL125:
 454:Core/Src/freertos.c ****             default:
 1357              		.loc 1 454 17 view .LVU320
 1358              	.LBE8:
 459:Core/Src/freertos.c **** 
 1359              		.loc 1 459 1 is_stmt 0 view .LVU321
 1360 0052 E9E7     		b	.L48
 1361              		.cfi_endproc
 1362              	.LFE160:
 1364              		.section	.text.StartSerialCommTask,"ax",%progbits
 1365              		.align	1
 1366              		.global	StartSerialCommTask
 1367              		.syntax unified
 1368              		.thumb
 1369              		.thumb_func
 1370              		.fpu fpv5-d16
 1372              	StartSerialCommTask:
 1373              	.LFB156:
 376:Core/Src/freertos.c ****   /* USER CODE BEGIN StartSerialCommTask */
 1374              		.loc 1 376 1 is_stmt 1 view -0
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 272
 1377              		@ frame_needed = 0, uses_anonymous_args = 0
 1378              	.LVL126:
 376:Core/Src/freertos.c ****   /* USER CODE BEGIN StartSerialCommTask */
 1379              		.loc 1 376 1 is_stmt 0 view .LVU323
 1380 0000 00B5     		push	{lr}
 1381              	.LCFI25:
 1382              		.cfi_def_cfa_offset 4
 1383              		.cfi_offset 14, -4
 1384 0002 D1B0     		sub	sp, sp, #324
 1385              	.LCFI26:
 1386              		.cfi_def_cfa_offset 328
 1387 0004 02E0     		b	.L65
 1388              	.LVL127:
 1389              	.L67:
 1390              	.LBB9:
 402:Core/Src/freertos.c ****     }
 1391              		.loc 1 402 7 is_stmt 1 view .LVU324
 1392 0006 4DA8     		add	r0, sp, #308
ARM GAS  /tmp/ccgPZJsu.s 			page 36


 1393 0008 FFF7FEFF 		bl	UART_ProcessCommand
 1394              	.LVL128:
 1395              	.LBE9:
 380:Core/Src/freertos.c ****   {
 1396              		.loc 1 380 8 view .LVU325
 1397              	.L65:
 378:Core/Src/freertos.c ****   /* Infinite loop */
 1398              		.loc 1 378 3 view .LVU326
 380:Core/Src/freertos.c ****   {
 1399              		.loc 1 380 3 view .LVU327
 1400              	.LBB10:
 384:Core/Src/freertos.c ****         float ay = imuData.accel[1] * 4.0f * 9.81f / 32768.0f;
 1401              		.loc 1 384 9 view .LVU328
 384:Core/Src/freertos.c ****         float ay = imuData.accel[1] * 4.0f * 9.81f / 32768.0f;
 1402              		.loc 1 384 33 is_stmt 0 view .LVU329
 1403 000c 4E4B     		ldr	r3, .L68+16
 1404 000e B3F90020 		ldrsh	r2, [r3]
 1405 0012 07EE902A 		vmov	s15, r2	@ int
 384:Core/Src/freertos.c ****         float ay = imuData.accel[1] * 4.0f * 9.81f / 32768.0f;
 1406              		.loc 1 384 37 view .LVU330
 1407 0016 F8EEE77A 		vcvt.f32.s32	s15, s15
 1408 001a B1EE005A 		vmov.f32	s10, #4.0e+0
 1409 001e 67EE857A 		vmul.f32	s15, s15, s10
 384:Core/Src/freertos.c ****         float ay = imuData.accel[1] * 4.0f * 9.81f / 32768.0f;
 1410              		.loc 1 384 44 view .LVU331
 1411 0022 DFED4A5A 		vldr.32	s11, .L68+20
 1412 0026 67EEA57A 		vmul.f32	s15, s15, s11
 384:Core/Src/freertos.c ****         float ay = imuData.accel[1] * 4.0f * 9.81f / 32768.0f;
 1413              		.loc 1 384 15 view .LVU332
 1414 002a 9FED496A 		vldr.32	s12, .L68+24
 1415 002e 67EE867A 		vmul.f32	s15, s15, s12
 1416              	.LVL129:
 385:Core/Src/freertos.c ****         float az = imuData.accel[2] * 4.0f * 9.81f / 32768.0f;
 1417              		.loc 1 385 9 is_stmt 1 view .LVU333
 385:Core/Src/freertos.c ****         float az = imuData.accel[2] * 4.0f * 9.81f / 32768.0f;
 1418              		.loc 1 385 33 is_stmt 0 view .LVU334
 1419 0032 B3F90220 		ldrsh	r2, [r3, #2]
 1420 0036 07EE102A 		vmov	s14, r2	@ int
 385:Core/Src/freertos.c ****         float az = imuData.accel[2] * 4.0f * 9.81f / 32768.0f;
 1421              		.loc 1 385 37 view .LVU335
 1422 003a B8EEC77A 		vcvt.f32.s32	s14, s14
 1423 003e 27EE057A 		vmul.f32	s14, s14, s10
 385:Core/Src/freertos.c ****         float az = imuData.accel[2] * 4.0f * 9.81f / 32768.0f;
 1424              		.loc 1 385 44 view .LVU336
 1425 0042 27EE257A 		vmul.f32	s14, s14, s11
 385:Core/Src/freertos.c ****         float az = imuData.accel[2] * 4.0f * 9.81f / 32768.0f;
 1426              		.loc 1 385 15 view .LVU337
 1427 0046 27EE067A 		vmul.f32	s14, s14, s12
 1428              	.LVL130:
 386:Core/Src/freertos.c ****         float gx = imuData.gyro[0] * 500.0f / 32768.0f * M_PI / 180.0f; // 500DPS 量程
 1429              		.loc 1 386 9 is_stmt 1 view .LVU338
 386:Core/Src/freertos.c ****         float gx = imuData.gyro[0] * 500.0f / 32768.0f * M_PI / 180.0f; // 500DPS 量程
 1430              		.loc 1 386 33 is_stmt 0 view .LVU339
 1431 004a B3F90420 		ldrsh	r2, [r3, #4]
 1432 004e 06EE902A 		vmov	s13, r2	@ int
 386:Core/Src/freertos.c ****         float gx = imuData.gyro[0] * 500.0f / 32768.0f * M_PI / 180.0f; // 500DPS 量程
 1433              		.loc 1 386 37 view .LVU340
ARM GAS  /tmp/ccgPZJsu.s 			page 37


 1434 0052 F8EEE66A 		vcvt.f32.s32	s13, s13
 1435 0056 66EE856A 		vmul.f32	s13, s13, s10
 386:Core/Src/freertos.c ****         float gx = imuData.gyro[0] * 500.0f / 32768.0f * M_PI / 180.0f; // 500DPS 量程
 1436              		.loc 1 386 44 view .LVU341
 1437 005a 66EEA56A 		vmul.f32	s13, s13, s11
 386:Core/Src/freertos.c ****         float gx = imuData.gyro[0] * 500.0f / 32768.0f * M_PI / 180.0f; // 500DPS 量程
 1438              		.loc 1 386 15 view .LVU342
 1439 005e 66EE866A 		vmul.f32	s13, s13, s12
 1440              	.LVL131:
 387:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 1441              		.loc 1 387 9 is_stmt 1 view .LVU343
 387:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 1442              		.loc 1 387 32 is_stmt 0 view .LVU344
 1443 0062 B3F90620 		ldrsh	r2, [r3, #6]
 1444 0066 04EE102A 		vmov	s8, r2	@ int
 387:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 1445              		.loc 1 387 36 view .LVU345
 1446 006a B8EEC44A 		vcvt.f32.s32	s8, s8
 1447 006e DFED395A 		vldr.32	s11, .L68+28
 1448 0072 24EE254A 		vmul.f32	s8, s8, s11
 387:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 1449              		.loc 1 387 45 view .LVU346
 1450 0076 24EE064A 		vmul.f32	s8, s8, s12
 1451 007a B7EEC44A 		vcvt.f64.f32	d4, s8
 387:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 1452              		.loc 1 387 56 view .LVU347
 1453 007e 9FED2E2B 		vldr.64	d2, .L68
 1454 0082 24EE024B 		vmul.f64	d4, d4, d2
 387:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 1455              		.loc 1 387 63 view .LVU348
 1456 0086 9FED2E3B 		vldr.64	d3, .L68+8
 1457 008a 84EE031B 		vdiv.f64	d1, d4, d3
 387:Core/Src/freertos.c ****         float gy = imuData.gyro[1] * 500.0f / 32768.0f * M_PI / 180.0f;
 1458              		.loc 1 387 15 view .LVU349
 1459 008e F7EEC11B 		vcvt.f32.f64	s3, d1
 1460              	.LVL132:
 388:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 1461              		.loc 1 388 9 is_stmt 1 view .LVU350
 388:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 1462              		.loc 1 388 32 is_stmt 0 view .LVU351
 1463 0092 B3F90820 		ldrsh	r2, [r3, #8]
 1464 0096 04EE102A 		vmov	s8, r2	@ int
 388:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 1465              		.loc 1 388 36 view .LVU352
 1466 009a B8EEC44A 		vcvt.f32.s32	s8, s8
 1467 009e 24EE254A 		vmul.f32	s8, s8, s11
 388:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 1468              		.loc 1 388 45 view .LVU353
 1469 00a2 24EE064A 		vmul.f32	s8, s8, s12
 1470 00a6 B7EEC44A 		vcvt.f64.f32	d4, s8
 388:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 1471              		.loc 1 388 56 view .LVU354
 1472 00aa 24EE024B 		vmul.f64	d4, d4, d2
 388:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
 1473              		.loc 1 388 63 view .LVU355
 1474 00ae 84EE030B 		vdiv.f64	d0, d4, d3
 388:Core/Src/freertos.c ****         float gz = imuData.gyro[2] * 500.0f / 32768.0f * M_PI / 180.0f;
ARM GAS  /tmp/ccgPZJsu.s 			page 38


 1475              		.loc 1 388 15 view .LVU356
 1476 00b2 B7EEC00B 		vcvt.f32.f64	s0, d0
 1477              	.LVL133:
 389:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 1478              		.loc 1 389 9 is_stmt 1 view .LVU357
 389:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 1479              		.loc 1 389 32 is_stmt 0 view .LVU358
 1480 00b6 B3F90A30 		ldrsh	r3, [r3, #10]
 1481 00ba 05EE103A 		vmov	s10, r3	@ int
 389:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 1482              		.loc 1 389 36 view .LVU359
 1483 00be B8EEC55A 		vcvt.f32.s32	s10, s10
 1484 00c2 25EE255A 		vmul.f32	s10, s10, s11
 389:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 1485              		.loc 1 389 45 view .LVU360
 1486 00c6 25EE065A 		vmul.f32	s10, s10, s12
 1487 00ca B7EEC55A 		vcvt.f64.f32	d5, s10
 389:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 1488              		.loc 1 389 56 view .LVU361
 1489 00ce 25EE025B 		vmul.f64	d5, d5, d2
 389:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 1490              		.loc 1 389 63 view .LVU362
 1491 00d2 85EE034B 		vdiv.f64	d4, d5, d3
 389:Core/Src/freertos.c ****         float mx = imuData.mag[0] * 0.146f; // 将原始数据转换为 µT
 1492              		.loc 1 389 15 view .LVU363
 1493 00d6 B7EEC45B 		vcvt.f32.f64	s10, d4
 1494              	.LVL134:
 390:Core/Src/freertos.c ****         float my = imuData.mag[1] * 0.146f;
 1495              		.loc 1 390 9 is_stmt 1 view .LVU364
 391:Core/Src/freertos.c ****         float mz = imuData.mag[2] * 0.146f;
 1496              		.loc 1 391 9 view .LVU365
 392:Core/Src/freertos.c ****          // 打印四元数数据
 1497              		.loc 1 392 9 view .LVU366
 394:Core/Src/freertos.c ****         int len = snprintf(printBuffer, sizeof(printBuffer), "A:%.2f,%.2f,%.2f,%.2f,G:%.2f,%.2f,%.2
 1498              		.loc 1 394 9 view .LVU367
 395:Core/Src/freertos.c ****         //HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 1499              		.loc 1 395 9 view .LVU368
 395:Core/Src/freertos.c ****         //HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 1500              		.loc 1 395 19 is_stmt 0 view .LVU369
 1501 00da B7EEC55A 		vcvt.f64.f32	d5, s10
 1502              	.LVL135:
 395:Core/Src/freertos.c ****         //HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 1503              		.loc 1 395 19 view .LVU370
 1504 00de 8DED0A5B 		vstr.64	d5, [sp, #40]
 1505 00e2 B7EEC00A 		vcvt.f64.f32	d0, s0
 1506              	.LVL136:
 395:Core/Src/freertos.c ****         //HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 1507              		.loc 1 395 19 view .LVU371
 1508 00e6 8DED080B 		vstr.64	d0, [sp, #32]
 1509 00ea B7EEE15A 		vcvt.f64.f32	d5, s3
 1510 00ee 8DED065B 		vstr.64	d5, [sp, #24]
 1511 00f2 B7EEE66A 		vcvt.f64.f32	d6, s13
 1512              	.LVL137:
 395:Core/Src/freertos.c ****         //HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 1513              		.loc 1 395 19 view .LVU372
 1514 00f6 8DED046B 		vstr.64	d6, [sp, #16]
 1515 00fa B7EEC76A 		vcvt.f64.f32	d6, s14
ARM GAS  /tmp/ccgPZJsu.s 			page 39


 1516 00fe 8DED026B 		vstr.64	d6, [sp, #8]
 1517 0102 B7EEE77A 		vcvt.f64.f32	d7, s15
 1518              	.LVL138:
 395:Core/Src/freertos.c ****         //HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 1519              		.loc 1 395 19 view .LVU373
 1520 0106 8DED007B 		vstr.64	d7, [sp]
 1521 010a 134A     		ldr	r2, .L68+32
 1522              	.LVL139:
 395:Core/Src/freertos.c ****         //HAL_UART_Transmit(&huart1, (uint8_t*)printBuffer, len, HAL_MAX_DELAY);
 1523              		.loc 1 395 19 view .LVU374
 1524 010c 4FF48071 		mov	r1, #256
 1525 0110 0DA8     		add	r0, sp, #52
 1526 0112 FFF7FEFF 		bl	snprintf
 1527              	.LVL140:
 398:Core/Src/freertos.c **** 
 1528              		.loc 1 398 9 is_stmt 1 view .LVU375
 1529 0116 0120     		movs	r0, #1
 1530 0118 FFF7FEFF 		bl	osDelay
 1531              	.LVL141:
 401:Core/Src/freertos.c ****       UART_ProcessCommand(rxBuffer);  // 处理命令
 1532              		.loc 1 401 5 view .LVU376
 401:Core/Src/freertos.c ****       UART_ProcessCommand(rxBuffer);  // 处理命令
 1533              		.loc 1 401 9 is_stmt 0 view .LVU377
 1534 011c 4FF0FF33 		mov	r3, #-1
 1535 0120 0A22     		movs	r2, #10
 1536 0122 4DA9     		add	r1, sp, #308
 1537 0124 0D48     		ldr	r0, .L68+36
 1538 0126 FFF7FEFF 		bl	HAL_UART_Receive
 1539              	.LVL142:
 401:Core/Src/freertos.c ****       UART_ProcessCommand(rxBuffer);  // 处理命令
 1540              		.loc 1 401 8 view .LVU378
 1541 012a 0028     		cmp	r0, #0
 1542 012c 7FF46EAF 		bne	.L65
 1543 0130 69E7     		b	.L67
 1544              	.L69:
 1545 0132 00BFAFF3 		.align	3
 1545      0080
 1546              	.L68:
 1547 0138 182D4454 		.word	1413754136
 1548 013c FB210940 		.word	1074340347
 1549 0140 00000000 		.word	0
 1550 0144 00806640 		.word	1080459264
 1551 0148 00000000 		.word	.LANCHOR0
 1552 014c C3F51C41 		.word	1092416963
 1553 0150 00000038 		.word	939524096
 1554 0154 0000FA43 		.word	1140457472
 1555 0158 00000000 		.word	.LC2
 1556 015c 00000000 		.word	huart1
 1557              	.LBE10:
 1558              		.cfi_endproc
 1559              	.LFE156:
 1561              		.section	.text.SendAttitudeToPC,"ax",%progbits
 1562              		.align	1
 1563              		.global	SendAttitudeToPC
 1564              		.syntax unified
 1565              		.thumb
 1566              		.thumb_func
ARM GAS  /tmp/ccgPZJsu.s 			page 40


 1567              		.fpu fpv5-d16
 1569              	SendAttitudeToPC:
 1570              	.LVL143:
 1571              	.LFB162:
 483:Core/Src/freertos.c **** 
 484:Core/Src/freertos.c **** void SendAttitudeToPC(float q[4]) {
 1572              		.loc 1 484 35 is_stmt 1 view -0
 1573              		.cfi_startproc
 1574              		@ args = 0, pretend = 0, frame = 56
 1575              		@ frame_needed = 0, uses_anonymous_args = 0
 1576              		.loc 1 484 35 is_stmt 0 view .LVU380
 1577 0000 00B5     		push	{lr}
 1578              	.LCFI27:
 1579              		.cfi_def_cfa_offset 4
 1580              		.cfi_offset 14, -4
 1581 0002 97B0     		sub	sp, sp, #92
 1582              	.LCFI28:
 1583              		.cfi_def_cfa_offset 96
 485:Core/Src/freertos.c ****     char txBuffer[50];  // 传输数据缓存
 1584              		.loc 1 485 5 is_stmt 1 view .LVU381
 486:Core/Src/freertos.c ****     int len = snprintf(txBuffer, sizeof(txBuffer), "%.6f,%.6f,%.6f,%.6f\n", q[0], q[1], q[2], q[3])
 1585              		.loc 1 486 5 view .LVU382
 1586              		.loc 1 486 78 is_stmt 0 view .LVU383
 1587 0004 90ED007A 		vldr.32	s14, [r0]
 1588              		.loc 1 486 84 view .LVU384
 1589 0008 90ED016A 		vldr.32	s12, [r0, #4]
 1590              		.loc 1 486 90 view .LVU385
 1591 000c 90ED025A 		vldr.32	s10, [r0, #8]
 1592              		.loc 1 486 96 view .LVU386
 1593 0010 90ED034A 		vldr.32	s8, [r0, #12]
 1594              		.loc 1 486 15 view .LVU387
 1595 0014 B7EEC44A 		vcvt.f64.f32	d4, s8
 1596 0018 8DED064B 		vstr.64	d4, [sp, #24]
 1597 001c B7EEC55A 		vcvt.f64.f32	d5, s10
 1598 0020 8DED045B 		vstr.64	d5, [sp, #16]
 1599 0024 B7EEC66A 		vcvt.f64.f32	d6, s12
 1600 0028 8DED026B 		vstr.64	d6, [sp, #8]
 1601 002c B7EEC77A 		vcvt.f64.f32	d7, s14
 1602 0030 8DED007B 		vstr.64	d7, [sp]
 1603 0034 074A     		ldr	r2, .L72
 1604 0036 3221     		movs	r1, #50
 1605 0038 09A8     		add	r0, sp, #36
 1606              	.LVL144:
 1607              		.loc 1 486 15 view .LVU388
 1608 003a FFF7FEFF 		bl	snprintf
 1609              	.LVL145:
 487:Core/Src/freertos.c **** 
 488:Core/Src/freertos.c ****     // 通过UART发送姿态数据
 489:Core/Src/freertos.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)txBuffer, len, HAL_MAX_DELAY);
 1610              		.loc 1 489 5 is_stmt 1 view .LVU389
 1611 003e 4FF0FF33 		mov	r3, #-1
 1612 0042 82B2     		uxth	r2, r0
 1613 0044 09A9     		add	r1, sp, #36
 1614 0046 0448     		ldr	r0, .L72+4
 1615              	.LVL146:
 1616              		.loc 1 489 5 is_stmt 0 view .LVU390
 1617 0048 FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /tmp/ccgPZJsu.s 			page 41


 1618              	.LVL147:
 490:Core/Src/freertos.c **** }
 1619              		.loc 1 490 1 view .LVU391
 1620 004c 17B0     		add	sp, sp, #92
 1621              	.LCFI29:
 1622              		.cfi_def_cfa_offset 4
 1623              		@ sp needed
 1624 004e 5DF804FB 		ldr	pc, [sp], #4
 1625              	.L73:
 1626 0052 00BF     		.align	2
 1627              	.L72:
 1628 0054 00000000 		.word	.LC6
 1629 0058 00000000 		.word	huart1
 1630              		.cfi_endproc
 1631              	.LFE162:
 1633              		.global	SerialCommTask_attributes
 1634              		.section	.rodata.str1.4,"aMS",%progbits,1
 1635              		.align	2
 1636              	.LC7:
 1637 0000 53657269 		.ascii	"SerialCommTask\000"
 1637      616C436F 
 1637      6D6D5461 
 1637      736B00
 1638              		.global	SerialCommTaskHandle
 1639              		.global	GaitControlTask_attributes
 1640 000f 00       		.align	2
 1641              	.LC8:
 1642 0010 47616974 		.ascii	"GaitControlTask\000"
 1642      436F6E74 
 1642      726F6C54 
 1642      61736B00 
 1643              		.global	GaitControlTaskHandle
 1644              		.global	ServoControlTas_attributes
 1645              		.align	2
 1646              	.LC9:
 1647 0020 53657276 		.ascii	"ServoControlTas\000"
 1647      6F436F6E 
 1647      74726F6C 
 1647      54617300 
 1648              		.global	ServoControlTasHandle
 1649              		.global	AttitudeTask_attributes
 1650              		.align	2
 1651              	.LC10:
 1652 0030 41747469 		.ascii	"AttitudeTask\000"
 1652      74756465 
 1652      5461736B 
 1652      00
 1653              		.global	AttitudeTaskHandle
 1654              		.global	defaultTask_attributes
 1655 003d 000000   		.align	2
 1656              	.LC11:
 1657 0040 64656661 		.ascii	"defaultTask\000"
 1657      756C7454 
 1657      61736B00 
 1658              		.global	defaultTaskHandle
 1659              		.global	TempData
 1660              		.global	GyroData
ARM GAS  /tmp/ccgPZJsu.s 			page 42


 1661              		.global	MagData
 1662              		.global	AccData
 1663              		.global	quatQueue
 1664              		.global	imuData
 1665              		.section	.bss.AccData,"aw",%nobits
 1666              		.align	2
 1669              	AccData:
 1670 0000 00000000 		.space	6
 1670      0000
 1671              		.section	.bss.AttitudeTaskHandle,"aw",%nobits
 1672              		.align	2
 1673              		.set	.LANCHOR5,. + 0
 1676              	AttitudeTaskHandle:
 1677 0000 00000000 		.space	4
 1678              		.section	.bss.GaitControlTaskHandle,"aw",%nobits
 1679              		.align	2
 1680              		.set	.LANCHOR9,. + 0
 1683              	GaitControlTaskHandle:
 1684 0000 00000000 		.space	4
 1685              		.section	.bss.GyroData,"aw",%nobits
 1686              		.align	2
 1689              	GyroData:
 1690 0000 00000000 		.space	6
 1690      0000
 1691              		.section	.bss.MagData,"aw",%nobits
 1692              		.align	2
 1695              	MagData:
 1696 0000 00000000 		.space	6
 1696      0000
 1697              		.section	.bss.SerialCommTaskHandle,"aw",%nobits
 1698              		.align	2
 1699              		.set	.LANCHOR11,. + 0
 1702              	SerialCommTaskHandle:
 1703 0000 00000000 		.space	4
 1704              		.section	.bss.ServoControlTasHandle,"aw",%nobits
 1705              		.align	2
 1706              		.set	.LANCHOR7,. + 0
 1709              	ServoControlTasHandle:
 1710 0000 00000000 		.space	4
 1711              		.section	.bss.TempData,"aw",%nobits
 1712              		.align	2
 1715              	TempData:
 1716 0000 00000000 		.space	4
 1717              		.section	.bss.defaultTaskHandle,"aw",%nobits
 1718              		.align	2
 1719              		.set	.LANCHOR3,. + 0
 1722              	defaultTaskHandle:
 1723 0000 00000000 		.space	4
 1724              		.section	.bss.imuData,"aw",%nobits
 1725              		.align	2
 1726              		.set	.LANCHOR0,. + 0
 1729              	imuData:
 1730 0000 00000000 		.space	24
 1730      00000000 
 1730      00000000 
 1730      00000000 
 1730      00000000 
ARM GAS  /tmp/ccgPZJsu.s 			page 43


 1731              		.section	.bss.quatQueue,"aw",%nobits
 1732              		.align	2
 1733              		.set	.LANCHOR1,. + 0
 1736              	quatQueue:
 1737 0000 00000000 		.space	4
 1738              		.section	.rodata.AttitudeTask_attributes,"a"
 1739              		.align	2
 1740              		.set	.LANCHOR4,. + 0
 1743              	AttitudeTask_attributes:
 1744 0000 30000000 		.word	.LC10
 1745 0004 00000000 		.space	16
 1745      00000000 
 1745      00000000 
 1745      00000000 
 1746 0014 00100000 		.word	4096
 1747 0018 33000000 		.word	51
 1748 001c 00000000 		.space	8
 1748      00000000 
 1749              		.section	.rodata.GaitControlTask_attributes,"a"
 1750              		.align	2
 1751              		.set	.LANCHOR8,. + 0
 1754              	GaitControlTask_attributes:
 1755 0000 10000000 		.word	.LC8
 1756 0004 00000000 		.space	16
 1756      00000000 
 1756      00000000 
 1756      00000000 
 1757 0014 00040000 		.word	1024
 1758 0018 31000000 		.word	49
 1759 001c 00000000 		.space	8
 1759      00000000 
 1760              		.section	.rodata.SerialCommTask_attributes,"a"
 1761              		.align	2
 1762              		.set	.LANCHOR10,. + 0
 1765              	SerialCommTask_attributes:
 1766 0000 00000000 		.word	.LC7
 1767 0004 00000000 		.space	16
 1767      00000000 
 1767      00000000 
 1767      00000000 
 1768 0014 00040000 		.word	1024
 1769 0018 31000000 		.word	49
 1770 001c 00000000 		.space	8
 1770      00000000 
 1771              		.section	.rodata.ServoControlTas_attributes,"a"
 1772              		.align	2
 1773              		.set	.LANCHOR6,. + 0
 1776              	ServoControlTas_attributes:
 1777 0000 20000000 		.word	.LC9
 1778 0004 00000000 		.space	16
 1778      00000000 
 1778      00000000 
 1778      00000000 
 1779 0014 00040000 		.word	1024
 1780 0018 31000000 		.word	49
 1781 001c 00000000 		.space	8
 1781      00000000 
ARM GAS  /tmp/ccgPZJsu.s 			page 44


 1782              		.section	.rodata.defaultTask_attributes,"a"
 1783              		.align	2
 1784              		.set	.LANCHOR2,. + 0
 1787              	defaultTask_attributes:
 1788 0000 40000000 		.word	.LC11
 1789 0004 00000000 		.space	16
 1789      00000000 
 1789      00000000 
 1789      00000000 
 1790 0014 00020000 		.word	512
 1791 0018 18000000 		.word	24
 1792 001c 00000000 		.space	8
 1792      00000000 
 1793              		.text
 1794              	.Letext0:
 1795              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1796              		.file 3 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 1797              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 1798              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1799              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 1800              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 1801              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1802              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1803              		.file 10 "Core/Inc/servo_control.h"
 1804              		.file 11 "Core/Inc/MPU9250.h"
 1805              		.file 12 "Core/Inc/robocontrol.h"
 1806              		.file 13 "/usr/include/newlib/stdio.h"
 1807              		.file 14 "Core/Inc/AHRS.h"
 1808              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
ARM GAS  /tmp/ccgPZJsu.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccgPZJsu.s:17     .rodata.StartDefaultTask.str1.4:0000000000000000 $d
     /tmp/ccgPZJsu.s:21     .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccgPZJsu.s:29     .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccgPZJsu.s:118    .text.StartDefaultTask:0000000000000058 $d
     /tmp/ccgPZJsu.s:125    .rodata.StartAttitudeTask.str1.4:0000000000000000 $d
     /tmp/ccgPZJsu.s:130    .text.StartAttitudeTask:0000000000000000 $t
     /tmp/ccgPZJsu.s:137    .text.StartAttitudeTask:0000000000000000 StartAttitudeTask
     /tmp/ccgPZJsu.s:363    .text.StartAttitudeTask:00000000000001a8 $d
     /tmp/ccgPZJsu.s:378    .rodata.StartServoControlTask.str1.4:0000000000000000 $d
     /tmp/ccgPZJsu.s:382    .text.StartServoControlTask:0000000000000000 $t
     /tmp/ccgPZJsu.s:389    .text.StartServoControlTask:0000000000000000 StartServoControlTask
     /tmp/ccgPZJsu.s:571    .text.StartServoControlTask:0000000000000150 $d
     /tmp/ccgPZJsu.s:584    .text.StartGaitControlTask:0000000000000000 $t
     /tmp/ccgPZJsu.s:591    .text.StartGaitControlTask:0000000000000000 StartGaitControlTask
     /tmp/ccgPZJsu.s:771    .text.StartGaitControlTask:0000000000000140 $d
     /tmp/ccgPZJsu.s:776    .text.StartGaitControlTask:0000000000000154 $t
     /tmp/ccgPZJsu.s:804    .text.StartGaitControlTask:0000000000000170 $d
     /tmp/ccgPZJsu.s:819    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccgPZJsu.s:826    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccgPZJsu.s:908    .text.MX_FREERTOS_Init:0000000000000060 $d
     /tmp/ccgPZJsu.s:1372   .text.StartSerialCommTask:0000000000000000 StartSerialCommTask
     /tmp/ccgPZJsu.s:928    .rodata.print_accel_data.str1.4:0000000000000000 $d
     /tmp/ccgPZJsu.s:932    .text.print_accel_data:0000000000000000 $t
     /tmp/ccgPZJsu.s:939    .text.print_accel_data:0000000000000000 print_accel_data
     /tmp/ccgPZJsu.s:989    .text.print_accel_data:0000000000000034 $d
     /tmp/ccgPZJsu.s:995    .rodata.print_mag_data.str1.4:0000000000000000 $d
     /tmp/ccgPZJsu.s:999    .text.print_mag_data:0000000000000000 $t
     /tmp/ccgPZJsu.s:1006   .text.print_mag_data:0000000000000000 print_mag_data
     /tmp/ccgPZJsu.s:1056   .text.print_mag_data:0000000000000034 $d
     /tmp/ccgPZJsu.s:1062   .rodata.print_gyro_data.str1.4:0000000000000000 $d
     /tmp/ccgPZJsu.s:1066   .text.print_gyro_data:0000000000000000 $t
     /tmp/ccgPZJsu.s:1073   .text.print_gyro_data:0000000000000000 print_gyro_data
     /tmp/ccgPZJsu.s:1123   .text.print_gyro_data:0000000000000034 $d
     /tmp/ccgPZJsu.s:1129   .rodata.SendAttitudeToHost.str1.4:0000000000000000 $d
     /tmp/ccgPZJsu.s:1133   .text.SendAttitudeToHost:0000000000000000 $t
     /tmp/ccgPZJsu.s:1140   .text.SendAttitudeToHost:0000000000000000 SendAttitudeToHost
     /tmp/ccgPZJsu.s:1237   .text.SendAttitudeToHost:000000000000008c $d
     /tmp/ccgPZJsu.s:1243   .text.UART_ProcessCommand:0000000000000000 $t
     /tmp/ccgPZJsu.s:1250   .text.UART_ProcessCommand:0000000000000000 UART_ProcessCommand
     /tmp/ccgPZJsu.s:1293   .text.UART_ProcessCommand:000000000000001e $d
     /tmp/ccgPZJsu.s:1299   .text.UART_ProcessCommand:0000000000000024 $t
     /tmp/ccgPZJsu.s:1365   .text.StartSerialCommTask:0000000000000000 $t
     /tmp/ccgPZJsu.s:1547   .text.StartSerialCommTask:0000000000000138 $d
     /tmp/ccgPZJsu.s:1562   .text.SendAttitudeToPC:0000000000000000 $t
     /tmp/ccgPZJsu.s:1569   .text.SendAttitudeToPC:0000000000000000 SendAttitudeToPC
     /tmp/ccgPZJsu.s:1628   .text.SendAttitudeToPC:0000000000000054 $d
     /tmp/ccgPZJsu.s:1765   .rodata.SerialCommTask_attributes:0000000000000000 SerialCommTask_attributes
     /tmp/ccgPZJsu.s:1635   .rodata.str1.4:0000000000000000 $d
     /tmp/ccgPZJsu.s:1702   .bss.SerialCommTaskHandle:0000000000000000 SerialCommTaskHandle
     /tmp/ccgPZJsu.s:1754   .rodata.GaitControlTask_attributes:0000000000000000 GaitControlTask_attributes
     /tmp/ccgPZJsu.s:1683   .bss.GaitControlTaskHandle:0000000000000000 GaitControlTaskHandle
     /tmp/ccgPZJsu.s:1776   .rodata.ServoControlTas_attributes:0000000000000000 ServoControlTas_attributes
     /tmp/ccgPZJsu.s:1709   .bss.ServoControlTasHandle:0000000000000000 ServoControlTasHandle
     /tmp/ccgPZJsu.s:1743   .rodata.AttitudeTask_attributes:0000000000000000 AttitudeTask_attributes
     /tmp/ccgPZJsu.s:1676   .bss.AttitudeTaskHandle:0000000000000000 AttitudeTaskHandle
ARM GAS  /tmp/ccgPZJsu.s 			page 46


     /tmp/ccgPZJsu.s:1787   .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
     /tmp/ccgPZJsu.s:1722   .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccgPZJsu.s:1715   .bss.TempData:0000000000000000 TempData
     /tmp/ccgPZJsu.s:1689   .bss.GyroData:0000000000000000 GyroData
     /tmp/ccgPZJsu.s:1695   .bss.MagData:0000000000000000 MagData
     /tmp/ccgPZJsu.s:1669   .bss.AccData:0000000000000000 AccData
     /tmp/ccgPZJsu.s:1736   .bss.quatQueue:0000000000000000 quatQueue
     /tmp/ccgPZJsu.s:1729   .bss.imuData:0000000000000000 imuData
     /tmp/ccgPZJsu.s:1666   .bss.AccData:0000000000000000 $d
     /tmp/ccgPZJsu.s:1672   .bss.AttitudeTaskHandle:0000000000000000 $d
     /tmp/ccgPZJsu.s:1679   .bss.GaitControlTaskHandle:0000000000000000 $d
     /tmp/ccgPZJsu.s:1686   .bss.GyroData:0000000000000000 $d
     /tmp/ccgPZJsu.s:1692   .bss.MagData:0000000000000000 $d
     /tmp/ccgPZJsu.s:1698   .bss.SerialCommTaskHandle:0000000000000000 $d
     /tmp/ccgPZJsu.s:1705   .bss.ServoControlTasHandle:0000000000000000 $d
     /tmp/ccgPZJsu.s:1712   .bss.TempData:0000000000000000 $d
     /tmp/ccgPZJsu.s:1718   .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccgPZJsu.s:1725   .bss.imuData:0000000000000000 $d
     /tmp/ccgPZJsu.s:1732   .bss.quatQueue:0000000000000000 $d
     /tmp/ccgPZJsu.s:1739   .rodata.AttitudeTask_attributes:0000000000000000 $d
     /tmp/ccgPZJsu.s:1750   .rodata.GaitControlTask_attributes:0000000000000000 $d
     /tmp/ccgPZJsu.s:1761   .rodata.SerialCommTask_attributes:0000000000000000 $d
     /tmp/ccgPZJsu.s:1772   .rodata.ServoControlTas_attributes:0000000000000000 $d
     /tmp/ccgPZJsu.s:1783   .rodata.defaultTask_attributes:0000000000000000 $d

UNDEFINED SYMBOLS
MPU9250_GetData
snprintf
HAL_UART_Transmit
osDelay
huart1
AHRS_Update
AHRS_GetQuaternion
xQueueGenericSend
vTaskDelay
Set_Servo_Angle
Gait_Forward
Gait_Backward
Gait_Turn_Left
Gait_Turn_Right
Gait_March_In_Place
current_action
Servo_Init
AHRS_Init
xQueueGenericCreate
osThreadNew
Move_Forward
Move_Backward
Turn_Left
Turn_Right
Stop
HAL_UART_Receive
