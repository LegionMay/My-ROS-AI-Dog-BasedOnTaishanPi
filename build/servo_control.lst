ARM GAS  /tmp/ccipX9KJ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"servo_control.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.Servo_Init,"ax",%progbits
  17              		.align	1
  18              		.global	Servo_Init
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	Servo_Init:
  26              	.LFB144:
  27              		.file 1 "Core/Src/servo_control.c"
   1:Core/Src/servo_control.c **** // servo_control.c
   2:Core/Src/servo_control.c **** 
   3:Core/Src/servo_control.c **** #include "servo_control.h"
   4:Core/Src/servo_control.c **** 
   5:Core/Src/servo_control.c **** // 定义180度舵机的PWM信号范围
   6:Core/Src/servo_control.c **** #define SERVO_MIN_PULSE_WIDTH 500   // 最小脉宽 (0.5 ms)
   7:Core/Src/servo_control.c **** #define SERVO_MAX_PULSE_WIDTH 2500  // 最大脉宽 (2.5 ms)
   8:Core/Src/servo_control.c **** 
   9:Core/Src/servo_control.c **** extern TIM_HandleTypeDef htim3;
  10:Core/Src/servo_control.c **** extern TIM_HandleTypeDef htim4;
  11:Core/Src/servo_control.c **** extern TIM_HandleTypeDef htim5;
  12:Core/Src/servo_control.c **** extern TIM_HandleTypeDef htim8;
  13:Core/Src/servo_control.c **** extern TIM_HandleTypeDef htim12;
  14:Core/Src/servo_control.c **** extern TIM_HandleTypeDef htim13;
  15:Core/Src/servo_control.c **** extern TIM_HandleTypeDef htim14;
  16:Core/Src/servo_control.c **** extern TIM_HandleTypeDef htim15;
  17:Core/Src/servo_control.c **** extern TIM_HandleTypeDef htim16;
  18:Core/Src/servo_control.c **** 
  19:Core/Src/servo_control.c **** ServoControl servos[8];
  20:Core/Src/servo_control.c **** 
  21:Core/Src/servo_control.c **** static TIM_HandleTypeDef* servo_timers[] = {
  22:Core/Src/servo_control.c ****     &htim3,
  23:Core/Src/servo_control.c ****     &htim4,
  24:Core/Src/servo_control.c ****     &htim5,
  25:Core/Src/servo_control.c ****     &htim8,
  26:Core/Src/servo_control.c ****     &htim12,
  27:Core/Src/servo_control.c ****     &htim13,
  28:Core/Src/servo_control.c ****     &htim14,
  29:Core/Src/servo_control.c ****     &htim15,
  30:Core/Src/servo_control.c ****     &htim16
  31:Core/Src/servo_control.c **** };
ARM GAS  /tmp/ccipX9KJ.s 			page 2


  32:Core/Src/servo_control.c **** 
  33:Core/Src/servo_control.c **** static uint32_t servo_channels[] = {
  34:Core/Src/servo_control.c ****     TIM_CHANNEL_1,
  35:Core/Src/servo_control.c ****     TIM_CHANNEL_1,
  36:Core/Src/servo_control.c ****     TIM_CHANNEL_1,
  37:Core/Src/servo_control.c ****     TIM_CHANNEL_1,
  38:Core/Src/servo_control.c ****     TIM_CHANNEL_1,
  39:Core/Src/servo_control.c ****     TIM_CHANNEL_1,
  40:Core/Src/servo_control.c ****     TIM_CHANNEL_1,
  41:Core/Src/servo_control.c ****     TIM_CHANNEL_1,
  42:Core/Src/servo_control.c ****     TIM_CHANNEL_1
  43:Core/Src/servo_control.c **** };
  44:Core/Src/servo_control.c **** 
  45:Core/Src/servo_control.c **** void Servo_Init(void) {
  28              		.loc 1 45 23 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  46:Core/Src/servo_control.c ****     int num_servos = sizeof(servo_timers) / sizeof(servo_timers[0]);
  37              		.loc 1 46 5 view .LVU1
  38              	.LVL0:
  47:Core/Src/servo_control.c ****     // 初始化所有定时器的PWM频率为50Hz (周期为20ms)
  48:Core/Src/servo_control.c ****     for (int i = 0; i < num_servos; i++) {
  39              		.loc 1 48 5 view .LVU2
  40              	.LBB2:
  41              		.loc 1 48 10 view .LVU3
  42              		.loc 1 48 14 is_stmt 0 view .LVU4
  43 0002 0024     		movs	r4, #0
  44              		.loc 1 48 5 view .LVU5
  45 0004 10E0     		b	.L2
  46              	.LVL1:
  47              	.L3:
  49:Core/Src/servo_control.c ****         __HAL_TIM_SET_PRESCALER(servo_timers[i], 239); // 240MHz / (239 + 1) = 1MHz
  48              		.loc 1 49 9 is_stmt 1 discriminator 3 view .LVU6
  49 0006 0A4B     		ldr	r3, .L5
  50 0008 53F82400 		ldr	r0, [r3, r4, lsl #2]
  51 000c 0368     		ldr	r3, [r0]
  52 000e EF22     		movs	r2, #239
  53 0010 9A62     		str	r2, [r3, #40]
  50:Core/Src/servo_control.c ****         __HAL_TIM_SET_AUTORELOAD(servo_timers[i], 19999); // 1MHz / 20000 = 50Hz
  54              		.loc 1 50 9 discriminator 3 view .LVU7
  55              		.loc 1 50 9 discriminator 3 view .LVU8
  56 0012 0268     		ldr	r2, [r0]
  57 0014 44F61F63 		movw	r3, #19999
  58 0018 D362     		str	r3, [r2, #44]
  59              		.loc 1 50 9 discriminator 3 view .LVU9
  60 001a C360     		str	r3, [r0, #12]
  61              		.loc 1 50 9 discriminator 3 view .LVU10
  51:Core/Src/servo_control.c ****         HAL_TIM_PWM_Start(servo_timers[i], servo_channels[i]);
  62              		.loc 1 51 9 discriminator 3 view .LVU11
  63 001c 054B     		ldr	r3, .L5+4
  64 001e 53F82410 		ldr	r1, [r3, r4, lsl #2]
ARM GAS  /tmp/ccipX9KJ.s 			page 3


  65 0022 FFF7FEFF 		bl	HAL_TIM_PWM_Start
  66              	.LVL2:
  48:Core/Src/servo_control.c ****         __HAL_TIM_SET_PRESCALER(servo_timers[i], 239); // 240MHz / (239 + 1) = 1MHz
  67              		.loc 1 48 37 discriminator 3 view .LVU12
  48:Core/Src/servo_control.c ****         __HAL_TIM_SET_PRESCALER(servo_timers[i], 239); // 240MHz / (239 + 1) = 1MHz
  68              		.loc 1 48 38 is_stmt 0 discriminator 3 view .LVU13
  69 0026 0134     		adds	r4, r4, #1
  70              	.LVL3:
  71              	.L2:
  48:Core/Src/servo_control.c ****         __HAL_TIM_SET_PRESCALER(servo_timers[i], 239); // 240MHz / (239 + 1) = 1MHz
  72              		.loc 1 48 21 is_stmt 1 discriminator 1 view .LVU14
  48:Core/Src/servo_control.c ****         __HAL_TIM_SET_PRESCALER(servo_timers[i], 239); // 240MHz / (239 + 1) = 1MHz
  73              		.loc 1 48 5 is_stmt 0 discriminator 1 view .LVU15
  74 0028 082C     		cmp	r4, #8
  75 002a ECDD     		ble	.L3
  76              	.LBE2:
  52:Core/Src/servo_control.c ****     }
  53:Core/Src/servo_control.c **** }
  77              		.loc 1 53 1 view .LVU16
  78 002c 10BD     		pop	{r4, pc}
  79              	.LVL4:
  80              	.L6:
  81              		.loc 1 53 1 view .LVU17
  82 002e 00BF     		.align	2
  83              	.L5:
  84 0030 00000000 		.word	.LANCHOR0
  85 0034 00000000 		.word	.LANCHOR1
  86              		.cfi_endproc
  87              	.LFE144:
  89              		.section	.text.Set_Servo_Angle,"ax",%progbits
  90              		.align	1
  91              		.global	Set_Servo_Angle
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu fpv5-d16
  97              	Set_Servo_Angle:
  98              	.LVL5:
  99              	.LFB145:
  54:Core/Src/servo_control.c **** 
  55:Core/Src/servo_control.c **** void Set_Servo_Angle(ServoID servo, float angle) {
 100              		.loc 1 55 50 is_stmt 1 view -0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
  56:Core/Src/servo_control.c ****     if (servo < 0 || servo >= sizeof(servo_timers) / sizeof(servo_timers[0])) {
 105              		.loc 1 56 5 view .LVU19
 106              		.loc 1 56 8 is_stmt 0 view .LVU20
 107 0000 0828     		cmp	r0, #8
 108 0002 35D8     		bhi	.L7
  57:Core/Src/servo_control.c ****         return; // 无效的舵机索引
  58:Core/Src/servo_control.c ****     }
  59:Core/Src/servo_control.c ****     if (angle < 0.0f) angle = 0.0f;
 109              		.loc 1 59 5 is_stmt 1 view .LVU21
 110              		.loc 1 59 8 is_stmt 0 view .LVU22
 111 0004 B5EEC00A 		vcmpe.f32	s0, #0
ARM GAS  /tmp/ccipX9KJ.s 			page 4


 112 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 113 000c 20D4     		bmi	.L18
 114              	.LVL6:
 115              	.L9:
  60:Core/Src/servo_control.c ****     if (angle > 180.0f) angle = 180.0f;
 116              		.loc 1 60 5 is_stmt 1 view .LVU23
 117              		.loc 1 60 8 is_stmt 0 view .LVU24
 118 000e DFED257A 		vldr.32	s15, .L23
 119 0012 B4EEE70A 		vcmpe.f32	s0, s15
 120 0016 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 121 001a 01DD     		ble	.L10
 122              		.loc 1 60 31 view .LVU25
 123 001c B0EE670A 		vmov.f32	s0, s15
 124              	.LVL7:
 125              	.L10:
  61:Core/Src/servo_control.c **** 
  62:Core/Src/servo_control.c ****     // 将角度转换为对应的脉宽值 (0.5ms到2.5ms)
  63:Core/Src/servo_control.c ****     uint32_t pulse_width = SERVO_MIN_PULSE_WIDTH + (uint32_t)((angle / 180.0f) * (SERVO_MAX_PULSE_W
 126              		.loc 1 63 5 is_stmt 1 view .LVU26
 127              		.loc 1 63 70 is_stmt 0 view .LVU27
 128 0020 9FED207A 		vldr.32	s14, .L23
 129 0024 C0EE077A 		vdiv.f32	s15, s0, s14
 130              		.loc 1 63 80 view .LVU28
 131 0028 9FED1F7A 		vldr.32	s14, .L23+4
 132 002c 67EE877A 		vmul.f32	s15, s15, s14
 133              		.loc 1 63 52 view .LVU29
 134 0030 FCEEE77A 		vcvt.u32.f32	s15, s15
 135              		.loc 1 63 14 view .LVU30
 136 0034 17EE903A 		vmov	r3, s15	@ int
 137 0038 03F5FA73 		add	r3, r3, #500
 138              	.LVL8:
  64:Core/Src/servo_control.c ****     __HAL_TIM_SET_COMPARE(servo_timers[servo], servo_channels[servo], pulse_width);
 139              		.loc 1 64 5 is_stmt 1 view .LVU31
 140 003c 1B4A     		ldr	r2, .L23+8
 141 003e 52F82020 		ldr	r2, [r2, r0, lsl #2]
 142 0042 42B9     		cbnz	r2, .L11
 143              		.loc 1 64 5 is_stmt 0 discriminator 1 view .LVU32
 144 0044 1A4A     		ldr	r2, .L23+12
 145 0046 52F82020 		ldr	r2, [r2, r0, lsl #2]
 146 004a 1268     		ldr	r2, [r2]
 147 004c 5363     		str	r3, [r2, #52]
 148 004e 7047     		bx	lr
 149              	.LVL9:
 150              	.L18:
  59:Core/Src/servo_control.c ****     if (angle > 180.0f) angle = 180.0f;
 151              		.loc 1 59 29 view .LVU33
 152 0050 9FED180A 		vldr.32	s0, .L23+16
 153              	.LVL10:
  59:Core/Src/servo_control.c ****     if (angle > 180.0f) angle = 180.0f;
 154              		.loc 1 59 29 view .LVU34
 155 0054 DBE7     		b	.L9
 156              	.LVL11:
 157              	.L11:
 158              		.loc 1 64 5 discriminator 2 view .LVU35
 159 0056 042A     		cmp	r2, #4
 160 0058 0BD0     		beq	.L19
 161              		.loc 1 64 5 discriminator 4 view .LVU36
ARM GAS  /tmp/ccipX9KJ.s 			page 5


 162 005a 082A     		cmp	r2, #8
 163 005c 0FD0     		beq	.L20
 164              		.loc 1 64 5 discriminator 7 view .LVU37
 165 005e 0C2A     		cmp	r2, #12
 166 0060 13D0     		beq	.L21
 167              		.loc 1 64 5 discriminator 10 view .LVU38
 168 0062 102A     		cmp	r2, #16
 169 0064 17D0     		beq	.L22
 170              		.loc 1 64 5 discriminator 13 view .LVU39
 171 0066 124A     		ldr	r2, .L23+12
 172 0068 52F82020 		ldr	r2, [r2, r0, lsl #2]
 173 006c 1268     		ldr	r2, [r2]
 174 006e D365     		str	r3, [r2, #92]
 175              	.LVL12:
 176              	.L7:
  65:Core/Src/servo_control.c **** }
 177              		.loc 1 65 1 view .LVU40
 178 0070 7047     		bx	lr
 179              	.LVL13:
 180              	.L19:
  64:Core/Src/servo_control.c ****     __HAL_TIM_SET_COMPARE(servo_timers[servo], servo_channels[servo], pulse_width);
 181              		.loc 1 64 5 discriminator 3 view .LVU41
 182 0072 0F4A     		ldr	r2, .L23+12
 183 0074 52F82020 		ldr	r2, [r2, r0, lsl #2]
 184 0078 1268     		ldr	r2, [r2]
 185 007a 9363     		str	r3, [r2, #56]
 186 007c 7047     		bx	lr
 187              	.L20:
  64:Core/Src/servo_control.c ****     __HAL_TIM_SET_COMPARE(servo_timers[servo], servo_channels[servo], pulse_width);
 188              		.loc 1 64 5 discriminator 6 view .LVU42
 189 007e 0C4A     		ldr	r2, .L23+12
 190 0080 52F82020 		ldr	r2, [r2, r0, lsl #2]
 191 0084 1268     		ldr	r2, [r2]
 192 0086 D363     		str	r3, [r2, #60]
 193 0088 7047     		bx	lr
 194              	.L21:
  64:Core/Src/servo_control.c ****     __HAL_TIM_SET_COMPARE(servo_timers[servo], servo_channels[servo], pulse_width);
 195              		.loc 1 64 5 discriminator 9 view .LVU43
 196 008a 094A     		ldr	r2, .L23+12
 197 008c 52F82020 		ldr	r2, [r2, r0, lsl #2]
 198 0090 1268     		ldr	r2, [r2]
 199 0092 1364     		str	r3, [r2, #64]
 200 0094 7047     		bx	lr
 201              	.L22:
  64:Core/Src/servo_control.c ****     __HAL_TIM_SET_COMPARE(servo_timers[servo], servo_channels[servo], pulse_width);
 202              		.loc 1 64 5 discriminator 12 view .LVU44
 203 0096 064A     		ldr	r2, .L23+12
 204 0098 52F82020 		ldr	r2, [r2, r0, lsl #2]
 205 009c 1268     		ldr	r2, [r2]
 206 009e 9365     		str	r3, [r2, #88]
 207 00a0 7047     		bx	lr
 208              	.L24:
 209 00a2 00BF     		.align	2
 210              	.L23:
 211 00a4 00003443 		.word	1127481344
 212 00a8 0000FA44 		.word	1157234688
 213 00ac 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccipX9KJ.s 			page 6


 214 00b0 00000000 		.word	.LANCHOR0
 215 00b4 00000000 		.word	0
 216              		.cfi_endproc
 217              	.LFE145:
 219              		.section	.text.Init_Servos,"ax",%progbits
 220              		.align	1
 221              		.global	Init_Servos
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu fpv5-d16
 227              	Init_Servos:
 228              	.LFB146:
  66:Core/Src/servo_control.c **** 
  67:Core/Src/servo_control.c **** // 初始化舵机控制数组
  68:Core/Src/servo_control.c **** void Init_Servos() {
 229              		.loc 1 68 20 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
  69:Core/Src/servo_control.c ****     for (int i = 0; i < sizeof(servos) / sizeof(servos[0]); i++) {
 234              		.loc 1 69 5 view .LVU46
 235              	.LBB3:
 236              		.loc 1 69 10 view .LVU47
 237              	.LVL14:
 238              		.loc 1 69 14 is_stmt 0 view .LVU48
 239 0000 0023     		movs	r3, #0
 240              		.loc 1 69 5 view .LVU49
 241 0002 08E0     		b	.L26
 242              	.LVL15:
 243              	.L27:
  70:Core/Src/servo_control.c ****         servos[i].servo = i;
 244              		.loc 1 70 9 is_stmt 1 discriminator 3 view .LVU50
 245              		.loc 1 70 25 is_stmt 0 discriminator 3 view .LVU51
 246 0004 0549     		ldr	r1, .L28
 247 0006 03EB8300 		add	r0, r3, r3, lsl #2
 248 000a 8200     		lsls	r2, r0, #2
 249 000c 8818     		adds	r0, r1, r2
 250 000e 8B54     		strb	r3, [r1, r2]
  71:Core/Src/servo_control.c ****         servos[i].target_angle = 0.0f;
 251              		.loc 1 71 9 is_stmt 1 discriminator 3 view .LVU52
 252              		.loc 1 71 32 is_stmt 0 discriminator 3 view .LVU53
 253 0010 0022     		movs	r2, #0
 254 0012 4260     		str	r2, [r0, #4]	@ float
  69:Core/Src/servo_control.c ****     for (int i = 0; i < sizeof(servos) / sizeof(servos[0]); i++) {
 255              		.loc 1 69 61 is_stmt 1 discriminator 3 view .LVU54
  69:Core/Src/servo_control.c ****     for (int i = 0; i < sizeof(servos) / sizeof(servos[0]); i++) {
 256              		.loc 1 69 62 is_stmt 0 discriminator 3 view .LVU55
 257 0014 0133     		adds	r3, r3, #1
 258              	.LVL16:
 259              	.L26:
  69:Core/Src/servo_control.c ****     for (int i = 0; i < sizeof(servos) / sizeof(servos[0]); i++) {
 260              		.loc 1 69 21 is_stmt 1 discriminator 1 view .LVU56
  69:Core/Src/servo_control.c ****     for (int i = 0; i < sizeof(servos) / sizeof(servos[0]); i++) {
 261              		.loc 1 69 5 is_stmt 0 discriminator 1 view .LVU57
 262 0016 072B     		cmp	r3, #7
ARM GAS  /tmp/ccipX9KJ.s 			page 7


 263 0018 F4D9     		bls	.L27
 264              	.LBE3:
  72:Core/Src/servo_control.c ****     }
  73:Core/Src/servo_control.c **** }...
 265              		.loc 1 73 1 view .LVU58
 266 001a 7047     		bx	lr
 267              	.L29:
 268              		.align	2
 269              	.L28:
 270 001c 00000000 		.word	.LANCHOR2
 271              		.cfi_endproc
 272              	.LFE146:
 274              		.global	servos
 275              		.section	.bss.servos,"aw",%nobits
 276              		.align	2
 277              		.set	.LANCHOR2,. + 0
 280              	servos:
 281 0000 00000000 		.space	160
 281      00000000 
 281      00000000 
 281      00000000 
 281      00000000 
 282              		.section	.rodata.servo_channels,"a"
 283              		.align	2
 284              		.set	.LANCHOR1,. + 0
 287              	servo_channels:
 288 0000 00000000 		.space	36
 288      00000000 
 288      00000000 
 288      00000000 
 288      00000000 
 289              		.section	.rodata.servo_timers,"a"
 290              		.align	2
 291              		.set	.LANCHOR0,. + 0
 294              	servo_timers:
 295 0000 00000000 		.word	htim3
 296 0004 00000000 		.word	htim4
 297 0008 00000000 		.word	htim5
 298 000c 00000000 		.word	htim8
 299 0010 00000000 		.word	htim12
 300 0014 00000000 		.word	htim13
 301 0018 00000000 		.word	htim14
 302 001c 00000000 		.word	htim15
 303 0020 00000000 		.word	htim16
 304              		.text
 305              	.Letext0:
 306              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 307              		.file 3 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 308              		.file 4 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 309              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 310              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 311              		.file 7 "Core/Inc/servo_control.h"
ARM GAS  /tmp/ccipX9KJ.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 servo_control.c
     /tmp/ccipX9KJ.s:17     .text.Servo_Init:0000000000000000 $t
     /tmp/ccipX9KJ.s:25     .text.Servo_Init:0000000000000000 Servo_Init
     /tmp/ccipX9KJ.s:84     .text.Servo_Init:0000000000000030 $d
     /tmp/ccipX9KJ.s:90     .text.Set_Servo_Angle:0000000000000000 $t
     /tmp/ccipX9KJ.s:97     .text.Set_Servo_Angle:0000000000000000 Set_Servo_Angle
     /tmp/ccipX9KJ.s:211    .text.Set_Servo_Angle:00000000000000a4 $d
     /tmp/ccipX9KJ.s:220    .text.Init_Servos:0000000000000000 $t
     /tmp/ccipX9KJ.s:227    .text.Init_Servos:0000000000000000 Init_Servos
     /tmp/ccipX9KJ.s:270    .text.Init_Servos:000000000000001c $d
     /tmp/ccipX9KJ.s:280    .bss.servos:0000000000000000 servos
     /tmp/ccipX9KJ.s:276    .bss.servos:0000000000000000 $d
     /tmp/ccipX9KJ.s:283    .rodata.servo_channels:0000000000000000 $d
     /tmp/ccipX9KJ.s:287    .rodata.servo_channels:0000000000000000 servo_channels
     /tmp/ccipX9KJ.s:290    .rodata.servo_timers:0000000000000000 $d
     /tmp/ccipX9KJ.s:294    .rodata.servo_timers:0000000000000000 servo_timers

UNDEFINED SYMBOLS
HAL_TIM_PWM_Start
htim3
htim4
htim5
htim8
htim12
htim13
htim14
htim15
htim16
